   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f30x_pwr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.align	2
  20              		.global	PWR_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	PWR_DeInit:
  25              	.LFB111:
  26              		.file 1 "../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c"
   1:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /**
   2:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   ******************************************************************************
   3:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @file    stm32f30x_pwr.c
   4:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @version V1.0.1
   6:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @date    23-October-2012
   7:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *          functionalities of the Power Controller (PWR) peripheral:           
   9:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *           + Backup Domain Access
  10:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *           + PVD configuration
  11:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *           + WakeUp pins configuration
  12:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *           + Low Power modes configuration
  13:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *           + Flags management
  14:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *               
  15:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   ******************************************************************************
  16:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @attention
  17:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *
  18:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  19:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *
  20:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  21:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * You may not use this file except in compliance with the License.
  22:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * You may obtain a copy of the License at:
  23:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *
  24:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  25:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *
  26:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * Unless required by applicable law or agreed to in writing, software 
  27:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  28:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  29:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * See the License for the specific language governing permissions and
  30:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * limitations under the License.
  31:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *
  32:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   ******************************************************************************
  33:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
  34:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
  35:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /* Includes ------------------------------------------------------------------*/
  36:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** #include "stm32f30x_pwr.h"
  37:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** #include "stm32f30x_rcc.h"
  38:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
  39:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /** @addtogroup STM32F30x_StdPeriph_Driver
  40:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @{
  41:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
  42:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
  43:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /** @defgroup PWR 
  44:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @brief PWR driver modules
  45:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @{
  46:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */ 
  47:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
  48:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /* Private typedef -----------------------------------------------------------*/
  49:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /* Private define ------------------------------------------------------------*/
  50:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /* --------- PWR registers bit address in the alias region ---------- */
  51:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** #define PWR_OFFSET               (PWR_BASE - PERIPH_BASE)
  52:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
  53:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /* --- CR Register ---*/
  54:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
  55:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /* Alias word address of DBP bit */
  56:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** #define CR_OFFSET                (PWR_OFFSET + 0x00)
  57:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** #define DBP_BitNumber            0x08
  58:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** #define CR_DBP_BB                (PERIPH_BB_BASE + (CR_OFFSET * 32) + (DBP_BitNumber * 4))
  59:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
  60:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /* Alias word address of PVDE bit */
  61:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** #define PVDE_BitNumber           0x04
  62:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** #define CR_PVDE_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PVDE_BitNumber * 4))
  63:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
  64:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /* ------------------ PWR registers bit mask ------------------------ */
  65:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
  66:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /* CR register bit mask */
  67:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** #define CR_DS_MASK               ((uint32_t)0xFFFFFFFC)
  68:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** #define CR_PLS_MASK              ((uint32_t)0xFFFFFF1F)
  69:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
  70:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /* Private macro -------------------------------------------------------------*/
  71:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /* Private variables ---------------------------------------------------------*/
  72:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /* Private function prototypes -----------------------------------------------*/
  73:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /* Private functions ---------------------------------------------------------*/
  74:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
  75:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /** @defgroup PWR_Private_Functions
  76:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @{
  77:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
  78:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
  79:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /** @defgroup PWR_Group1 Backup Domain Access function 
  80:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****  *  @brief   Backup Domain Access function
  81:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****  *
  82:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** @verbatim
  83:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   ==============================================================================
  84:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****                    ##### Backup Domain Access function #####
  85:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   ==============================================================================
  86:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
  87:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     [..] After reset, the Backup Domain Registers (RCC BDCR Register, RTC registers
  88:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****          and RTC backup registers) are protected against possible stray write accesses.
  89:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     [..] To enable access to Backup domain use the PWR_BackupAccessCmd(ENABLE) function.
  90:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
  91:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** @endverbatim
  92:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @{
  93:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
  94:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
  95:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /**
  96:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @brief  Deinitializes the PWR peripheral registers to their default reset values.
  97:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @param  None
  98:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @retval None
  99:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
 100:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** void PWR_DeInit(void)
 101:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** {
  27              		.loc 1 101 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 3, -8
 102:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_PWR, ENABLE);
  36              		.loc 1 102 0
  37 0002 4FF08050 		mov	r0, #268435456
  38 0006 4FF00101 		mov	r1, #1
  39 000a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 103:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_PWR, DISABLE);
  40              		.loc 1 103 0
  41 000e 4FF08050 		mov	r0, #268435456
  42 0012 4FF00001 		mov	r1, #0
  43 0016 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 104:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** }
  44              		.loc 1 104 0
  45 001a 08BD     		pop	{r3, pc}
  46              		.cfi_endproc
  47              	.LFE111:
  49              		.align	2
  50              		.global	PWR_BackupAccessCmd
  51              		.thumb
  52              		.thumb_func
  54              	PWR_BackupAccessCmd:
  55              	.LFB112:
 105:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 106:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /**
 107:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @brief  Enables or disables access to the RTC and backup registers.
 108:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @note   If the HSE divided by 32 is used as the RTC clock, the 
 109:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *         Backup Domain Access should be kept enabled.
 110:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @param  NewState: new state of the access to the RTC and backup registers.
 111:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *         This parameter can be: ENABLE or DISABLE.
 112:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @retval None
 113:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
 114:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** void PWR_BackupAccessCmd(FunctionalState NewState)
 115:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** {
  56              		.loc 1 115 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 8
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61 001c 82B0     		sub	sp, sp, #8
  62              	.LCFI1:
  63              		.cfi_def_cfa_offset 8
  64 001e 0346     		mov	r3, r0
  65 0020 8DF80730 		strb	r3, [sp, #7]
 116:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Check the parameters */
 117:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 118:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)NewState;
  66              		.loc 1 118 0
  67 0024 4FF02003 		mov	r3, #32
  68 0028 C4F20E23 		movt	r3, 16910
  69 002c 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
  70 0030 1A60     		str	r2, [r3, #0]
 119:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** }
  71              		.loc 1 119 0
  72 0032 02B0     		add	sp, sp, #8
  73 0034 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE112:
  77 0036 00BF     		.align	2
  78              		.global	PWR_PVDLevelConfig
  79              		.thumb
  80              		.thumb_func
  82              	PWR_PVDLevelConfig:
  83              	.LFB113:
 120:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 121:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /**
 122:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @}
 123:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
 124:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 125:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /** @defgroup PWR_Group2 PVD configuration functions
 126:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****  *  @brief   PVD configuration functions 
 127:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****  *
 128:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** @verbatim   
 129:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****  ===============================================================================
 130:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****                     ##### PVD configuration functions #####
 131:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   ==============================================================================
 132:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   [..]
 133:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   (+) The PVD is used to monitor the VDD power supply by comparing it to a threshold
 134:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****       selected by the PVD Level (PLS[2:0] bits in the PWR_CR).
 135:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   (+) A PVDO flag is available to indicate if VDD/VDDA is higher or lower than the 
 136:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****       PVD threshold. This event is internally connected to the EXTI line16
 137:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****       and can generate an interrupt if enabled through the EXTI registers.
 138:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   (+) The PVD is stopped in Standby mode.
 139:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 140:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** @endverbatim
 141:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @{
 142:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
 143:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 144:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /**
 145:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @brief  Configures the voltage threshold detected by the Power Voltage Detector(PVD).
 146:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @param  PWR_PVDLevel: specifies the PVD detection level
 147:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *         This parameter can be one of the following values:
 148:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *             @arg PWR_PVDLevel_0: PVD detection level set to 2.18V
 149:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *             @arg PWR_PVDLevel_1: PVD detection level set to 2.28V
 150:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *             @arg PWR_PVDLevel_2: PVD detection level set to 2.38V
 151:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *             @arg PWR_PVDLevel_3: PVD detection level set to 2.48V
 152:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *             @arg PWR_PVDLevel_4: PVD detection level set to 2.58V
 153:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *             @arg PWR_PVDLevel_5: PVD detection level set to 2.68V
 154:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *             @arg PWR_PVDLevel_6: PVD detection level set to 2.78V
 155:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *             @arg PWR_PVDLevel_7: PVD detection level set to 2.88V
 156:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @retval None
 157:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
 158:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** void PWR_PVDLevelConfig(uint32_t PWR_PVDLevel)
 159:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** {
  84              		.loc 1 159 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 16
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89 0038 84B0     		sub	sp, sp, #16
  90              	.LCFI2:
  91              		.cfi_def_cfa_offset 16
  92 003a 0190     		str	r0, [sp, #4]
 160:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   uint32_t tmpreg = 0;
  93              		.loc 1 160 0
  94 003c 4FF00003 		mov	r3, #0
  95 0040 0393     		str	r3, [sp, #12]
 161:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   
 162:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Check the parameters */
 163:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   assert_param(IS_PWR_PVD_LEVEL(PWR_PVDLevel));
 164:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   
 165:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   tmpreg = PWR->CR;
  96              		.loc 1 165 0
  97 0042 4FF4E043 		mov	r3, #28672
  98 0046 C4F20003 		movt	r3, 16384
  99 004a 1B68     		ldr	r3, [r3, #0]
 100 004c 0393     		str	r3, [sp, #12]
 166:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   
 167:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Clear PLS[7:5] bits */
 168:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   tmpreg &= CR_PLS_MASK;
 101              		.loc 1 168 0
 102 004e 039B     		ldr	r3, [sp, #12]
 103 0050 23F0E003 		bic	r3, r3, #224
 104 0054 0393     		str	r3, [sp, #12]
 169:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   
 170:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Set PLS[7:5] bits according to PWR_PVDLevel value */
 171:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   tmpreg |= PWR_PVDLevel;
 105              		.loc 1 171 0
 106 0056 039A     		ldr	r2, [sp, #12]
 107 0058 019B     		ldr	r3, [sp, #4]
 108 005a 1343     		orrs	r3, r3, r2
 109 005c 0393     		str	r3, [sp, #12]
 172:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   
 173:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Store the new value */
 174:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   PWR->CR = tmpreg;
 110              		.loc 1 174 0
 111 005e 4FF4E043 		mov	r3, #28672
 112 0062 C4F20003 		movt	r3, 16384
 113 0066 039A     		ldr	r2, [sp, #12]
 114 0068 1A60     		str	r2, [r3, #0]
 175:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** }
 115              		.loc 1 175 0
 116 006a 04B0     		add	sp, sp, #16
 117 006c 7047     		bx	lr
 118              		.cfi_endproc
 119              	.LFE113:
 121 006e 00BF     		.align	2
 122              		.global	PWR_PVDCmd
 123              		.thumb
 124              		.thumb_func
 126              	PWR_PVDCmd:
 127              	.LFB114:
 176:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 177:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /**
 178:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @brief  Enables or disables the Power Voltage Detector(PVD).
 179:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @param  NewState: new state of the PVD.
 180:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *         This parameter can be: ENABLE or DISABLE.
 181:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @retval None
 182:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
 183:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** void PWR_PVDCmd(FunctionalState NewState)
 184:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** {
 128              		.loc 1 184 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 8
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 133 0070 82B0     		sub	sp, sp, #8
 134              	.LCFI3:
 135              		.cfi_def_cfa_offset 8
 136 0072 0346     		mov	r3, r0
 137 0074 8DF80730 		strb	r3, [sp, #7]
 185:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Check the parameters */
 186:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 187:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)NewState;
 138              		.loc 1 187 0
 139 0078 4FF01003 		mov	r3, #16
 140 007c C4F20E23 		movt	r3, 16910
 141 0080 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 142 0084 1A60     		str	r2, [r3, #0]
 188:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** }
 143              		.loc 1 188 0
 144 0086 02B0     		add	sp, sp, #8
 145 0088 7047     		bx	lr
 146              		.cfi_endproc
 147              	.LFE114:
 149 008a 00BF     		.align	2
 150              		.global	PWR_WakeUpPinCmd
 151              		.thumb
 152              		.thumb_func
 154              	PWR_WakeUpPinCmd:
 155              	.LFB115:
 189:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 190:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /**
 191:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @}
 192:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
 193:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 194:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /** @defgroup PWR_Group3 WakeUp pins configuration functions
 195:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****  *  @brief   WakeUp pins configuration functions 
 196:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****  *
 197:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** @verbatim   
 198:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****  ===============================================================================
 199:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****               ##### WakeUp pins configuration functions #####
 200:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****  ===============================================================================  
 201:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     [..]
 202:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     (+) WakeUp pins are used to wakeup the system from Standby mode. These pins are 
 203:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****         forced in input pull down configuration and are active on rising edges.
 204:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     (+) There are three WakeUp pins: WakeUp Pin 1 on PA.00, WakeUp Pin 2 on PC.13 and
 205:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****         WakeUp Pin 3 on PE.06.
 206:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 207:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** @endverbatim
 208:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @{
 209:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
 210:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 211:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /**
 212:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @brief  Enables or disables the WakeUp Pin functionality.
 213:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @param  PWR_WakeUpPin: specifies the WakeUpPin.
 214:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *         This parameter can be: PWR_WakeUpPin_1, PWR_WakeUpPin_2 or PWR_WakeUpPin_3.
 215:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @param  NewState: new state of the WakeUp Pin functionality.
 216:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *         This parameter can be: ENABLE or DISABLE.
 217:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @retval None
 218:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
 219:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** void PWR_WakeUpPinCmd(uint32_t PWR_WakeUpPin, FunctionalState NewState)
 220:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** {  
 156              		.loc 1 220 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 8
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 161 008c 82B0     		sub	sp, sp, #8
 162              	.LCFI4:
 163              		.cfi_def_cfa_offset 8
 164 008e 0190     		str	r0, [sp, #4]
 165 0090 0B46     		mov	r3, r1
 166 0092 8DF80330 		strb	r3, [sp, #3]
 221:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Check the parameters */
 222:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(PWR_WakeUpPin));  
 223:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 224:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 225:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   if (NewState != DISABLE)
 167              		.loc 1 225 0
 168 0096 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 169 009a 002B     		cmp	r3, #0
 170 009c 0CD0     		beq	.L6
 226:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   {
 227:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     /* Enable the EWUPx pin */
 228:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     PWR->CSR |= PWR_WakeUpPin;
 171              		.loc 1 228 0
 172 009e 4FF4E043 		mov	r3, #28672
 173 00a2 C4F20003 		movt	r3, 16384
 174 00a6 4FF4E042 		mov	r2, #28672
 175 00aa C4F20002 		movt	r2, 16384
 176 00ae 5168     		ldr	r1, [r2, #4]
 177 00b0 019A     		ldr	r2, [sp, #4]
 178 00b2 0A43     		orrs	r2, r2, r1
 179 00b4 5A60     		str	r2, [r3, #4]
 180 00b6 0DE0     		b	.L5
 181              	.L6:
 229:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   }
 230:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   else
 231:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   {
 232:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     /* Disable the EWUPx pin */
 233:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     PWR->CSR &= ~PWR_WakeUpPin;
 182              		.loc 1 233 0
 183 00b8 4FF4E043 		mov	r3, #28672
 184 00bc C4F20003 		movt	r3, 16384
 185 00c0 4FF4E042 		mov	r2, #28672
 186 00c4 C4F20002 		movt	r2, 16384
 187 00c8 5168     		ldr	r1, [r2, #4]
 188 00ca 019A     		ldr	r2, [sp, #4]
 189 00cc 6FEA0202 		mvn	r2, r2
 190 00d0 0A40     		ands	r2, r2, r1
 191 00d2 5A60     		str	r2, [r3, #4]
 192              	.L5:
 234:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   }
 235:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** }
 193              		.loc 1 235 0
 194 00d4 02B0     		add	sp, sp, #8
 195 00d6 7047     		bx	lr
 196              		.cfi_endproc
 197              	.LFE115:
 199              		.align	2
 200              		.global	PWR_EnterSleepMode
 201              		.thumb
 202              		.thumb_func
 204              	PWR_EnterSleepMode:
 205              	.LFB116:
 236:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 237:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /**
 238:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @}
 239:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
 240:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 241:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 242:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /** @defgroup PWR_Group4 Low Power modes configuration functions
 243:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****  *  @brief   Low Power modes configuration functions 
 244:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****  *
 245:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** @verbatim   
 246:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****  ===============================================================================
 247:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****               ##### Low Power modes configuration functions #####
 248:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   ==============================================================================
 249:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 250:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     [..] The devices feature three low-power modes:
 251:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     (+) Sleep mode: Cortex-M4 core stopped, peripherals kept running.
 252:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     (+) Stop mode: all clocks are stopped, regulator running, regulator in low power mode
 253:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     (+) Standby mode: VCORE domain powered off
 254:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 255:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *** Sleep mode *** 
 256:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   ==================
 257:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   [..] 
 258:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     (+) Entry:
 259:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****         (++) The Sleep mode is entered by executing the WFE() or WFI() instructions.
 260:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     (+) Exit:
 261:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****         (++) Any peripheral interrupt acknowledged by the nested vectored interrupt 
 262:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****              controller (NVIC) can wake up the device from Sleep mode.
 263:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 264:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *** Stop mode *** 
 265:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   =================
 266:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   [..] In Stop mode, all clocks in the VCORE domain are stopped, the PLL, the HSI,
 267:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****        and the HSE RC oscillators are disabled. Internal SRAM and register 
 268:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****        contents are preserved.
 269:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****        The voltage regulator can be configured either in normal or low-power mode.
 270:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 271:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     (+) Entry:
 272:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****         (++) The Stop mode is entered using the PWR_EnterSTOPMode(PWR_Regulator_LowPower,) 
 273:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****              function with regulator in LowPower or with Regulator ON.
 274:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     (+) Exit:
 275:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****         (++) Any EXTI Line (Internal or External) configured in Interrupt/Event mode
 276:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****              or any internal IPs (I2C or UASRT) wakeup event.
 277:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 278:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *** Standby mode *** 
 279:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   ====================
 280:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   [..] The Standby mode allows to achieve the lowest power consumption. It is based 
 281:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****        on the Cortex-M4 deepsleep mode, with the voltage regulator disabled. 
 282:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****        The VCORE domain is consequently powered off. The PLL, the HSI, and the HSE 
 283:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****        oscillator are also switched off. SRAM and register 
 284:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****        contents are lost except for the Backup domain (RTC registers, RTC backup 
 285:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****        registers and Standby circuitry).
 286:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****    
 287:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   [..] The voltage regulator is OFF.
 288:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 289:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     (+) Entry:
 290:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****         (++) The Standby mode is entered using the PWR_EnterSTANDBYMode() function.
 291:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     (+) Exit:
 292:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****         (++) WKUP pin rising edge, RTC alarm (Alarm A and Alarm B), RTC wakeup,
 293:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****              tamper event, time-stamp event, external reset in NRST pin, IWDG reset.
 294:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 295:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *** Auto-wakeup (AWU) from low-power mode *** 
 296:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   =============================================
 297:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   [..] The MCU can be woken up from low-power mode by an RTC Alarm event, a tamper 
 298:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****        event, a time-stamp event, or a comparator event, without depending on an 
 299:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****        external interrupt (Auto-wakeup mode).
 300:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 301:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     (+) RTC auto-wakeup (AWU) from the Stop mode
 302:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****         (++) To wake up from the Stop mode with an RTC alarm event, it is necessary to:
 303:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****              (+++) Configure the EXTI Line 17 to be sensitive to rising edges (Interrupt 
 304:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****                    or Event modes) using the EXTI_Init() function.
 305:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****              (+++) Enable the RTC Alarm Interrupt using the RTC_ITConfig() function
 306:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****              (+++) Configure the RTC to generate the RTC alarm using the RTC_SetAlarm() 
 307:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****                    and RTC_AlarmCmd() functions.
 308:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****         (++) To wake up from the Stop mode with an RTC Tamper or time stamp event, it 
 309:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****              is necessary to:
 310:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****              (+++) Configure the EXTI Line 19 to be sensitive to rising edges (Interrupt 
 311:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****                    or Event modes) using the EXTI_Init() function.
 312:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****              (+++) Enable the RTC Tamper or time stamp Interrupt using the RTC_ITConfig() 
 313:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****                    function.
 314:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****              (+++) Configure the RTC to detect the tamper or time stamp event using the
 315:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****                    RTC_TimeStampConfig(), RTC_TamperTriggerConfig() and RTC_TamperCmd()
 316:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****                    functions.
 317:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 318:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     (+) RTC auto-wakeup (AWU) from the Standby mode
 319:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****         (++) To wake up from the Standby mode with an RTC alarm event, it is necessary to:
 320:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****              (+++) Enable the RTC Alarm Interrupt using the RTC_ITConfig() function.
 321:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****              (+++) Configure the RTC to generate the RTC alarm using the RTC_SetAlarm() 
 322:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****                    and RTC_AlarmCmd() functions.
 323:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****         (++) To wake up from the Standby mode with an RTC Tamper or time stamp event, it 
 324:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****              is necessary to:
 325:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****              (+++) Enable the RTC Tamper or time stamp Interrupt using the RTC_ITConfig() 
 326:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****                    function.
 327:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****              (+++) Configure the RTC to detect the tamper or time stamp event using the
 328:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****                    RTC_TimeStampConfig(), RTC_TamperTriggerConfig() and RTC_TamperCmd()
 329:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****                    functions.
 330:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 331:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     (+) Comparator auto-wakeup (AWU) from the Stop mode
 332:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****         (++) To wake up from the Stop mode with a comparator wakeup event, it is necessary to:
 333:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****              (+++) Configure the correspondant comparator EXTI Line to be sensitive to 
 334:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****                    the selected edges (falling, rising or falling and rising) 
 335:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****                    (Interrupt or Event modes) using the EXTI_Init() function.
 336:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****              (+++) Configure the comparator to generate the event.
 337:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 338:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** @endverbatim
 339:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @{
 340:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
 341:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 342:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /**
 343:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @brief  Enters Sleep mode.
 344:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @note   In Sleep mode, all I/O pins keep the same state as in Run mode.                 
 345:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @param  PWR_SLEEPEntry: specifies if SLEEP mode in entered with WFI or WFE instruction.
 346:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *         This parameter can be one of the following values:
 347:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *             @arg PWR_SLEEPEntry_WFI: enter SLEEP mode with WFI instruction
 348:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *             @arg PWR_SLEEPEntry_WFE: enter SLEEP mode with WFE instruction
 349:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @retval None
 350:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
 351:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** void PWR_EnterSleepMode(uint8_t PWR_SLEEPEntry)
 352:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** {
 206              		.loc 1 352 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 8
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              		@ link register save eliminated.
 211 00d8 82B0     		sub	sp, sp, #8
 212              	.LCFI5:
 213              		.cfi_def_cfa_offset 8
 214 00da 0346     		mov	r3, r0
 215 00dc 8DF80730 		strb	r3, [sp, #7]
 353:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Check the parameters */
 354:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(PWR_SLEEPEntry));
 355:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   
 356:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Clear SLEEPDEEP bit of Cortex System Control Register */
 357:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   SCB->SCR &= (uint32_t)~((uint32_t)SCB_SCR_SLEEPDEEP_Msk);
 216              		.loc 1 357 0
 217 00e0 4FF46D43 		mov	r3, #60672
 218 00e4 CEF20003 		movt	r3, 57344
 219 00e8 4FF46D42 		mov	r2, #60672
 220 00ec CEF20002 		movt	r2, 57344
 221 00f0 1269     		ldr	r2, [r2, #16]
 222 00f2 22F00402 		bic	r2, r2, #4
 223 00f6 1A61     		str	r2, [r3, #16]
 358:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   
 359:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Select SLEEP mode entry -------------------------------------------------*/
 360:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   if(PWR_SLEEPEntry == PWR_SLEEPEntry_WFI)
 224              		.loc 1 360 0
 225 00f8 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 226 00fc 012B     		cmp	r3, #1
 227 00fe 01D1     		bne	.L9
 228              	.LBB12:
 229              	.LBB13:
 230              		.file 2 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\CMSIS\\I
   1:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /**************************************************************************//**
   2:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  * @file     core_cmInstr.h
   3:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  * @version  V3.00
   5:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  * @date     07. February 2012
   6:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  *
   7:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  * @note
   8:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  * Copyright (C) 2009-2012 ARM Limited. All rights reserved.
   9:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  *
  10:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  * @par
  11:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  * within development tools that are supporting such ARM based processors.
  14:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  *
  15:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  * @par
  16:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  *
  22:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  ******************************************************************************/
  23:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  24:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  27:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  28:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****   Access to dedicated instructions
  31:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****   @{
  32:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** */
  33:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  34:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /* ARM armcc specific functions */
  36:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  37:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #endif
  40:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  41:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  42:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  No Operation
  43:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  44:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
  46:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __NOP                             __nop
  47:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  48:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  49:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  51:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     until one of a number of events occurs.
  53:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
  54:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __WFI                             __wfi
  55:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  56:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  57:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  Wait For Event
  58:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  59:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
  62:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __WFE                             __wfe
  63:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  64:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  65:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  Send Event
  66:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  67:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
  69:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __SEV                             __sev
  70:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  71:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  72:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  74:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  75:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  76:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     memory, after the instruction has been completed.
  77:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
  78:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  80:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  81:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  83:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
  84:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
  86:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  88:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  89:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  91:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
  92:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
  94:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  96:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  97:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
  99:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 101:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \return               Reversed value
 103:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
 104:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __REV                             __rev
 105:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 106:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 107:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 109:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 111:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \return               Reversed value
 113:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
 114:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 115:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** {
 116:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****   rev16 r0, r0
 117:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****   bx lr
 118:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** }
 119:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 120:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 121:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 123:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 125:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \return               Reversed value
 127:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
 128:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 129:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** {
 130:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****   revsh r0, r0
 131:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****   bx lr
 132:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** }
 133:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 134:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 135:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 136:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 137:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 138:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 139:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Value to rotate
 140:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 141:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \return               Rotated value
 142:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
 143:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __ROR                             __ror
 144:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 145:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 146:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 147:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 148:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  Reverse bit order of value
 149:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 150:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     This function reverses the bit order of the given value.
 151:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 152:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 153:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \return               Reversed value
 154:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
 155:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __RBIT                            __rbit
 156:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 157:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 158:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 159:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 160:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 161:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 162:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 163:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 164:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
 165:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 166:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 167:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 168:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 169:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 170:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 171:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 172:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 173:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 174:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
 175:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 176:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 177:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 178:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 179:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 180:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 181:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 182:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 183:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 184:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
 185:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 186:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 187:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 188:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 189:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 190:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 191:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 192:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to store
 193:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 194:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \return          0  Function succeeded
 195:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \return          1  Function failed
 196:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
 197:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 198:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 199:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 200:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 201:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 202:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 203:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 204:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to store
 205:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 206:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \return          0  Function succeeded
 207:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \return          1  Function failed
 208:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
 209:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 210:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 211:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 212:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 213:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 214:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 215:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 216:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to store
 217:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 218:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \return          0  Function succeeded
 219:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \return          1  Function failed
 220:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
 221:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 222:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 223:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 224:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  Remove the exclusive lock
 225:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 226:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 227:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 228:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
 229:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __CLREX                           __clrex
 230:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 231:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 232:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  Signed Saturate
 233:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 234:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     This function saturates a signed value.
 235:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 236:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 238:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \return             Saturated value
 239:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
 240:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __SSAT                            __ssat
 241:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 242:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 243:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  Unsigned Saturate
 244:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 245:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     This function saturates an unsigned value.
 246:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 247:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to be saturated
 248:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 249:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \return             Saturated value
 250:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
 251:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __USAT                            __usat
 252:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 253:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 254:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  Count leading zeros
 255:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 256:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 257:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 258:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 259:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     \return             number of leading zeros in value
 260:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
 261:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #define __CLZ                             __clz
 262:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 263:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 264:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 265:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 266:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 267:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 268:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /* IAR iccarm specific functions */
 269:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 270:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #include <cmsis_iar.h>
 271:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 272:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 273:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 274:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /* TI CCS specific functions */
 275:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 276:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #include <cmsis_ccs.h>
 277:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 278:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 279:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 280:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /* GNU gcc specific functions */
 281:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 282:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  No Operation
 283:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 284:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 285:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
 286:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
 287:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** {
 288:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("nop");
 289:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** }
 290:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 291:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 292:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  Wait For Interrupt
 293:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 294:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 295:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     until one of a number of events occurs.
 296:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
 297:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFI(void)
 298:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** {
 299:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("wfi");
 231              		.loc 2 299 0
 232              	@ 299 "D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include/core
 233 0100 30BF     		wfi
 234              	@ 0 "" 2
 235              		.thumb
 236 0102 00E0     		b	.L8
 237              	.L9:
 238              	.LBE13:
 239              	.LBE12:
 240              	.LBB14:
 241              	.LBB15:
 300:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** }
 301:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 302:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 303:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** /** \brief  Wait For Event
 304:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** 
 305:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 306:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 307:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****  */
 308:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFE(void)
 309:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h **** {
 310:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("wfe");
 242              		.loc 2 310 0
 243              	@ 310 "D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include/core
 244 0104 20BF     		wfe
 245              	@ 0 "" 2
 246              		.thumb
 247              	.L8:
 248              	.LBE15:
 249              	.LBE14:
 361:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   {   
 362:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     /* Request Wait For Interrupt */
 363:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     __WFI();
 364:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   }
 365:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   else
 366:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   {
 367:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     /* Request Wait For Event */
 368:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     __WFE();
 369:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   }
 370:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** }
 250              		.loc 1 370 0
 251 0106 02B0     		add	sp, sp, #8
 252 0108 7047     		bx	lr
 253              		.cfi_endproc
 254              	.LFE116:
 256 010a 00BF     		.align	2
 257              		.global	PWR_EnterSTOPMode
 258              		.thumb
 259              		.thumb_func
 261              	PWR_EnterSTOPMode:
 262              	.LFB117:
 371:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 372:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /**
 373:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @brief  Enters STOP mode.
 374:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @note   In Stop mode, all I/O pins keep the same state as in Run mode.
 375:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @note   When exiting Stop mode by issuing an interrupt or a wakeup event, 
 376:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *         the HSI RC oscillator is selected as system clock.
 377:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @note   When the voltage regulator operates in low power mode, an additional 
 378:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *         startup delay is incurred when waking up from Stop mode. 
 379:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *         By keeping the internal regulator ON during Stop mode, the consumption 
 380:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *         is higher although the startup time is reduced.
 381:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @param  PWR_Regulator: specifies the regulator state in STOP mode.
 382:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *         This parameter can be one of the following values:
 383:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *             @arg PWR_Regulator_ON: STOP mode with regulator ON
 384:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *             @arg PWR_Regulator_LowPower: STOP mode with regulator in low power mode
 385:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @param  PWR_STOPEntry: specifies if STOP mode in entered with WFI or WFE instruction.
 386:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *         This parameter can be one of the following values:
 387:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *             @arg PWR_STOPEntry_WFI: enter STOP mode with WFI instruction
 388:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *             @arg PWR_STOPEntry_WFE: enter STOP mode with WFE instruction
 389:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @retval None
 390:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
 391:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** void PWR_EnterSTOPMode(uint32_t PWR_Regulator, uint8_t PWR_STOPEntry)
 392:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** {
 263              		.loc 1 392 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 16
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268 010c 84B0     		sub	sp, sp, #16
 269              	.LCFI6:
 270              		.cfi_def_cfa_offset 16
 271 010e 0190     		str	r0, [sp, #4]
 272 0110 0B46     		mov	r3, r1
 273 0112 8DF80330 		strb	r3, [sp, #3]
 393:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   uint32_t tmpreg = 0;
 274              		.loc 1 393 0
 275 0116 4FF00003 		mov	r3, #0
 276 011a 0393     		str	r3, [sp, #12]
 394:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   
 395:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Check the parameters */
 396:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   assert_param(IS_PWR_REGULATOR(PWR_Regulator));
 397:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(PWR_STOPEntry));
 398:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   
 399:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Select the regulator state in STOP mode ---------------------------------*/
 400:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   tmpreg = PWR->CR;
 277              		.loc 1 400 0
 278 011c 4FF4E043 		mov	r3, #28672
 279 0120 C4F20003 		movt	r3, 16384
 280 0124 1B68     		ldr	r3, [r3, #0]
 281 0126 0393     		str	r3, [sp, #12]
 401:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Clear PDDS and LPDSR bits */
 402:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   tmpreg &= CR_DS_MASK;
 282              		.loc 1 402 0
 283 0128 039B     		ldr	r3, [sp, #12]
 284 012a 23F00303 		bic	r3, r3, #3
 285 012e 0393     		str	r3, [sp, #12]
 403:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   
 404:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Set LPDSR bit according to PWR_Regulator value */
 405:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   tmpreg |= PWR_Regulator;
 286              		.loc 1 405 0
 287 0130 039A     		ldr	r2, [sp, #12]
 288 0132 019B     		ldr	r3, [sp, #4]
 289 0134 1343     		orrs	r3, r3, r2
 290 0136 0393     		str	r3, [sp, #12]
 406:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   
 407:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Store the new value */
 408:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   PWR->CR = tmpreg;
 291              		.loc 1 408 0
 292 0138 4FF4E043 		mov	r3, #28672
 293 013c C4F20003 		movt	r3, 16384
 294 0140 039A     		ldr	r2, [sp, #12]
 295 0142 1A60     		str	r2, [r3, #0]
 409:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   
 410:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 411:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   SCB->SCR |= SCB_SCR_SLEEPDEEP_Msk;
 296              		.loc 1 411 0
 297 0144 4FF46D43 		mov	r3, #60672
 298 0148 CEF20003 		movt	r3, 57344
 299 014c 4FF46D42 		mov	r2, #60672
 300 0150 CEF20002 		movt	r2, 57344
 301 0154 1269     		ldr	r2, [r2, #16]
 302 0156 42F00402 		orr	r2, r2, #4
 303 015a 1A61     		str	r2, [r3, #16]
 412:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   
 413:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Select STOP mode entry --------------------------------------------------*/
 414:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   if(PWR_STOPEntry == PWR_STOPEntry_WFI)
 304              		.loc 1 414 0
 305 015c 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 306 0160 012B     		cmp	r3, #1
 307 0162 01D1     		bne	.L12
 308              	.LBB16:
 309              	.LBB17:
 299:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("wfi");
 310              		.loc 2 299 0
 311              	@ 299 "D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include/core
 312 0164 30BF     		wfi
 313              	@ 0 "" 2
 314              		.thumb
 315 0166 00E0     		b	.L13
 316              	.L12:
 317              	.LBE17:
 318              	.LBE16:
 319              	.LBB18:
 320              	.LBB19:
 321              		.loc 2 310 0
 322              	@ 310 "D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include/core
 323 0168 20BF     		wfe
 324              	@ 0 "" 2
 325              		.thumb
 326              	.L13:
 327              	.LBE19:
 328              	.LBE18:
 415:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   {   
 416:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     /* Request Wait For Interrupt */
 417:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     __WFI();
 418:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   }
 419:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   else
 420:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   {
 421:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     /* Request Wait For Event */
 422:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     __WFE();
 423:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   }
 424:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 425:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   SCB->SCR &= (uint32_t)~((uint32_t)SCB_SCR_SLEEPDEEP_Msk);  
 329              		.loc 1 425 0
 330 016a 4FF46D43 		mov	r3, #60672
 331 016e CEF20003 		movt	r3, 57344
 332 0172 4FF46D42 		mov	r2, #60672
 333 0176 CEF20002 		movt	r2, 57344
 334 017a 1269     		ldr	r2, [r2, #16]
 335 017c 22F00402 		bic	r2, r2, #4
 336 0180 1A61     		str	r2, [r3, #16]
 426:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** }
 337              		.loc 1 426 0
 338 0182 04B0     		add	sp, sp, #16
 339 0184 7047     		bx	lr
 340              		.cfi_endproc
 341              	.LFE117:
 343 0186 00BF     		.align	2
 344              		.global	PWR_EnterSTANDBYMode
 345              		.thumb
 346              		.thumb_func
 348              	PWR_EnterSTANDBYMode:
 349              	.LFB118:
 427:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 428:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /**
 429:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @brief  Enters STANDBY mode.
 430:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @note   In Standby mode, all I/O pins are high impedance except for:
 431:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @note     Reset pad (still available) 
 432:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @note     RTC_AF1 pin (PC13) if configured for Wakeup pin 2 (WKUP2), tamper, 
 433:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *           time-stamp, RTC Alarm out, or RTC clock calibration out.
 434:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @note     WKUP pin 1 (PA0) and WKUP pin 3 (PE6), if enabled.       
 435:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @param  None
 436:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @retval None
 437:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
 438:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** void PWR_EnterSTANDBYMode(void)
 439:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** {
 350              		.loc 1 439 0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 440:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Clear Wakeup flag */
 441:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   PWR->CR |= PWR_CR_CWUF;
 355              		.loc 1 441 0
 356 0188 4FF4E043 		mov	r3, #28672
 357 018c C4F20003 		movt	r3, 16384
 358 0190 4FF4E042 		mov	r2, #28672
 359 0194 C4F20002 		movt	r2, 16384
 360 0198 1268     		ldr	r2, [r2, #0]
 361 019a 42F00402 		orr	r2, r2, #4
 362 019e 1A60     		str	r2, [r3, #0]
 442:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   
 443:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Select STANDBY mode */
 444:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   PWR->CR |= PWR_CR_PDDS;
 363              		.loc 1 444 0
 364 01a0 4FF4E043 		mov	r3, #28672
 365 01a4 C4F20003 		movt	r3, 16384
 366 01a8 4FF4E042 		mov	r2, #28672
 367 01ac C4F20002 		movt	r2, 16384
 368 01b0 1268     		ldr	r2, [r2, #0]
 369 01b2 42F00202 		orr	r2, r2, #2
 370 01b6 1A60     		str	r2, [r3, #0]
 445:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   
 446:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 447:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   SCB->SCR |= SCB_SCR_SLEEPDEEP_Msk;
 371              		.loc 1 447 0
 372 01b8 4FF46D43 		mov	r3, #60672
 373 01bc CEF20003 		movt	r3, 57344
 374 01c0 4FF46D42 		mov	r2, #60672
 375 01c4 CEF20002 		movt	r2, 57344
 376 01c8 1269     		ldr	r2, [r2, #16]
 377 01ca 42F00402 		orr	r2, r2, #4
 378 01ce 1A61     		str	r2, [r3, #16]
 379              	.LBB20:
 380              	.LBB21:
 299:D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("wfi");
 381              		.loc 2 299 0
 382              	@ 299 "D:\Documents and Settings\e722209\Desktop\workspace\aq32Plus_F3\Libraries\CMSIS\Include/core
 383 01d0 30BF     		wfi
 384              	@ 0 "" 2
 385              		.thumb
 386              	.LBE21:
 387              	.LBE20:
 448:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   
 449:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /* This option is used to ensure that store operations are completed */
 450:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** #if defined ( __CC_ARM   )
 451:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   __force_stores();
 452:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** #endif
 453:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Request Wait For Interrupt */
 454:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   __WFI();
 455:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** }
 388              		.loc 1 455 0
 389 01d2 7047     		bx	lr
 390              		.cfi_endproc
 391              	.LFE118:
 393              		.align	2
 394              		.global	PWR_GetFlagStatus
 395              		.thumb
 396              		.thumb_func
 398              	PWR_GetFlagStatus:
 399              	.LFB119:
 456:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 457:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /**
 458:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @}
 459:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
 460:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 461:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /** @defgroup PWR_Group5 Flags management functions
 462:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****  *  @brief   Flags management functions 
 463:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****  *
 464:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** @verbatim   
 465:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****  ===============================================================================
 466:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****                     ##### Flags management functions #####
 467:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****  ===============================================================================  
 468:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 469:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** @endverbatim
 470:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @{
 471:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
 472:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 473:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /**
 474:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @brief  Checks whether the specified PWR flag is set or not.
 475:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @param  PWR_FLAG: specifies the flag to check.
 476:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *   This parameter can be one of the following values:
 477:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *     @arg PWR_FLAG_WU: Wake Up flag. This flag indicates that a wakeup event 
 478:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *       was received from the WKUP pin or from the RTC alarm (Alarm A or Alarm B), 
 479:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *       RTC Tamper event, RTC TimeStamp event or RTC Wakeup.
 480:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *     @arg PWR_FLAG_SB: StandBy flag. This flag indicates that the system was
 481:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *                       resumed from StandBy mode.    
 482:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *     @arg PWR_FLAG_PVDO: PVD Output. This flag is valid only if PVD is enabled 
 483:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *       by the PWR_PVDCmd() function.
 484:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *     @arg PWR_FLAG_VREFINTRDY: Internal Voltage Reference Ready flag. This 
 485:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *       flag indicates the state of the internal voltage reference, VREFINT.
 486:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @retval The new state of PWR_FLAG (SET or RESET).
 487:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
 488:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** FlagStatus PWR_GetFlagStatus(uint32_t PWR_FLAG)
 489:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** {
 400              		.loc 1 489 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 16
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404              		@ link register save eliminated.
 405 01d4 84B0     		sub	sp, sp, #16
 406              	.LCFI7:
 407              		.cfi_def_cfa_offset 16
 408 01d6 0190     		str	r0, [sp, #4]
 490:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   FlagStatus bitstatus = RESET;
 409              		.loc 1 490 0
 410 01d8 4FF00003 		mov	r3, #0
 411 01dc 8DF80F30 		strb	r3, [sp, #15]
 491:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Check the parameters */
 492:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   assert_param(IS_PWR_GET_FLAG(PWR_FLAG));
 493:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   
 494:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   if ((PWR->CSR & PWR_FLAG) != (uint32_t)RESET)
 412              		.loc 1 494 0
 413 01e0 4FF4E043 		mov	r3, #28672
 414 01e4 C4F20003 		movt	r3, 16384
 415 01e8 5A68     		ldr	r2, [r3, #4]
 416 01ea 019B     		ldr	r3, [sp, #4]
 417 01ec 1340     		ands	r3, r3, r2
 418 01ee 002B     		cmp	r3, #0
 419 01f0 04D0     		beq	.L16
 495:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   {
 496:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     bitstatus = SET;
 420              		.loc 1 496 0
 421 01f2 4FF00103 		mov	r3, #1
 422 01f6 8DF80F30 		strb	r3, [sp, #15]
 423 01fa 03E0     		b	.L17
 424              	.L16:
 497:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   }
 498:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   else
 499:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   {
 500:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****     bitstatus = RESET;
 425              		.loc 1 500 0
 426 01fc 4FF00003 		mov	r3, #0
 427 0200 8DF80F30 		strb	r3, [sp, #15]
 428              	.L17:
 501:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   }
 502:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Return the flag status */
 503:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   return bitstatus;
 429              		.loc 1 503 0
 430 0204 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 504:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** }
 431              		.loc 1 504 0
 432 0208 1846     		mov	r0, r3
 433 020a 04B0     		add	sp, sp, #16
 434 020c 7047     		bx	lr
 435              		.cfi_endproc
 436              	.LFE119:
 438 020e 00BF     		.align	2
 439              		.global	PWR_ClearFlag
 440              		.thumb
 441              		.thumb_func
 443              	PWR_ClearFlag:
 444              	.LFB120:
 505:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** 
 506:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** /**
 507:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @brief  Clears the PWR's pending flags.
 508:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @param  PWR_FLAG: specifies the flag to clear.
 509:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *   This parameter can be one of the following values:
 510:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *     @arg PWR_FLAG_WU: Wake Up flag
 511:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   *     @arg PWR_FLAG_SB: StandBy flag
 512:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   * @retval None
 513:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   */
 514:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** void PWR_ClearFlag(uint32_t PWR_FLAG)
 515:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** {
 445              		.loc 1 515 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 8
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              		@ link register save eliminated.
 450 0210 82B0     		sub	sp, sp, #8
 451              	.LCFI8:
 452              		.cfi_def_cfa_offset 8
 453 0212 0190     		str	r0, [sp, #4]
 516:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   /* Check the parameters */
 517:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   assert_param(IS_PWR_CLEAR_FLAG(PWR_FLAG));
 518:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****          
 519:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c ****   PWR->CR |=  PWR_FLAG << 2;
 454              		.loc 1 519 0
 455 0214 4FF4E043 		mov	r3, #28672
 456 0218 C4F20003 		movt	r3, 16384
 457 021c 4FF4E042 		mov	r2, #28672
 458 0220 C4F20002 		movt	r2, 16384
 459 0224 1168     		ldr	r1, [r2, #0]
 460 0226 019A     		ldr	r2, [sp, #4]
 461 0228 4FEA8202 		lsl	r2, r2, #2
 462 022c 0A43     		orrs	r2, r2, r1
 463 022e 1A60     		str	r2, [r3, #0]
 520:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_pwr.c **** }
 464              		.loc 1 520 0
 465 0230 02B0     		add	sp, sp, #8
 466 0232 7047     		bx	lr
 467              		.cfi_endproc
 468              	.LFE120:
 470              	.Letext0:
 471              		.file 3 "c:\\program files\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/gcc/ar
 472              		.file 4 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\CMSIS\\I
 473              		.file 5 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\Device\\
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f30x_pwr.c
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccChV9Ip.s:19     .text:00000000 $t
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccChV9Ip.s:24     .text:00000000 PWR_DeInit
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccChV9Ip.s:54     .text:0000001c PWR_BackupAccessCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccChV9Ip.s:82     .text:00000038 PWR_PVDLevelConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccChV9Ip.s:126    .text:00000070 PWR_PVDCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccChV9Ip.s:154    .text:0000008c PWR_WakeUpPinCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccChV9Ip.s:204    .text:000000d8 PWR_EnterSleepMode
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccChV9Ip.s:261    .text:0000010c PWR_EnterSTOPMode
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccChV9Ip.s:348    .text:00000188 PWR_EnterSTANDBYMode
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccChV9Ip.s:398    .text:000001d4 PWR_GetFlagStatus
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccChV9Ip.s:443    .text:00000210 PWR_ClearFlag
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd

   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f30x_rcc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.data
  20              		.align	2
  23              	APBAHBPrescTable:
  24 0000 00       		.byte	0
  25 0001 00       		.byte	0
  26 0002 00       		.byte	0
  27 0003 00       		.byte	0
  28 0004 01       		.byte	1
  29 0005 02       		.byte	2
  30 0006 03       		.byte	3
  31 0007 04       		.byte	4
  32 0008 01       		.byte	1
  33 0009 02       		.byte	2
  34 000a 03       		.byte	3
  35 000b 04       		.byte	4
  36 000c 06       		.byte	6
  37 000d 07       		.byte	7
  38 000e 08       		.byte	8
  39 000f 09       		.byte	9
  40              		.align	2
  43              	ADCPrescTable:
  44 0010 0000     		.short	0
  45 0012 0100     		.short	1
  46 0014 0200     		.short	2
  47 0016 0400     		.short	4
  48 0018 0600     		.short	6
  49 001a 0800     		.short	8
  50 001c 0A00     		.short	10
  51 001e 0C00     		.short	12
  52 0020 1000     		.short	16
  53 0022 2000     		.short	32
  54 0024 4000     		.short	64
  55 0026 8000     		.short	128
  56 0028 0001     		.short	256
  57 002a 0000     		.text
  58              		.align	2
  59              		.global	RCC_DeInit
  60              		.thumb
  61              		.thumb_func
  63              	RCC_DeInit:
  64              	.LFB111:
  65              		.file 1 "../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c"
   1:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
   2:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   ******************************************************************************
   3:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @file    stm32f30x_rcc.c
   4:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @version V1.0.1
   6:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @date    23-October-2012
   7:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *          functionalities of the Reset and clock control (RCC) peripheral:           
   9:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           + Internal/external clocks, PLL, CSS and MCO configuration
  10:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           + System, AHB and APB busses clocks configuration
  11:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           + Peripheral clocks configuration
  12:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           + Interrupts and flags management
  13:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *
  14:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   @verbatim
  15:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                
  16:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ===============================================================================
  17:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                       ##### RCC specific features #####
  18:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ===============================================================================
  19:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     [..] After reset the device is running from HSI (8 MHz) with Flash 0 WS, 
  20:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          all peripherals are off except internal SRAM, Flash and SWD.
  21:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  22:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              all peripherals mapped on these busses are running at HSI speed.
  23:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****        	 (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  24:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (+) All GPIOs are in input floating state, except the SWD pins which
  25:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              are assigned to be used for debug purpose.
  26:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     [..] Once the device starts from reset, the user application has to:        
  27:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (+) Configure the clock source to be used to drive the System clock
  28:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              (if the application needs higher frequency/performance).
  29:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (+) Configure the System clock frequency and Flash settings.  
  30:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (+) Configure the AHB and APB busses prescalers.
  31:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (+) Enable the clock for the peripheral(s) to be used.
  32:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (+) Configure the clock source(s) for peripherals which clocks are not
  33:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              derived from the System clock (ADC, TIM, I2C, USART, RTC and IWDG).      
  34:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                         
  35:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   @endverbatim
  36:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     
  37:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   ******************************************************************************
  38:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @attention
  39:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *
  40:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  41:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *
  42:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  43:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * You may not use this file except in compliance with the License.
  44:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * You may obtain a copy of the License at:
  45:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *
  46:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  47:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *
  48:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * Unless required by applicable law or agreed to in writing, software 
  49:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  50:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  51:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * See the License for the specific language governing permissions and
  52:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * limitations under the License.
  53:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *
  54:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   ******************************************************************************
  55:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
  56:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
  57:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Includes ------------------------------------------------------------------*/
  58:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #include "stm32f30x_rcc.h"
  59:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
  60:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /** @addtogroup STM32F30x_StdPeriph_Driver
  61:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @{
  62:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
  63:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
  64:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /** @defgroup RCC 
  65:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief RCC driver modules
  66:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @{
  67:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */ 
  68:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
  69:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  70:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Private define ------------------------------------------------------------*/
  71:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  72:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  73:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
  74:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* --- CR Register ---*/
  75:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
  76:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Alias word address of HSION bit */
  77:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  78:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define HSION_BitNumber           0x00
  79:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  80:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
  81:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Alias word address of PLLON bit */
  82:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define PLLON_BitNumber           0x18
  83:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  84:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
  85:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Alias word address of CSSON bit */
  86:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CSSON_BitNumber           0x13
  87:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  88:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
  89:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* --- CFGR Register ---*/
  90:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Alias word address of USBPRE bit */
  91:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x04)
  92:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define USBPRE_BitNumber          0x16
  93:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CFGR_USBPRE_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (USBPRE_BitNumber * 4))
  94:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Alias word address of I2SSRC bit */
  95:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define I2SSRC_BitNumber          0x17
  96:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CFGR_I2SSRC_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (I2SSRC_BitNumber * 4))
  97:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
  98:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* --- BDCR Register ---*/
  99:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 100:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Alias word address of RTCEN bit */
 101:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x20)
 102:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define RTCEN_BitNumber           0x0F
 103:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
 104:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 105:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Alias word address of BDRST bit */
 106:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define BDRST_BitNumber           0x10
 107:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
 108:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 109:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* --- CSR Register ---*/
 110:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 111:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Alias word address of LSION bit */
 112:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x24)
 113:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define LSION_BitNumber           0x00
 114:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 115:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 116:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 117:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* RCC Flag Mask */
 118:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define FLAG_MASK                 ((uint8_t)0x1F)
 119:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 120:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* CFGR register byte 3 (Bits[31:23]) base address */
 121:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CFGR_BYTE3_ADDRESS        ((uint32_t)0x40021007)
 122:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 123:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 124:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)0x40021009)
 125:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 126:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 127:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)0x4002100A)
 128:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 129:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* CR register byte 2 (Bits[23:16]) base address */
 130:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CR_BYTE2_ADDRESS          ((uint32_t)0x40021002)
 131:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 132:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Private macro -------------------------------------------------------------*/
 133:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Private variables ---------------------------------------------------------*/
 134:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 135:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** static __I uint16_t ADCPrescTable[13] = {0, 1, 2, 4, 6, 8, 10, 12, 16, 32, 64, 128, 256};
 136:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 137:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 138:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Private functions ---------------------------------------------------------*/
 139:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 140:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /** @defgroup RCC_Private_Functions
 141:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @{
 142:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 143:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 144:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /** @defgroup RCC_Group1 Internal and external clocks, PLL, CSS and MCO configuration functions
 145:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  *  @brief   Internal and external clocks, PLL, CSS and MCO configuration functions 
 146:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  *
 147:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** @verbatim   
 148:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ===============================================================================
 149:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ##### Internal-external clocks, PLL, CSS and MCO configuration functions #####
 150:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ===============================================================================  
 151:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     [..] This section provides functions allowing to configure the internal/external 
 152:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          clocks, PLL, CSS and MCO.
 153:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly 
 154:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              or through the PLL as System clock source.
 155:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              The HSI clock can be used also to clock the USART and I2C peripherals.
 156:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) LSI (low-speed internal), 40 KHz low consumption RC used as IWDG and/or RTC
 157:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              clock source.
 158:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 159:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              through the PLL as System clock source. Can be used also as RTC clock source.
 160:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 161:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              LSE can be used also to clock the USART peripherals.
 162:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) PLL (clocked by HSI or HSE), for System clock.
 163:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) CSS (Clock security system), once enabled and if a HSE clock failure occurs 
 164:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              (HSE used directly or through PLL as System clock source), the System clock
 165:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              is automatically switched to HSI and an interrupt is generated if enabled. 
 166:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              The interrupt is linked to the Cortex-M4 NMI (Non-Maskable Interrupt) 
 167:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              exception vector.   
 168:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSE, LSI, LSE,
 169:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              PLL clock on PA8 pin.
 170:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 171:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** @endverbatim
 172:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @{
 173:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 174:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 175:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 176:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 177:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 178:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     HSI ON and used as system clock source 
 179:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     HSE and PLL OFF
 180:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     AHB, APB1 and APB2 prescalers set to 1.
 181:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     CSS and MCO OFF
 182:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     All interrupts disabled
 183:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   However, this function doesn't modify the configuration of the
 184:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     Peripheral clocks
 185:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     LSI, LSE and RTC clocks                  
 186:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  None
 187:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 188:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 189:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_DeInit(void)
 190:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
  66              		.loc 1 190 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              		@ link register save eliminated.
 191:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set HSION bit */
 192:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  71              		.loc 1 192 0
  72 0000 4FF48053 		mov	r3, #4096
  73 0004 C4F20203 		movt	r3, 16386
  74 0008 4FF48052 		mov	r2, #4096
  75 000c C4F20202 		movt	r2, 16386
  76 0010 1268     		ldr	r2, [r2, #0]
  77 0012 42F00102 		orr	r2, r2, #1
  78 0016 1A60     		str	r2, [r3, #0]
 193:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 194:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE[2:0] and MCOSEL[2:0] bits */
 195:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF8FFC000;
  79              		.loc 1 195 0
  80 0018 4FF48052 		mov	r2, #4096
  81 001c C4F20202 		movt	r2, 16386
  82 0020 4FF48053 		mov	r3, #4096
  83 0024 C4F20203 		movt	r3, 16386
  84 0028 5968     		ldr	r1, [r3, #4]
  85 002a 4FF44043 		mov	r3, #49152
  86 002e CFF6FF03 		movt	r3, 63743
  87 0032 0B40     		ands	r3, r3, r1
  88 0034 5360     		str	r3, [r2, #4]
 196:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 197:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Reset HSEON, CSSON and PLLON bits */
 198:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  89              		.loc 1 198 0
  90 0036 4FF48053 		mov	r3, #4096
  91 003a C4F20203 		movt	r3, 16386
  92 003e 4FF48052 		mov	r2, #4096
  93 0042 C4F20202 		movt	r2, 16386
  94 0046 1268     		ldr	r2, [r2, #0]
  95 0048 22F08472 		bic	r2, r2, #17301504
  96 004c 22F48032 		bic	r2, r2, #65536
  97 0050 1A60     		str	r2, [r3, #0]
 199:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 200:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Reset HSEBYP bit */
 201:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  98              		.loc 1 201 0
  99 0052 4FF48053 		mov	r3, #4096
 100 0056 C4F20203 		movt	r3, 16386
 101 005a 4FF48052 		mov	r2, #4096
 102 005e C4F20202 		movt	r2, 16386
 103 0062 1268     		ldr	r2, [r2, #0]
 104 0064 22F48022 		bic	r2, r2, #262144
 105 0068 1A60     		str	r2, [r3, #0]
 202:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 203:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE bits */
 204:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
 106              		.loc 1 204 0
 107 006a 4FF48053 		mov	r3, #4096
 108 006e C4F20203 		movt	r3, 16386
 109 0072 4FF48052 		mov	r2, #4096
 110 0076 C4F20202 		movt	r2, 16386
 111 007a 5268     		ldr	r2, [r2, #4]
 112 007c 22F4FE02 		bic	r2, r2, #8323072
 113 0080 5A60     		str	r2, [r3, #4]
 205:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 206:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Reset PREDIV1[3:0] and ADCPRE[13:4] bits */
 207:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR2 &= (uint32_t)0xFFFFC000;
 114              		.loc 1 207 0
 115 0082 4FF48053 		mov	r3, #4096
 116 0086 C4F20203 		movt	r3, 16386
 117 008a 4FF48052 		mov	r2, #4096
 118 008e C4F20202 		movt	r2, 16386
 119 0092 D26A     		ldr	r2, [r2, #44]
 120 0094 22F47E52 		bic	r2, r2, #16256
 121 0098 22F07F02 		bic	r2, r2, #127
 122 009c DA62     		str	r2, [r3, #44]
 208:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 209:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Reset USARTSW[1:0], I2CSW and TIMSW bits */
 210:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR3 &= (uint32_t)0xF00FCCC;
 123              		.loc 1 210 0
 124 009e 4FF48052 		mov	r2, #4096
 125 00a2 C4F20202 		movt	r2, 16386
 126 00a6 4FF48053 		mov	r3, #4096
 127 00aa C4F20203 		movt	r3, 16386
 128 00ae 196B     		ldr	r1, [r3, #48]
 129 00b0 4FF6CC43 		movw	r3, #64716
 130 00b4 C0F60073 		movt	r3, 3840
 131 00b8 0B40     		ands	r3, r3, r1
 132 00ba 1363     		str	r3, [r2, #48]
 211:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 212:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Disable all interrupts */
 213:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CIR = 0x00000000;
 133              		.loc 1 213 0
 134 00bc 4FF48053 		mov	r3, #4096
 135 00c0 C4F20203 		movt	r3, 16386
 136 00c4 4FF00002 		mov	r2, #0
 137 00c8 9A60     		str	r2, [r3, #8]
 214:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 138              		.loc 1 214 0
 139 00ca 7047     		bx	lr
 140              		.cfi_endproc
 141              	.LFE111:
 143              		.align	2
 144              		.global	RCC_HSEConfig
 145              		.thumb
 146              		.thumb_func
 148              	RCC_HSEConfig:
 149              	.LFB112:
 215:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 216:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 217:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 218:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   After enabling the HSE (RCC_HSE_ON or RCC_HSE_Bypass), the application
 219:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         software should wait on HSERDY flag to be set indicating that HSE clock
 220:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         is stable and can be used to clock the PLL and/or system clock.
 221:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   HSE state can not be changed if it is used directly or through the
 222:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         PLL as system clock. In this case, you have to select another source
 223:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         of the system clock then change the HSE state (ex. disable it).
 224:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   The HSE is stopped by hardware when entering STOP and STANDBY modes.         
 225:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   This function resets the CSSON bit, so if the Clock security system(CSS)
 226:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         was previously enabled you have to enable it again after calling this
 227:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         function.
 228:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 229:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
 230:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_HSE_OFF: turn OFF the HSE oscillator, HSERDY flag goes low after
 231:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                       6 HSE oscillator clock cycles.
 232:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_HSE_ON: turn ON the HSE oscillator
 233:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 234:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 235:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 236:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_HSEConfig(uint8_t RCC_HSE)
 237:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 150              		.loc 1 237 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 8
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 00cc 82B0     		sub	sp, sp, #8
 156              	.LCFI0:
 157              		.cfi_def_cfa_offset 8
 158 00ce 0346     		mov	r3, r0
 159 00d0 8DF80730 		strb	r3, [sp, #7]
 238:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 239:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
 240:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 241:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 242:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint8_t *) CR_BYTE2_ADDRESS = RCC_HSE_OFF;
 160              		.loc 1 242 0
 161 00d4 41F20203 		movw	r3, #4098
 162 00d8 C4F20203 		movt	r3, 16386
 163 00dc 4FF00002 		mov	r2, #0
 164 00e0 1A70     		strb	r2, [r3, #0]
 243:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 244:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set the new HSE configuration -------------------------------------------*/
 245:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint8_t *) CR_BYTE2_ADDRESS = RCC_HSE;
 165              		.loc 1 245 0
 166 00e2 41F20203 		movw	r3, #4098
 167 00e6 C4F20203 		movt	r3, 16386
 168 00ea 9DF80720 		ldrb	r2, [sp, #7]
 169 00ee 1A70     		strb	r2, [r3, #0]
 246:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 247:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 170              		.loc 1 247 0
 171 00f0 02B0     		add	sp, sp, #8
 172 00f2 7047     		bx	lr
 173              		.cfi_endproc
 174              	.LFE112:
 176              		.align	2
 177              		.global	RCC_WaitForHSEStartUp
 178              		.thumb
 179              		.thumb_func
 181              	RCC_WaitForHSEStartUp:
 182              	.LFB113:
 248:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 249:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 250:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Waits for HSE start-up.
 251:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   This function waits on HSERDY flag to be set and return SUCCESS if 
 252:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         this flag is set, otherwise returns ERROR if the timeout is reached 
 253:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         and this flag is not set. The timeout value is defined by the constant
 254:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         HSE_STARTUP_TIMEOUT in stm32f30x.h file. You can tailor it depending
 255:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         on the HSE crystal used in your application. 
 256:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  None
 257:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval An ErrorStatus enumeration value:
 258:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *          - SUCCESS: HSE oscillator is stable and ready to use
 259:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *          - ERROR: HSE oscillator not yet ready
 260:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 261:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 262:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 183              		.loc 1 262 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 8
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187 00f4 00B5     		push	{lr}
 188              	.LCFI1:
 189              		.cfi_def_cfa_offset 4
 190              		.cfi_offset 14, -4
 191 00f6 83B0     		sub	sp, sp, #12
 192              	.LCFI2:
 193              		.cfi_def_cfa_offset 16
 263:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 194              		.loc 1 263 0
 195 00f8 4FF00003 		mov	r3, #0
 196 00fc 0093     		str	r3, [sp, #0]
 264:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   ErrorStatus status = ERROR;
 197              		.loc 1 264 0
 198 00fe 4FF00003 		mov	r3, #0
 199 0102 8DF80730 		strb	r3, [sp, #7]
 265:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   FlagStatus HSEStatus = RESET;
 200              		.loc 1 265 0
 201 0106 4FF00003 		mov	r3, #0
 202 010a 8DF80630 		strb	r3, [sp, #6]
 203              	.L5:
 266:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 267:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Wait till HSE is ready and if timeout is reached exit */
 268:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   do
 269:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 270:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 204              		.loc 1 270 0 discriminator 1
 205 010e 4FF01100 		mov	r0, #17
 206 0112 FFF7FEFF 		bl	RCC_GetFlagStatus
 207 0116 0346     		mov	r3, r0
 208 0118 8DF80630 		strb	r3, [sp, #6]
 271:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     StartUpCounter++;  
 209              		.loc 1 271 0 discriminator 1
 210 011c 009B     		ldr	r3, [sp, #0]
 211 011e 03F10103 		add	r3, r3, #1
 212 0122 0093     		str	r3, [sp, #0]
 272:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 213              		.loc 1 272 0 discriminator 1
 214 0124 009B     		ldr	r3, [sp, #0]
 215 0126 B3F5A06F 		cmp	r3, #1280
 216 012a 03D0     		beq	.L4
 217 012c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 218 0130 002B     		cmp	r3, #0
 219 0132 ECD0     		beq	.L5
 220              	.L4:
 273:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 274:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 221              		.loc 1 274 0
 222 0134 4FF01100 		mov	r0, #17
 223 0138 FFF7FEFF 		bl	RCC_GetFlagStatus
 224 013c 0346     		mov	r3, r0
 225 013e 002B     		cmp	r3, #0
 226 0140 04D0     		beq	.L6
 275:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 276:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     status = SUCCESS;
 227              		.loc 1 276 0
 228 0142 4FF00103 		mov	r3, #1
 229 0146 8DF80730 		strb	r3, [sp, #7]
 230 014a 03E0     		b	.L7
 231              	.L6:
 277:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 278:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
 279:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 280:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     status = ERROR;
 232              		.loc 1 280 0
 233 014c 4FF00003 		mov	r3, #0
 234 0150 8DF80730 		strb	r3, [sp, #7]
 235              	.L7:
 281:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }  
 282:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   return (status);
 236              		.loc 1 282 0
 237 0154 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 283:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 238              		.loc 1 283 0
 239 0158 1846     		mov	r0, r3
 240 015a 03B0     		add	sp, sp, #12
 241 015c 00BD     		pop	{pc}
 242              		.cfi_endproc
 243              	.LFE113:
 245 015e 00BF     		.align	2
 246              		.global	RCC_AdjustHSICalibrationValue
 247              		.thumb
 248              		.thumb_func
 250              	RCC_AdjustHSICalibrationValue:
 251              	.LFB114:
 284:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 285:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 286:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 287:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   The calibration is used to compensate for the variations in voltage
 288:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         and temperature that influence the frequency of the internal HSI RC.
 289:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         Refer to the Application Note AN3300 for more details on how to  
 290:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         calibrate the HSI.
 291:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  HSICalibrationValue: specifies the HSI calibration trimming value.
 292:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter must be a number between 0 and 0x1F.
 293:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 294:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 295:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 296:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 252              		.loc 1 296 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 16
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 257 0160 84B0     		sub	sp, sp, #16
 258              	.LCFI3:
 259              		.cfi_def_cfa_offset 16
 260 0162 0346     		mov	r3, r0
 261 0164 8DF80730 		strb	r3, [sp, #7]
 297:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmpreg = 0;
 262              		.loc 1 297 0
 263 0168 4FF00003 		mov	r3, #0
 264 016c 0393     		str	r3, [sp, #12]
 298:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 299:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 300:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_HSI_CALIBRATION_VALUE(HSICalibrationValue));
 301:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 302:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg = RCC->CR;
 265              		.loc 1 302 0
 266 016e 4FF48053 		mov	r3, #4096
 267 0172 C4F20203 		movt	r3, 16386
 268 0176 1B68     		ldr	r3, [r3, #0]
 269 0178 0393     		str	r3, [sp, #12]
 303:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 304:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 305:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg &= ~RCC_CR_HSITRIM;
 270              		.loc 1 305 0
 271 017a 039B     		ldr	r3, [sp, #12]
 272 017c 23F0F803 		bic	r3, r3, #248
 273 0180 0393     		str	r3, [sp, #12]
 306:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 307:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 308:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 274              		.loc 1 308 0
 275 0182 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 276 0186 4FEAC303 		lsl	r3, r3, #3
 277 018a 039A     		ldr	r2, [sp, #12]
 278 018c 1343     		orrs	r3, r3, r2
 279 018e 0393     		str	r3, [sp, #12]
 309:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 310:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Store the new value */
 311:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CR = tmpreg;
 280              		.loc 1 311 0
 281 0190 4FF48053 		mov	r3, #4096
 282 0194 C4F20203 		movt	r3, 16386
 283 0198 039A     		ldr	r2, [sp, #12]
 284 019a 1A60     		str	r2, [r3, #0]
 312:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 285              		.loc 1 312 0
 286 019c 04B0     		add	sp, sp, #16
 287 019e 7047     		bx	lr
 288              		.cfi_endproc
 289              	.LFE114:
 291              		.align	2
 292              		.global	RCC_HSICmd
 293              		.thumb
 294              		.thumb_func
 296              	RCC_HSICmd:
 297              	.LFB115:
 313:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 314:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 315:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 316:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   After enabling the HSI, the application software should wait on 
 317:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         HSIRDY flag to be set indicating that HSI clock is stable and can
 318:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         be used to clock the PLL and/or system clock.
 319:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   HSI can not be stopped if it is used directly or through the PLL
 320:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         as system clock. In this case, you have to select another source 
 321:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         of the system clock then stop the HSI.
 322:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   The HSI is stopped by hardware when entering STOP and STANDBY modes. 
 323:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   When the HSI is stopped, HSIRDY flag goes low after 6 HSI oscillator
 324:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         clock cycles.    
 325:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the HSI.
 326:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
 327:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 328:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 329:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 330:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 298              		.loc 1 330 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 8
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303 01a0 82B0     		sub	sp, sp, #8
 304              	.LCFI4:
 305              		.cfi_def_cfa_offset 8
 306 01a2 0346     		mov	r3, r0
 307 01a4 8DF80730 		strb	r3, [sp, #7]
 331:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 332:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 333:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 334:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 308              		.loc 1 334 0
 309 01a8 4FF00003 		mov	r3, #0
 310 01ac C4F24223 		movt	r3, 16962
 311 01b0 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 312 01b4 1A60     		str	r2, [r3, #0]
 335:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 313              		.loc 1 335 0
 314 01b6 02B0     		add	sp, sp, #8
 315 01b8 7047     		bx	lr
 316              		.cfi_endproc
 317              	.LFE115:
 319 01ba 00BF     		.align	2
 320              		.global	RCC_LSEConfig
 321              		.thumb
 322              		.thumb_func
 324              	RCC_LSEConfig:
 325              	.LFB116:
 336:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 337:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 338:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 339:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     As the LSE is in the Backup domain and write access is denied to this
 340:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           domain after reset, you have to enable write access using 
 341:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           PWR_BackupAccessCmd(ENABLE) function before to configure the LSE
 342:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           (to be done once after reset).
 343:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     After enabling the LSE (RCC_LSE_ON or RCC_LSE_Bypass), the application
 344:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           software should wait on LSERDY flag to be set indicating that LSE clock
 345:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           is stable and can be used to clock the RTC.
 346:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 347:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
 348:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_LSE_OFF: turn OFF the LSE oscillator, LSERDY flag goes low after
 349:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                       6 LSE oscillator clock cycles.
 350:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_LSE_ON: turn ON the LSE oscillator
 351:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 352:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 353:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 354:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_LSEConfig(uint32_t RCC_LSE)
 355:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 326              		.loc 1 355 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 8
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330              		@ link register save eliminated.
 331 01bc 82B0     		sub	sp, sp, #8
 332              	.LCFI5:
 333              		.cfi_def_cfa_offset 8
 334 01be 0190     		str	r0, [sp, #4]
 356:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 357:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 358:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 359:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 360:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Reset LSEON bit */
 361:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->BDCR &= ~(RCC_BDCR_LSEON);
 335              		.loc 1 361 0
 336 01c0 4FF48053 		mov	r3, #4096
 337 01c4 C4F20203 		movt	r3, 16386
 338 01c8 4FF48052 		mov	r2, #4096
 339 01cc C4F20202 		movt	r2, 16386
 340 01d0 126A     		ldr	r2, [r2, #32]
 341 01d2 22F00102 		bic	r2, r2, #1
 342 01d6 1A62     		str	r2, [r3, #32]
 362:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 363:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Reset LSEBYP bit */
 364:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->BDCR &= ~(RCC_BDCR_LSEBYP);
 343              		.loc 1 364 0
 344 01d8 4FF48053 		mov	r3, #4096
 345 01dc C4F20203 		movt	r3, 16386
 346 01e0 4FF48052 		mov	r2, #4096
 347 01e4 C4F20202 		movt	r2, 16386
 348 01e8 126A     		ldr	r2, [r2, #32]
 349 01ea 22F00402 		bic	r2, r2, #4
 350 01ee 1A62     		str	r2, [r3, #32]
 365:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 366:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Configure LSE */
 367:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->BDCR |= RCC_LSE;
 351              		.loc 1 367 0
 352 01f0 4FF48053 		mov	r3, #4096
 353 01f4 C4F20203 		movt	r3, 16386
 354 01f8 4FF48052 		mov	r2, #4096
 355 01fc C4F20202 		movt	r2, 16386
 356 0200 116A     		ldr	r1, [r2, #32]
 357 0202 019A     		ldr	r2, [sp, #4]
 358 0204 0A43     		orrs	r2, r2, r1
 359 0206 1A62     		str	r2, [r3, #32]
 368:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 360              		.loc 1 368 0
 361 0208 02B0     		add	sp, sp, #8
 362 020a 7047     		bx	lr
 363              		.cfi_endproc
 364              	.LFE116:
 366              		.align	2
 367              		.global	RCC_LSEDriveConfig
 368              		.thumb
 369              		.thumb_func
 371              	RCC_LSEDriveConfig:
 372              	.LFB117:
 369:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 370:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 371:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE) drive capability.
 372:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_LSEDrive: specifies the new state of the LSE drive capability.
 373:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
 374:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_LSEDrive_Low: LSE oscillator low drive capability.
 375:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_LSEDrive_MediumLow: LSE oscillator medium low drive capability.
 376:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_LSEDrive_MediumHigh: LSE oscillator medium high drive capability.
 377:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_LSEDrive_High: LSE oscillator high drive capability.
 378:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 379:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 380:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_LSEDriveConfig(uint32_t RCC_LSEDrive)
 381:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 373              		.loc 1 381 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 8
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 378 020c 82B0     		sub	sp, sp, #8
 379              	.LCFI6:
 380              		.cfi_def_cfa_offset 8
 381 020e 0190     		str	r0, [sp, #4]
 382:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 383:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_LSE_DRIVE(RCC_LSEDrive));
 384:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 385:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear LSEDRV[1:0] bits */
 386:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->BDCR &= ~(RCC_BDCR_LSEDRV);
 382              		.loc 1 386 0
 383 0210 4FF48053 		mov	r3, #4096
 384 0214 C4F20203 		movt	r3, 16386
 385 0218 4FF48052 		mov	r2, #4096
 386 021c C4F20202 		movt	r2, 16386
 387 0220 126A     		ldr	r2, [r2, #32]
 388 0222 22F01802 		bic	r2, r2, #24
 389 0226 1A62     		str	r2, [r3, #32]
 387:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 388:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set the LSE Drive */
 389:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->BDCR |= RCC_LSEDrive;
 390              		.loc 1 389 0
 391 0228 4FF48053 		mov	r3, #4096
 392 022c C4F20203 		movt	r3, 16386
 393 0230 4FF48052 		mov	r2, #4096
 394 0234 C4F20202 		movt	r2, 16386
 395 0238 116A     		ldr	r1, [r2, #32]
 396 023a 019A     		ldr	r2, [sp, #4]
 397 023c 0A43     		orrs	r2, r2, r1
 398 023e 1A62     		str	r2, [r3, #32]
 390:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 399              		.loc 1 390 0
 400 0240 02B0     		add	sp, sp, #8
 401 0242 7047     		bx	lr
 402              		.cfi_endproc
 403              	.LFE117:
 405              		.align	2
 406              		.global	RCC_LSICmd
 407              		.thumb
 408              		.thumb_func
 410              	RCC_LSICmd:
 411              	.LFB118:
 391:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 392:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 393:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).  
 394:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   After enabling the LSI, the application software should wait on 
 395:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         LSIRDY flag to be set indicating that LSI clock is stable and can
 396:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         be used to clock the IWDG and/or the RTC.
 397:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.  
 398:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   When the LSI is stopped, LSIRDY flag goes low after 6 LSI oscillator
 399:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         clock cycles.
 400:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the LSI.
 401:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE. 
 402:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 403:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 404:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 405:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 412              		.loc 1 405 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 8
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 417 0244 82B0     		sub	sp, sp, #8
 418              	.LCFI7:
 419              		.cfi_def_cfa_offset 8
 420 0246 0346     		mov	r3, r0
 421 0248 8DF80730 		strb	r3, [sp, #7]
 406:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 407:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 408:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 409:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
 422              		.loc 1 409 0
 423 024c 4FF49063 		mov	r3, #1152
 424 0250 C4F24223 		movt	r3, 16962
 425 0254 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 426 0258 1A60     		str	r2, [r3, #0]
 410:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 427              		.loc 1 410 0
 428 025a 02B0     		add	sp, sp, #8
 429 025c 7047     		bx	lr
 430              		.cfi_endproc
 431              	.LFE118:
 433 025e 00BF     		.align	2
 434              		.global	RCC_PLLConfig
 435              		.thumb
 436              		.thumb_func
 438              	RCC_PLLConfig:
 439              	.LFB119:
 411:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 412:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 413:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the PLL clock source and multiplication factor.
 414:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   This function must be used only when the PLL is disabled.
 415:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   The minimum input clock frequency for PLL is 2 MHz (when using HSE as
 416:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         PLL source).   
 417:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 418:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
 419:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as
 420:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         PLL clock entry
 421:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_PLLSource_PREDIV1: PREDIV1 clock selected as PLL clock source              
 422:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_PLLMul: specifies the PLL multiplication factor, which drive the PLLVCO clock
 423:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be RCC_PLLMul_x where x:[2,16] 
 424:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                                               
 425:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 426:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 427:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)
 428:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 440              		.loc 1 428 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 8
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 445 0260 82B0     		sub	sp, sp, #8
 446              	.LCFI8:
 447              		.cfi_def_cfa_offset 8
 448 0262 0190     		str	r0, [sp, #4]
 449 0264 0091     		str	r1, [sp, #0]
 429:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 430:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 431:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_PLL_MUL(RCC_PLLMul));
 432:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 433:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear PLL Source [16] and Multiplier [21:18] bits */
 434:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR &= ~(RCC_CFGR_PLLMULL | RCC_CFGR_PLLSRC);
 450              		.loc 1 434 0
 451 0266 4FF48053 		mov	r3, #4096
 452 026a C4F20203 		movt	r3, 16386
 453 026e 4FF48052 		mov	r2, #4096
 454 0272 C4F20202 		movt	r2, 16386
 455 0276 5268     		ldr	r2, [r2, #4]
 456 0278 22F47412 		bic	r2, r2, #3997696
 457 027c 5A60     		str	r2, [r3, #4]
 435:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 436:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set the PLL Source and Multiplier */
 437:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR |= (uint32_t)(RCC_PLLSource | RCC_PLLMul);
 458              		.loc 1 437 0
 459 027e 4FF48053 		mov	r3, #4096
 460 0282 C4F20203 		movt	r3, 16386
 461 0286 4FF48052 		mov	r2, #4096
 462 028a C4F20202 		movt	r2, 16386
 463 028e 5168     		ldr	r1, [r2, #4]
 464 0290 0198     		ldr	r0, [sp, #4]
 465 0292 009A     		ldr	r2, [sp, #0]
 466 0294 0243     		orrs	r2, r2, r0
 467 0296 0A43     		orrs	r2, r2, r1
 468 0298 5A60     		str	r2, [r3, #4]
 438:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 469              		.loc 1 438 0
 470 029a 02B0     		add	sp, sp, #8
 471 029c 7047     		bx	lr
 472              		.cfi_endproc
 473              	.LFE119:
 475 029e 00BF     		.align	2
 476              		.global	RCC_PLLCmd
 477              		.thumb
 478              		.thumb_func
 480              	RCC_PLLCmd:
 481              	.LFB120:
 439:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 440:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 441:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Enables or disables the PLL.
 442:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   After enabling the PLL, the application software should wait on 
 443:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         PLLRDY flag to be set indicating that PLL clock is stable and can
 444:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         be used as system clock source.
 445:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   The PLL can not be disabled if it is used as system clock source
 446:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   The PLL is disabled by hardware when entering STOP and STANDBY modes.    
 447:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the PLL.
 448:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
 449:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 450:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 451:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 452:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 482              		.loc 1 452 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 8
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 487 02a0 82B0     		sub	sp, sp, #8
 488              	.LCFI9:
 489              		.cfi_def_cfa_offset 8
 490 02a2 0346     		mov	r3, r0
 491 02a4 8DF80730 		strb	r3, [sp, #7]
 453:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 454:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 455:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 456:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 492              		.loc 1 456 0
 493 02a8 4FF06003 		mov	r3, #96
 494 02ac C4F24223 		movt	r3, 16962
 495 02b0 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 496 02b4 1A60     		str	r2, [r3, #0]
 457:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 497              		.loc 1 457 0
 498 02b6 02B0     		add	sp, sp, #8
 499 02b8 7047     		bx	lr
 500              		.cfi_endproc
 501              	.LFE120:
 503 02ba 00BF     		.align	2
 504              		.global	RCC_PREDIV1Config
 505              		.thumb
 506              		.thumb_func
 508              	RCC_PREDIV1Config:
 509              	.LFB121:
 458:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 459:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 460:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the PREDIV1 division factor.
 461:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   This function must be used only when the PLL is disabled.
 462:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_PREDIV1_Div: specifies the PREDIV1 clock division factor.
 463:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be RCC_PREDIV1_Divx where x:[1,16]
 464:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 465:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 466:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_PREDIV1Config(uint32_t RCC_PREDIV1_Div)
 467:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 510              		.loc 1 467 0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 16
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 514              		@ link register save eliminated.
 515 02bc 84B0     		sub	sp, sp, #16
 516              	.LCFI10:
 517              		.cfi_def_cfa_offset 16
 518 02be 0190     		str	r0, [sp, #4]
 468:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmpreg = 0;
 519              		.loc 1 468 0
 520 02c0 4FF00003 		mov	r3, #0
 521 02c4 0393     		str	r3, [sp, #12]
 469:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 470:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 471:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_PREDIV1(RCC_PREDIV1_Div));
 472:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 473:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg = RCC->CFGR2;
 522              		.loc 1 473 0
 523 02c6 4FF48053 		mov	r3, #4096
 524 02ca C4F20203 		movt	r3, 16386
 525 02ce DB6A     		ldr	r3, [r3, #44]
 526 02d0 0393     		str	r3, [sp, #12]
 474:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear PREDIV1[3:0] bits */
 475:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg &= ~(RCC_CFGR2_PREDIV1);
 527              		.loc 1 475 0
 528 02d2 039B     		ldr	r3, [sp, #12]
 529 02d4 23F00F03 		bic	r3, r3, #15
 530 02d8 0393     		str	r3, [sp, #12]
 476:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 477:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set the PREDIV1 division factor */
 478:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg |= RCC_PREDIV1_Div;
 531              		.loc 1 478 0
 532 02da 039A     		ldr	r2, [sp, #12]
 533 02dc 019B     		ldr	r3, [sp, #4]
 534 02de 1343     		orrs	r3, r3, r2
 535 02e0 0393     		str	r3, [sp, #12]
 479:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 480:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Store the new value */
 481:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR2 = tmpreg;
 536              		.loc 1 481 0
 537 02e2 4FF48053 		mov	r3, #4096
 538 02e6 C4F20203 		movt	r3, 16386
 539 02ea 039A     		ldr	r2, [sp, #12]
 540 02ec DA62     		str	r2, [r3, #44]
 482:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 541              		.loc 1 482 0
 542 02ee 04B0     		add	sp, sp, #16
 543 02f0 7047     		bx	lr
 544              		.cfi_endproc
 545              	.LFE121:
 547 02f2 00BF     		.align	2
 548              		.global	RCC_ClockSecuritySystemCmd
 549              		.thumb
 550              		.thumb_func
 552              	RCC_ClockSecuritySystemCmd:
 553              	.LFB122:
 483:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 484:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 485:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Enables or disables the Clock Security System.
 486:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 487:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 488:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 489:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 490:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.  
 491:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the Clock Security System.
 492:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
 493:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 494:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 495:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
 496:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 554              		.loc 1 496 0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 8
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558              		@ link register save eliminated.
 559 02f4 82B0     		sub	sp, sp, #8
 560              	.LCFI11:
 561              		.cfi_def_cfa_offset 8
 562 02f6 0346     		mov	r3, r0
 563 02f8 8DF80730 		strb	r3, [sp, #7]
 497:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 498:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 499:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 500:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 564              		.loc 1 500 0
 565 02fc 4FF04C03 		mov	r3, #76
 566 0300 C4F24223 		movt	r3, 16962
 567 0304 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 568 0308 1A60     		str	r2, [r3, #0]
 501:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 569              		.loc 1 501 0
 570 030a 02B0     		add	sp, sp, #8
 571 030c 7047     		bx	lr
 572              		.cfi_endproc
 573              	.LFE122:
 575 030e 00BF     		.align	2
 576              		.global	RCC_MCOConfig
 577              		.thumb
 578              		.thumb_func
 580              	RCC_MCOConfig:
 581              	.LFB123:
 502:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 503:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 504:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Selects the clock source to output on MCO pin (PA8).
 505:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   PA8 should be configured in alternate function mode.
 506:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   The MCOF flag is set once the MCO clock source switch is effective.      
 507:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_MCOSource: specifies the clock source to output.
 508:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
 509:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_MCOSource_NoClock: No clock selected.
 510:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_MCOSource_LSI: LSI oscillator clock selected.  
 511:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_MCOSource_LSE: LSE oscillator clock selected.  
 512:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_MCOSource_SYSCLK: System clock selected.
 513:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_MCOSource_HSI: HSI oscillator clock selected.  
 514:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_MCOSource_HSE: HSE oscillator clock selected.
 515:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_MCOSource_PLLCLK_Div2: PLL clock selected.
 516:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 517:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 518:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_MCOConfig(uint8_t RCC_MCOSource)
 519:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 582              		.loc 1 519 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 8
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              		@ link register save eliminated.
 587 0310 82B0     		sub	sp, sp, #8
 588              	.LCFI12:
 589              		.cfi_def_cfa_offset 8
 590 0312 0346     		mov	r3, r0
 591 0314 8DF80730 		strb	r3, [sp, #7]
 520:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 521:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_MCO_SOURCE(RCC_MCOSource));
 522:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     
 523:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Select MCO clock source and prescaler */
 524:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint8_t *) CFGR_BYTE3_ADDRESS =  RCC_MCOSource; 
 592              		.loc 1 524 0
 593 0318 41F20703 		movw	r3, #4103
 594 031c C4F20203 		movt	r3, 16386
 595 0320 9DF80720 		ldrb	r2, [sp, #7]
 596 0324 1A70     		strb	r2, [r3, #0]
 525:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 597              		.loc 1 525 0
 598 0326 02B0     		add	sp, sp, #8
 599 0328 7047     		bx	lr
 600              		.cfi_endproc
 601              	.LFE123:
 603 032a 00BF     		.align	2
 604              		.global	RCC_SYSCLKConfig
 605              		.thumb
 606              		.thumb_func
 608              	RCC_SYSCLKConfig:
 609              	.LFB124:
 526:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 527:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 528:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @}
 529:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 530:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 531:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /** @defgroup RCC_Group2 System AHB, APB1 and APB2 busses clocks configuration functions
 532:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  *  @brief   System, AHB and APB busses clocks configuration functions
 533:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  *
 534:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** @verbatim   
 535:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ===============================================================================
 536:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   ##### System, AHB, APB1 and APB2 busses clocks configuration functions #####
 537:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ===============================================================================  
 538:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     [..] This section provide functions allowing to configure the System, AHB, APB1 and 
 539:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          APB2 busses clocks.
 540:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 541:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              HSE and PLL.
 542:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable prescaler
 543:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              and used to clock the CPU, memory and peripherals mapped on AHB bus (DMA and GPIO).
 544:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              APB1 (PCLK1) and APB2 (PCLK2) clocks are derived from AHB clock through 
 545:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              configurable prescalers and used to clock the peripherals mapped on these busses.
 546:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              You can use "RCC_GetClocksFreq()" function to retrieve the frequencies of these clocks
 547:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 548:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) The maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 is 72 MHz.
 549:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              Depending on the maximum frequency, the FLASH wait states (WS) should be 
 550:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              adapted accordingly:
 551:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         +---------------------------------+
 552:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         |  Wait states  |   HCLK clock    |
 553:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         |   (Latency)   | frequency (MHz) |
 554:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         |-------------- |-----------------|             
 555:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         |0WS(1CPU cycle)| 0 < HCLK <= 24  |
 556:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         |---------------|-----------------| 
 557:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         |1WS(2CPU cycle)|24 < HCLK <=48   |
 558:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         |---------------|-----------------| 
 559:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         |2WS(3CPU cycle)|48 < HCLK <= 72  |
 560:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         +---------------------------------+
 561:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 562:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and 
 563:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              prefetch is disabled.
 564:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         [..]
 565:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (@) All the peripheral clocks are derived from the System clock (SYSCLK) 
 566:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              except:
 567:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              (+@) The FLASH program/erase clock  which is always HSI 8MHz clock.
 568:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              (+@) The USB 48 MHz clock which is derived from the PLL VCO clock.
 569:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              (+@) The USART clock which can be derived as well from HSI 8MHz, LSI or LSE.
 570:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              (+@) The I2C clock which can be derived as well from HSI 8MHz clock.
 571:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              (+@) The ADC clock which is derived from PLL output.
 572:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              (+@) The RTC clock which is derived from the LSE, LSI or 1 MHz HSE_RTC 
 573:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                   (HSE divided by a programmable prescaler). The System clock (SYSCLK) 
 574:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                   frequency must be higher or equal to the RTC clock frequency.
 575:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              (+@) IWDG clock which is always the LSI clock.
 576:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     [..] It is recommended to use the following software sequences to tune the number
 577:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          of wait states needed to access the Flash memory with the CPU frequency (HCLK).
 578:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (+) Increasing the CPU frequency
 579:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Program the Flash Prefetch buffer, using "FLASH_PrefetchBufferCmd(ENABLE)" 
 580:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                  function
 581:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Check that Flash Prefetch buffer activation is taken into account by 
 582:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                  reading FLASH_ACR using the FLASH_GetPrefetchBufferStatus() function
 583:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Program Flash WS to 1 or 2, using "FLASH_SetLatency()" function
 584:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Check that the new number of WS is taken into account by reading FLASH_ACR
 585:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Modify the CPU clock source, using "RCC_SYSCLKConfig()" function
 586:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) If needed, modify the CPU clock prescaler by using "RCC_HCLKConfig()" function
 587:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Check that the new CPU clock source is taken into account by reading 
 588:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                  the clock source status, using "RCC_GetSYSCLKSource()" function 
 589:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (+) Decreasing the CPU frequency
 590:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Modify the CPU clock source, using "RCC_SYSCLKConfig()" function
 591:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) If needed, modify the CPU clock prescaler by using "RCC_HCLKConfig()" function
 592:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Check that the new CPU clock source is taken into account by reading 
 593:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                  the clock source status, using "RCC_GetSYSCLKSource()" function
 594:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Program the new number of WS, using "FLASH_SetLatency()" function
 595:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Check that the new number of WS is taken into account by reading FLASH_ACR
 596:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Disable the Flash Prefetch buffer using "FLASH_PrefetchBufferCmd(DISABLE)" 
 597:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                  function
 598:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Check that Flash Prefetch buffer deactivation is taken into account by reading FLA
 599:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                  using the FLASH_GetPrefetchBufferStatus() function.
 600:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 601:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** @endverbatim
 602:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @{
 603:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 604:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 605:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 606:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
 607:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     The HSI is used (enabled by hardware) as system clock source after
 608:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           startup from Reset, wake-up from STOP and STANDBY mode, or in case
 609:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           of failure of the HSE used directly or indirectly as system clock
 610:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           (if the Clock Security System CSS is enabled).
 611:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     A switch from one clock source to another occurs only if the target
 612:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           clock source is ready (clock stable after startup delay or PLL locked). 
 613:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           If a clock source which is not yet ready is selected, the switch will
 614:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           occur when the clock source will be ready. 
 615:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           You can use RCC_GetSYSCLKSource() function to know which clock is
 616:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           currently used as system clock source.  
 617:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock source 
 618:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
 619:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSI:    HSI selected as system clock source
 620:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSE:    HSE selected as system clock source
 621:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock source
 622:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 623:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 624:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
 625:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 610              		.loc 1 625 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 16
 613              		@ frame_needed = 0, uses_anonymous_args = 0
 614              		@ link register save eliminated.
 615 032c 84B0     		sub	sp, sp, #16
 616              	.LCFI13:
 617              		.cfi_def_cfa_offset 16
 618 032e 0190     		str	r0, [sp, #4]
 626:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmpreg = 0;
 619              		.loc 1 626 0
 620 0330 4FF00003 		mov	r3, #0
 621 0334 0393     		str	r3, [sp, #12]
 627:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 628:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 629:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 630:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 631:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg = RCC->CFGR;
 622              		.loc 1 631 0
 623 0336 4FF48053 		mov	r3, #4096
 624 033a C4F20203 		movt	r3, 16386
 625 033e 5B68     		ldr	r3, [r3, #4]
 626 0340 0393     		str	r3, [sp, #12]
 632:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 633:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear SW[1:0] bits */
 634:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg &= ~RCC_CFGR_SW;
 627              		.loc 1 634 0
 628 0342 039B     		ldr	r3, [sp, #12]
 629 0344 23F00303 		bic	r3, r3, #3
 630 0348 0393     		str	r3, [sp, #12]
 635:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 636:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
 637:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 631              		.loc 1 637 0
 632 034a 039A     		ldr	r2, [sp, #12]
 633 034c 019B     		ldr	r3, [sp, #4]
 634 034e 1343     		orrs	r3, r3, r2
 635 0350 0393     		str	r3, [sp, #12]
 638:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 639:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Store the new value */
 640:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR = tmpreg;
 636              		.loc 1 640 0
 637 0352 4FF48053 		mov	r3, #4096
 638 0356 C4F20203 		movt	r3, 16386
 639 035a 039A     		ldr	r2, [sp, #12]
 640 035c 5A60     		str	r2, [r3, #4]
 641:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 641              		.loc 1 641 0
 642 035e 04B0     		add	sp, sp, #16
 643 0360 7047     		bx	lr
 644              		.cfi_endproc
 645              	.LFE124:
 647 0362 00BF     		.align	2
 648              		.global	RCC_GetSYSCLKSource
 649              		.thumb
 650              		.thumb_func
 652              	RCC_GetSYSCLKSource:
 653              	.LFB125:
 642:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 643:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 644:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Returns the clock source used as system clock.
 645:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  None
 646:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval The clock source used as system clock. The returned value can be one 
 647:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         of the following values:
 648:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *              - 0x00: HSI used as system clock
 649:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *              - 0x04: HSE used as system clock  
 650:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *              - 0x08: PLL used as system clock
 651:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 652:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
 653:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 654              		.loc 1 653 0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658              		@ link register save eliminated.
 654:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   return ((uint8_t)(RCC->CFGR & RCC_CFGR_SWS));
 659              		.loc 1 654 0
 660 0364 4FF48053 		mov	r3, #4096
 661 0368 C4F20203 		movt	r3, 16386
 662 036c 5B68     		ldr	r3, [r3, #4]
 663 036e DBB2     		uxtb	r3, r3
 664 0370 03F00C03 		and	r3, r3, #12
 665 0374 DBB2     		uxtb	r3, r3
 655:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 666              		.loc 1 655 0
 667 0376 1846     		mov	r0, r3
 668 0378 7047     		bx	lr
 669              		.cfi_endproc
 670              	.LFE125:
 672 037a 00BF     		.align	2
 673              		.global	RCC_HCLKConfig
 674              		.thumb
 675              		.thumb_func
 677              	RCC_HCLKConfig:
 678              	.LFB126:
 656:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 657:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 658:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
 659:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 660:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         these bits to ensure that the system frequency does not exceed the
 661:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         maximum allowed frequency (for more details refer to section above
 662:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         "CPU, AHB and APB busses clocks configuration functions").
 663:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
 664:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                     the system clock (SYSCLK).
 665:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
 666:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLK_Div1:   AHB clock = SYSCLK
 667:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLK_Div2:   AHB clock = SYSCLK/2
 668:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLK_Div4:   AHB clock = SYSCLK/4
 669:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLK_Div8:   AHB clock = SYSCLK/8
 670:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLK_Div16:  AHB clock = SYSCLK/16
 671:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLK_Div64:  AHB clock = SYSCLK/64
 672:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
 673:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
 674:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
 675:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 676:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 677:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
 678:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 679              		.loc 1 678 0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 16
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683              		@ link register save eliminated.
 684 037c 84B0     		sub	sp, sp, #16
 685              	.LCFI14:
 686              		.cfi_def_cfa_offset 16
 687 037e 0190     		str	r0, [sp, #4]
 679:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmpreg = 0;
 688              		.loc 1 679 0
 689 0380 4FF00003 		mov	r3, #0
 690 0384 0393     		str	r3, [sp, #12]
 680:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 681:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 682:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 683:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 684:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg = RCC->CFGR;
 691              		.loc 1 684 0
 692 0386 4FF48053 		mov	r3, #4096
 693 038a C4F20203 		movt	r3, 16386
 694 038e 5B68     		ldr	r3, [r3, #4]
 695 0390 0393     		str	r3, [sp, #12]
 685:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 686:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear HPRE[3:0] bits */
 687:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg &= ~RCC_CFGR_HPRE;
 696              		.loc 1 687 0
 697 0392 039B     		ldr	r3, [sp, #12]
 698 0394 23F0F003 		bic	r3, r3, #240
 699 0398 0393     		str	r3, [sp, #12]
 688:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 689:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
 690:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg |= RCC_SYSCLK;
 700              		.loc 1 690 0
 701 039a 039A     		ldr	r2, [sp, #12]
 702 039c 019B     		ldr	r3, [sp, #4]
 703 039e 1343     		orrs	r3, r3, r2
 704 03a0 0393     		str	r3, [sp, #12]
 691:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 692:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Store the new value */
 693:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR = tmpreg;
 705              		.loc 1 693 0
 706 03a2 4FF48053 		mov	r3, #4096
 707 03a6 C4F20203 		movt	r3, 16386
 708 03aa 039A     		ldr	r2, [sp, #12]
 709 03ac 5A60     		str	r2, [r3, #4]
 694:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 710              		.loc 1 694 0
 711 03ae 04B0     		add	sp, sp, #16
 712 03b0 7047     		bx	lr
 713              		.cfi_endproc
 714              	.LFE126:
 716 03b2 00BF     		.align	2
 717              		.global	RCC_PCLK1Config
 718              		.thumb
 719              		.thumb_func
 721              	RCC_PCLK1Config:
 722              	.LFB127:
 695:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 696:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 697:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
 698:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
 699:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         the AHB clock (HCLK).
 700:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
 701:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB1 clock = HCLK
 702:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB1 clock = HCLK/2
 703:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB1 clock = HCLK/4
 704:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB1 clock = HCLK/8
 705:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
 706:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 707:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 708:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
 709:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 723              		.loc 1 709 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 16
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727              		@ link register save eliminated.
 728 03b4 84B0     		sub	sp, sp, #16
 729              	.LCFI15:
 730              		.cfi_def_cfa_offset 16
 731 03b6 0190     		str	r0, [sp, #4]
 710:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmpreg = 0;
 732              		.loc 1 710 0
 733 03b8 4FF00003 		mov	r3, #0
 734 03bc 0393     		str	r3, [sp, #12]
 711:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 712:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 713:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 714:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 715:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg = RCC->CFGR;
 735              		.loc 1 715 0
 736 03be 4FF48053 		mov	r3, #4096
 737 03c2 C4F20203 		movt	r3, 16386
 738 03c6 5B68     		ldr	r3, [r3, #4]
 739 03c8 0393     		str	r3, [sp, #12]
 716:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear PPRE1[2:0] bits */
 717:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg &= ~RCC_CFGR_PPRE1;
 740              		.loc 1 717 0
 741 03ca 039B     		ldr	r3, [sp, #12]
 742 03cc 23F4E063 		bic	r3, r3, #1792
 743 03d0 0393     		str	r3, [sp, #12]
 718:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 719:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
 720:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg |= RCC_HCLK;
 744              		.loc 1 720 0
 745 03d2 039A     		ldr	r2, [sp, #12]
 746 03d4 019B     		ldr	r3, [sp, #4]
 747 03d6 1343     		orrs	r3, r3, r2
 748 03d8 0393     		str	r3, [sp, #12]
 721:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 722:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Store the new value */
 723:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR = tmpreg;
 749              		.loc 1 723 0
 750 03da 4FF48053 		mov	r3, #4096
 751 03de C4F20203 		movt	r3, 16386
 752 03e2 039A     		ldr	r2, [sp, #12]
 753 03e4 5A60     		str	r2, [r3, #4]
 724:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 754              		.loc 1 724 0
 755 03e6 04B0     		add	sp, sp, #16
 756 03e8 7047     		bx	lr
 757              		.cfi_endproc
 758              	.LFE127:
 760 03ea 00BF     		.align	2
 761              		.global	RCC_PCLK2Config
 762              		.thumb
 763              		.thumb_func
 765              	RCC_PCLK2Config:
 766              	.LFB128:
 725:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 726:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 727:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
 728:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
 729:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         the AHB clock (HCLK).
 730:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be one of the following values:
 731:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *             @arg RCC_HCLK_Div1: APB2 clock = HCLK
 732:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *             @arg RCC_HCLK_Div2: APB2 clock = HCLK/2
 733:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *             @arg RCC_HCLK_Div4: APB2 clock = HCLK/4
 734:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *             @arg RCC_HCLK_Div8: APB2 clock = HCLK/8
 735:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *             @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
 736:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 737:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 738:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
 739:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 767              		.loc 1 739 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 16
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 771              		@ link register save eliminated.
 772 03ec 84B0     		sub	sp, sp, #16
 773              	.LCFI16:
 774              		.cfi_def_cfa_offset 16
 775 03ee 0190     		str	r0, [sp, #4]
 740:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmpreg = 0;
 776              		.loc 1 740 0
 777 03f0 4FF00003 		mov	r3, #0
 778 03f4 0393     		str	r3, [sp, #12]
 741:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 742:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 743:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 744:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 745:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg = RCC->CFGR;
 779              		.loc 1 745 0
 780 03f6 4FF48053 		mov	r3, #4096
 781 03fa C4F20203 		movt	r3, 16386
 782 03fe 5B68     		ldr	r3, [r3, #4]
 783 0400 0393     		str	r3, [sp, #12]
 746:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear PPRE2[2:0] bits */
 747:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg &= ~RCC_CFGR_PPRE2;
 784              		.loc 1 747 0
 785 0402 039B     		ldr	r3, [sp, #12]
 786 0404 23F46053 		bic	r3, r3, #14336
 787 0408 0393     		str	r3, [sp, #12]
 748:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
 749:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 788              		.loc 1 749 0
 789 040a 019B     		ldr	r3, [sp, #4]
 790 040c 4FEAC303 		lsl	r3, r3, #3
 791 0410 039A     		ldr	r2, [sp, #12]
 792 0412 1343     		orrs	r3, r3, r2
 793 0414 0393     		str	r3, [sp, #12]
 750:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Store the new value */
 751:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR = tmpreg;
 794              		.loc 1 751 0
 795 0416 4FF48053 		mov	r3, #4096
 796 041a C4F20203 		movt	r3, 16386
 797 041e 039A     		ldr	r2, [sp, #12]
 798 0420 5A60     		str	r2, [r3, #4]
 752:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 799              		.loc 1 752 0
 800 0422 04B0     		add	sp, sp, #16
 801 0424 7047     		bx	lr
 802              		.cfi_endproc
 803              	.LFE128:
 805 0426 00BF     		.align	2
 806              		.global	RCC_GetClocksFreq
 807              		.thumb
 808              		.thumb_func
 810              	RCC_GetClocksFreq:
 811              	.LFB129:
 753:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 754:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 755:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Returns the frequencies of the System, AHB, APB2 and APB1 busses clocks.
 756:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * 
 757:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *  @note    This function returns the frequencies of :
 758:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           System, AHB, APB2 and APB1 busses clocks, ADC1/2/3/4 clocks, 
 759:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           USART1/2/3/4/5 clocks, I2C1/2 clocks and TIM1/8 Clocks.
 760:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                         
 761:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     The frequency returned by this function is not the real frequency
 762:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           in the chip. It is calculated based on the predefined constant and
 763:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           the source selected by RCC_SYSCLKConfig().
 764:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                                              
 765:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note      If SYSCLK source is HSI, function returns constant HSI_VALUE(*)
 766:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                                              
 767:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note      If SYSCLK source is HSE, function returns constant HSE_VALUE(**)
 768:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                          
 769:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note      If SYSCLK source is PLL, function returns constant HSE_VALUE(**) 
 770:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 771:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         
 772:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f30x.h file (default value
 773:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
 774:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *               in voltage and temperature, refer to RCC_AdjustHSICalibrationValue().   
 775:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *    
 776:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f30x.h file (default value
 777:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
 778:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 779:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                return wrong result.
 780:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                
 781:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     The result of this function could be not correct when using fractional
 782:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           value for HSE crystal.   
 783:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *             
 784:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold 
 785:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         the clocks frequencies. 
 786:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     
 787:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     This function can be used by the user application to compute the 
 788:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           baudrate for the communication peripherals or configure other parameters.
 789:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     Each time SYSCLK, HCLK, PCLK1 and/or PCLK2 clock changes, this function
 790:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           must be called to update the structure's field. Otherwise, any
 791:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           configuration based on this function will be incorrect.
 792:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *    
 793:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 794:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 795:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
 796:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 812              		.loc 1 796 0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 40
 815              		@ frame_needed = 0, uses_anonymous_args = 0
 816              		@ link register save eliminated.
 817 0428 8AB0     		sub	sp, sp, #40
 818              	.LCFI17:
 819              		.cfi_def_cfa_offset 40
 820 042a 0190     		str	r0, [sp, #4]
 797:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, prediv1factor = 0, presc = 0, pllclk = 0;
 821              		.loc 1 797 0
 822 042c 4FF00003 		mov	r3, #0
 823 0430 0893     		str	r3, [sp, #32]
 824 0432 4FF00003 		mov	r3, #0
 825 0436 0793     		str	r3, [sp, #28]
 826 0438 4FF00003 		mov	r3, #0
 827 043c 0693     		str	r3, [sp, #24]
 828 043e 4FF00003 		mov	r3, #0
 829 0442 0593     		str	r3, [sp, #20]
 830 0444 4FF00003 		mov	r3, #0
 831 0448 0493     		str	r3, [sp, #16]
 832 044a 4FF00003 		mov	r3, #0
 833 044e 0993     		str	r3, [sp, #36]
 798:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t apb2presc = 0, ahbpresc = 0;
 834              		.loc 1 798 0
 835 0450 4FF00003 		mov	r3, #0
 836 0454 0393     		str	r3, [sp, #12]
 837 0456 4FF00003 		mov	r3, #0
 838 045a 0293     		str	r3, [sp, #8]
 799:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 800:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 801:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 839              		.loc 1 801 0
 840 045c 4FF48053 		mov	r3, #4096
 841 0460 C4F20203 		movt	r3, 16386
 842 0464 5B68     		ldr	r3, [r3, #4]
 843 0466 03F00C03 		and	r3, r3, #12
 844 046a 0893     		str	r3, [sp, #32]
 802:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 803:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   switch (tmp)
 845              		.loc 1 803 0
 846 046c 089B     		ldr	r3, [sp, #32]
 847 046e 042B     		cmp	r3, #4
 848 0470 0AD0     		beq	.L26
 849 0472 082B     		cmp	r3, #8
 850 0474 0FD0     		beq	.L27
 851 0476 002B     		cmp	r3, #0
 852 0478 48D1     		bne	.L63
 853              	.L25:
 804:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 805:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     case 0x00:  /* HSI used as system clock */
 806:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 854              		.loc 1 806 0
 855 047a 019A     		ldr	r2, [sp, #4]
 856 047c 4FF49053 		mov	r3, #4608
 857 0480 C0F27A03 		movt	r3, 122
 858 0484 1360     		str	r3, [r2, #0]
 807:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       break;
 859              		.loc 1 807 0
 860 0486 48E0     		b	.L28
 861              	.L26:
 808:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     case 0x04:  /* HSE used as system clock */
 809:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 862              		.loc 1 809 0
 863 0488 019A     		ldr	r2, [sp, #4]
 864 048a 4FF49053 		mov	r3, #4608
 865 048e C0F27A03 		movt	r3, 122
 866 0492 1360     		str	r3, [r2, #0]
 810:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       break;
 867              		.loc 1 810 0
 868 0494 41E0     		b	.L28
 869              	.L27:
 811:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     case 0x08:  /* PLL used as system clock */
 812:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 813:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 870              		.loc 1 813 0
 871 0496 4FF48053 		mov	r3, #4096
 872 049a C4F20203 		movt	r3, 16386
 873 049e 5B68     		ldr	r3, [r3, #4]
 874 04a0 03F47013 		and	r3, r3, #3932160
 875 04a4 0793     		str	r3, [sp, #28]
 814:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 876              		.loc 1 814 0
 877 04a6 4FF48053 		mov	r3, #4096
 878 04aa C4F20203 		movt	r3, 16386
 879 04ae 5B68     		ldr	r3, [r3, #4]
 880 04b0 03F48033 		and	r3, r3, #65536
 881 04b4 0693     		str	r3, [sp, #24]
 815:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       pllmull = ( pllmull >> 18) + 2;
 882              		.loc 1 815 0
 883 04b6 079B     		ldr	r3, [sp, #28]
 884 04b8 4FEA9343 		lsr	r3, r3, #18
 885 04bc 03F10203 		add	r3, r3, #2
 886 04c0 0793     		str	r3, [sp, #28]
 816:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       
 817:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       if (pllsource == 0x00)
 887              		.loc 1 817 0
 888 04c2 069B     		ldr	r3, [sp, #24]
 889 04c4 002B     		cmp	r3, #0
 890 04c6 08D1     		bne	.L29
 818:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       {
 819:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 820:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         pllclk = (HSI_VALUE >> 1) * pllmull;
 891              		.loc 1 820 0
 892 04c8 079A     		ldr	r2, [sp, #28]
 893 04ca 4FF41063 		mov	r3, #2304
 894 04ce C0F23D03 		movt	r3, 61
 895 04d2 03FB02F3 		mul	r3, r3, r2
 896 04d6 0993     		str	r3, [sp, #36]
 897 04d8 14E0     		b	.L30
 898              	.L29:
 821:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       }
 822:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       else
 823:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       {
 824:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 899              		.loc 1 824 0
 900 04da 4FF48053 		mov	r3, #4096
 901 04de C4F20203 		movt	r3, 16386
 902 04e2 DB6A     		ldr	r3, [r3, #44]
 903 04e4 03F00F03 		and	r3, r3, #15
 904 04e8 03F10103 		add	r3, r3, #1
 905 04ec 0593     		str	r3, [sp, #20]
 825:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 826:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         pllclk = (HSE_VALUE / prediv1factor) * pllmull; 
 906              		.loc 1 826 0
 907 04ee 4FF49053 		mov	r3, #4608
 908 04f2 C0F27A03 		movt	r3, 122
 909 04f6 059A     		ldr	r2, [sp, #20]
 910 04f8 B3FBF2F3 		udiv	r3, r3, r2
 911 04fc 079A     		ldr	r2, [sp, #28]
 912 04fe 02FB03F3 		mul	r3, r2, r3
 913 0502 0993     		str	r3, [sp, #36]
 914              	.L30:
 827:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       }
 828:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = pllclk;      
 915              		.loc 1 828 0
 916 0504 019B     		ldr	r3, [sp, #4]
 917 0506 099A     		ldr	r2, [sp, #36]
 918 0508 1A60     		str	r2, [r3, #0]
 829:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       break;
 919              		.loc 1 829 0
 920 050a 06E0     		b	.L28
 921              	.L63:
 830:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     default: /* HSI used as system clock */
 831:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 922              		.loc 1 831 0
 923 050c 019A     		ldr	r2, [sp, #4]
 924 050e 4FF49053 		mov	r3, #4608
 925 0512 C0F27A03 		movt	r3, 122
 926 0516 1360     		str	r3, [r2, #0]
 832:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       break;
 927              		.loc 1 832 0
 928 0518 00BF     		nop
 929              	.L28:
 833:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 834:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* Compute HCLK, PCLK clocks frequencies -----------------------------------*/
 835:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Get HCLK prescaler */
 836:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_HPRE;
 930              		.loc 1 836 0
 931 051a 4FF48053 		mov	r3, #4096
 932 051e C4F20203 		movt	r3, 16386
 933 0522 5B68     		ldr	r3, [r3, #4]
 934 0524 03F0F003 		and	r3, r3, #240
 935 0528 0893     		str	r3, [sp, #32]
 837:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = tmp >> 4;
 936              		.loc 1 837 0
 937 052a 089B     		ldr	r3, [sp, #32]
 938 052c 4FEA1313 		lsr	r3, r3, #4
 939 0530 0893     		str	r3, [sp, #32]
 838:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   ahbpresc = APBAHBPrescTable[tmp]; 
 940              		.loc 1 838 0
 941 0532 40F20003 		movw	r3, #:lower16:APBAHBPrescTable
 942 0536 C0F20003 		movt	r3, #:upper16:APBAHBPrescTable
 943 053a 089A     		ldr	r2, [sp, #32]
 944 053c 9B18     		adds	r3, r3, r2
 945 053e 1B78     		ldrb	r3, [r3, #0]
 946 0540 DBB2     		uxtb	r3, r3
 947 0542 0293     		str	r3, [sp, #8]
 839:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* HCLK clock frequency */
 840:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> ahbpresc;
 948              		.loc 1 840 0
 949 0544 019B     		ldr	r3, [sp, #4]
 950 0546 1A68     		ldr	r2, [r3, #0]
 951 0548 029B     		ldr	r3, [sp, #8]
 952 054a 22FA03F2 		lsr	r2, r2, r3
 953 054e 019B     		ldr	r3, [sp, #4]
 954 0550 5A60     		str	r2, [r3, #4]
 841:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 842:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Get PCLK1 prescaler */
 843:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_PPRE1;
 955              		.loc 1 843 0
 956 0552 4FF48053 		mov	r3, #4096
 957 0556 C4F20203 		movt	r3, 16386
 958 055a 5B68     		ldr	r3, [r3, #4]
 959 055c 03F4E063 		and	r3, r3, #1792
 960 0560 0893     		str	r3, [sp, #32]
 844:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = tmp >> 8;
 961              		.loc 1 844 0
 962 0562 089B     		ldr	r3, [sp, #32]
 963 0564 4FEA1323 		lsr	r3, r3, #8
 964 0568 0893     		str	r3, [sp, #32]
 845:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 965              		.loc 1 845 0
 966 056a 40F20003 		movw	r3, #:lower16:APBAHBPrescTable
 967 056e C0F20003 		movt	r3, #:upper16:APBAHBPrescTable
 968 0572 089A     		ldr	r2, [sp, #32]
 969 0574 9B18     		adds	r3, r3, r2
 970 0576 1B78     		ldrb	r3, [r3, #0]
 971 0578 DBB2     		uxtb	r3, r3
 972 057a 0493     		str	r3, [sp, #16]
 846:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* PCLK1 clock frequency */
 847:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 973              		.loc 1 847 0
 974 057c 019B     		ldr	r3, [sp, #4]
 975 057e 5A68     		ldr	r2, [r3, #4]
 976 0580 049B     		ldr	r3, [sp, #16]
 977 0582 22FA03F2 		lsr	r2, r2, r3
 978 0586 019B     		ldr	r3, [sp, #4]
 979 0588 9A60     		str	r2, [r3, #8]
 848:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 849:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Get PCLK2 prescaler */
 850:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_PPRE2;
 980              		.loc 1 850 0
 981 058a 4FF48053 		mov	r3, #4096
 982 058e C4F20203 		movt	r3, 16386
 983 0592 5B68     		ldr	r3, [r3, #4]
 984 0594 03F46053 		and	r3, r3, #14336
 985 0598 0893     		str	r3, [sp, #32]
 851:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = tmp >> 11;
 986              		.loc 1 851 0
 987 059a 089B     		ldr	r3, [sp, #32]
 988 059c 4FEAD323 		lsr	r3, r3, #11
 989 05a0 0893     		str	r3, [sp, #32]
 852:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   apb2presc = APBAHBPrescTable[tmp];
 990              		.loc 1 852 0
 991 05a2 40F20003 		movw	r3, #:lower16:APBAHBPrescTable
 992 05a6 C0F20003 		movt	r3, #:upper16:APBAHBPrescTable
 993 05aa 089A     		ldr	r2, [sp, #32]
 994 05ac 9B18     		adds	r3, r3, r2
 995 05ae 1B78     		ldrb	r3, [r3, #0]
 996 05b0 DBB2     		uxtb	r3, r3
 997 05b2 0393     		str	r3, [sp, #12]
 853:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* PCLK2 clock frequency */
 854:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> apb2presc;
 998              		.loc 1 854 0
 999 05b4 019B     		ldr	r3, [sp, #4]
 1000 05b6 5A68     		ldr	r2, [r3, #4]
 1001 05b8 039B     		ldr	r3, [sp, #12]
 1002 05ba 22FA03F2 		lsr	r2, r2, r3
 1003 05be 019B     		ldr	r3, [sp, #4]
 1004 05c0 DA60     		str	r2, [r3, #12]
 855:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 856:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Get ADC12CLK prescaler */
 857:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = RCC->CFGR2 & RCC_CFGR2_ADCPRE12;
 1005              		.loc 1 857 0
 1006 05c2 4FF48053 		mov	r3, #4096
 1007 05c6 C4F20203 		movt	r3, 16386
 1008 05ca DB6A     		ldr	r3, [r3, #44]
 1009 05cc 03F4F873 		and	r3, r3, #496
 1010 05d0 0893     		str	r3, [sp, #32]
 858:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = tmp >> 4;
 1011              		.loc 1 858 0
 1012 05d2 089B     		ldr	r3, [sp, #32]
 1013 05d4 4FEA1313 		lsr	r3, r3, #4
 1014 05d8 0893     		str	r3, [sp, #32]
 859:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   presc = ADCPrescTable[tmp];
 1015              		.loc 1 859 0
 1016 05da 40F20003 		movw	r3, #:lower16:ADCPrescTable
 1017 05de C0F20003 		movt	r3, #:upper16:ADCPrescTable
 1018 05e2 089A     		ldr	r2, [sp, #32]
 1019 05e4 33F81230 		ldrh	r3, [r3, r2, lsl #1]	@ movhi
 1020 05e8 9BB2     		uxth	r3, r3
 1021 05ea 0493     		str	r3, [sp, #16]
 860:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if ((presc & 0x10) != 0)
 1022              		.loc 1 860 0
 1023 05ec 049B     		ldr	r3, [sp, #16]
 1024 05ee 03F01003 		and	r3, r3, #16
 1025 05f2 002B     		cmp	r3, #0
 1026 05f4 06D0     		beq	.L31
 861:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 862:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****      /* ADC12CLK clock frequency is derived from PLL clock */
 863:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****      RCC_Clocks->ADC12CLK_Frequency = pllclk / presc;
 1027              		.loc 1 863 0
 1028 05f6 099A     		ldr	r2, [sp, #36]
 1029 05f8 049B     		ldr	r3, [sp, #16]
 1030 05fa B2FBF3F2 		udiv	r2, r2, r3
 1031 05fe 019B     		ldr	r3, [sp, #4]
 1032 0600 1A61     		str	r2, [r3, #16]
 1033 0602 03E0     		b	.L32
 1034              	.L31:
 864:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 865:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
 866:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 867:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****    /* ADC12CLK clock frequency is AHB clock */
 868:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****      RCC_Clocks->ADC12CLK_Frequency = RCC_Clocks->SYSCLK_Frequency;
 1035              		.loc 1 868 0
 1036 0604 019B     		ldr	r3, [sp, #4]
 1037 0606 1A68     		ldr	r2, [r3, #0]
 1038 0608 019B     		ldr	r3, [sp, #4]
 1039 060a 1A61     		str	r2, [r3, #16]
 1040              	.L32:
 869:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 870:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 871:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Get ADC34CLK prescaler */
 872:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = RCC->CFGR2 & RCC_CFGR2_ADCPRE34;
 1041              		.loc 1 872 0
 1042 060c 4FF48053 		mov	r3, #4096
 1043 0610 C4F20203 		movt	r3, 16386
 1044 0614 DB6A     		ldr	r3, [r3, #44]
 1045 0616 03F47853 		and	r3, r3, #15872
 1046 061a 0893     		str	r3, [sp, #32]
 873:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = tmp >> 9;
 1047              		.loc 1 873 0
 1048 061c 089B     		ldr	r3, [sp, #32]
 1049 061e 4FEA5323 		lsr	r3, r3, #9
 1050 0622 0893     		str	r3, [sp, #32]
 874:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   presc = ADCPrescTable[tmp];
 1051              		.loc 1 874 0
 1052 0624 40F20003 		movw	r3, #:lower16:ADCPrescTable
 1053 0628 C0F20003 		movt	r3, #:upper16:ADCPrescTable
 1054 062c 089A     		ldr	r2, [sp, #32]
 1055 062e 33F81230 		ldrh	r3, [r3, r2, lsl #1]	@ movhi
 1056 0632 9BB2     		uxth	r3, r3
 1057 0634 0493     		str	r3, [sp, #16]
 875:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if ((presc & 0x10) != 0)
 1058              		.loc 1 875 0
 1059 0636 049B     		ldr	r3, [sp, #16]
 1060 0638 03F01003 		and	r3, r3, #16
 1061 063c 002B     		cmp	r3, #0
 1062 063e 06D0     		beq	.L33
 876:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 877:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****      /* ADC34CLK clock frequency is derived from PLL clock */
 878:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****      RCC_Clocks->ADC34CLK_Frequency = pllclk / presc;
 1063              		.loc 1 878 0
 1064 0640 099A     		ldr	r2, [sp, #36]
 1065 0642 049B     		ldr	r3, [sp, #16]
 1066 0644 B2FBF3F2 		udiv	r2, r2, r3
 1067 0648 019B     		ldr	r3, [sp, #4]
 1068 064a 5A61     		str	r2, [r3, #20]
 1069 064c 03E0     		b	.L34
 1070              	.L33:
 879:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 880:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
 881:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 882:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****    /* ADC34CLK clock frequency is AHB clock */
 883:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****      RCC_Clocks->ADC34CLK_Frequency = RCC_Clocks->SYSCLK_Frequency;
 1071              		.loc 1 883 0
 1072 064e 019B     		ldr	r3, [sp, #4]
 1073 0650 1A68     		ldr	r2, [r3, #0]
 1074 0652 019B     		ldr	r3, [sp, #4]
 1075 0654 5A61     		str	r2, [r3, #20]
 1076              	.L34:
 884:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 885:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 886:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* I2C1CLK clock frequency */
 887:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if((RCC->CFGR3 & RCC_CFGR3_I2C1SW) != RCC_CFGR3_I2C1SW)
 1077              		.loc 1 887 0
 1078 0656 4FF48053 		mov	r3, #4096
 1079 065a C4F20203 		movt	r3, 16386
 1080 065e 1B6B     		ldr	r3, [r3, #48]
 1081 0660 03F01003 		and	r3, r3, #16
 1082 0664 002B     		cmp	r3, #0
 1083 0666 06D1     		bne	.L35
 888:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 889:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* I2C1 Clock is HSI Osc. */
 890:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->I2C1CLK_Frequency = HSI_VALUE;
 1084              		.loc 1 890 0
 1085 0668 019A     		ldr	r2, [sp, #4]
 1086 066a 4FF49053 		mov	r3, #4608
 1087 066e C0F27A03 		movt	r3, 122
 1088 0672 9361     		str	r3, [r2, #24]
 1089 0674 03E0     		b	.L36
 1090              	.L35:
 891:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 892:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
 893:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 894:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* I2C1 Clock is System Clock */
 895:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->I2C1CLK_Frequency = RCC_Clocks->SYSCLK_Frequency;
 1091              		.loc 1 895 0
 1092 0676 019B     		ldr	r3, [sp, #4]
 1093 0678 1A68     		ldr	r2, [r3, #0]
 1094 067a 019B     		ldr	r3, [sp, #4]
 1095 067c 9A61     		str	r2, [r3, #24]
 1096              	.L36:
 896:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 897:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 898:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* I2C2CLK clock frequency */
 899:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if((RCC->CFGR3 & RCC_CFGR3_I2C2SW) != RCC_CFGR3_I2C2SW)
 1097              		.loc 1 899 0
 1098 067e 4FF48053 		mov	r3, #4096
 1099 0682 C4F20203 		movt	r3, 16386
 1100 0686 1B6B     		ldr	r3, [r3, #48]
 1101 0688 03F02003 		and	r3, r3, #32
 1102 068c 002B     		cmp	r3, #0
 1103 068e 06D1     		bne	.L37
 900:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 901:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* I2C2 Clock is HSI Osc. */
 902:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->I2C2CLK_Frequency = HSI_VALUE;
 1104              		.loc 1 902 0
 1105 0690 019A     		ldr	r2, [sp, #4]
 1106 0692 4FF49053 		mov	r3, #4608
 1107 0696 C0F27A03 		movt	r3, 122
 1108 069a D361     		str	r3, [r2, #28]
 1109 069c 03E0     		b	.L38
 1110              	.L37:
 903:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 904:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
 905:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 906:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* I2C2 Clock is System Clock */
 907:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->I2C2CLK_Frequency = RCC_Clocks->SYSCLK_Frequency;
 1111              		.loc 1 907 0
 1112 069e 019B     		ldr	r3, [sp, #4]
 1113 06a0 1A68     		ldr	r2, [r3, #0]
 1114 06a2 019B     		ldr	r3, [sp, #4]
 1115 06a4 DA61     		str	r2, [r3, #28]
 1116              	.L38:
 908:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 909:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 910:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* TIM1CLK clock frequency */
 911:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if(((RCC->CFGR3 & RCC_CFGR3_TIM1SW) == RCC_CFGR3_TIM1SW)&& (RCC_Clocks->SYSCLK_Frequency == pllcl
 1117              		.loc 1 911 0
 1118 06a6 4FF48053 		mov	r3, #4096
 1119 06aa C4F20203 		movt	r3, 16386
 1120 06ae 1B6B     		ldr	r3, [r3, #48]
 1121 06b0 03F48073 		and	r3, r3, #256
 1122 06b4 002B     		cmp	r3, #0
 1123 06b6 0ED0     		beq	.L39
 1124              		.loc 1 911 0 is_stmt 0 discriminator 1
 1125 06b8 019B     		ldr	r3, [sp, #4]
 1126 06ba 1A68     		ldr	r2, [r3, #0]
 1127 06bc 099B     		ldr	r3, [sp, #36]
 1128 06be 9A42     		cmp	r2, r3
 1129 06c0 09D1     		bne	.L39
 912:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   && (apb2presc == ahbpresc)) 
 1130              		.loc 1 912 0 is_stmt 1
 1131 06c2 039A     		ldr	r2, [sp, #12]
 1132 06c4 029B     		ldr	r3, [sp, #8]
 1133 06c6 9A42     		cmp	r2, r3
 1134 06c8 05D1     		bne	.L39
 913:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 914:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* TIM1 Clock is 2 * pllclk */
 915:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->TIM1CLK_Frequency = pllclk * 2;
 1135              		.loc 1 915 0
 1136 06ca 099B     		ldr	r3, [sp, #36]
 1137 06cc 4FEA4302 		lsl	r2, r3, #1
 1138 06d0 019B     		ldr	r3, [sp, #4]
 1139 06d2 1A62     		str	r2, [r3, #32]
 1140 06d4 03E0     		b	.L40
 1141              	.L39:
 916:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 917:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
 918:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 919:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* TIM1 Clock is APB2 clock. */
 920:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->TIM1CLK_Frequency = RCC_Clocks->PCLK2_Frequency;
 1142              		.loc 1 920 0
 1143 06d6 019B     		ldr	r3, [sp, #4]
 1144 06d8 DA68     		ldr	r2, [r3, #12]
 1145 06da 019B     		ldr	r3, [sp, #4]
 1146 06dc 1A62     		str	r2, [r3, #32]
 1147              	.L40:
 921:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 922:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 923:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* TIM8CLK clock frequency */
 924:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if(((RCC->CFGR3 & RCC_CFGR3_TIM8SW) == RCC_CFGR3_TIM8SW)&& (RCC_Clocks->SYSCLK_Frequency == pllcl
 1148              		.loc 1 924 0
 1149 06de 4FF48053 		mov	r3, #4096
 1150 06e2 C4F20203 		movt	r3, 16386
 1151 06e6 1B6B     		ldr	r3, [r3, #48]
 1152 06e8 03F40073 		and	r3, r3, #512
 1153 06ec 002B     		cmp	r3, #0
 1154 06ee 0ED0     		beq	.L41
 1155              		.loc 1 924 0 is_stmt 0 discriminator 1
 1156 06f0 019B     		ldr	r3, [sp, #4]
 1157 06f2 1A68     		ldr	r2, [r3, #0]
 1158 06f4 099B     		ldr	r3, [sp, #36]
 1159 06f6 9A42     		cmp	r2, r3
 1160 06f8 09D1     		bne	.L41
 925:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   && (apb2presc == ahbpresc))
 1161              		.loc 1 925 0 is_stmt 1
 1162 06fa 039A     		ldr	r2, [sp, #12]
 1163 06fc 029B     		ldr	r3, [sp, #8]
 1164 06fe 9A42     		cmp	r2, r3
 1165 0700 05D1     		bne	.L41
 926:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 927:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* TIM8 Clock is 2 * pllclk */
 928:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->TIM8CLK_Frequency = pllclk * 2;
 1166              		.loc 1 928 0
 1167 0702 099B     		ldr	r3, [sp, #36]
 1168 0704 4FEA4302 		lsl	r2, r3, #1
 1169 0708 019B     		ldr	r3, [sp, #4]
 1170 070a 5A62     		str	r2, [r3, #36]
 1171 070c 03E0     		b	.L42
 1172              	.L41:
 929:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 930:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
 931:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 932:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* TIM8 Clock is APB2 clock. */
 933:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->TIM8CLK_Frequency = RCC_Clocks->PCLK2_Frequency;
 1173              		.loc 1 933 0
 1174 070e 019B     		ldr	r3, [sp, #4]
 1175 0710 DA68     		ldr	r2, [r3, #12]
 1176 0712 019B     		ldr	r3, [sp, #4]
 1177 0714 5A62     		str	r2, [r3, #36]
 1178              	.L42:
 934:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 935:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 936:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* USART1CLK clock frequency */
 937:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if((RCC->CFGR3 & RCC_CFGR3_USART1SW) == 0x0)
 1179              		.loc 1 937 0
 1180 0716 4FF48053 		mov	r3, #4096
 1181 071a C4F20203 		movt	r3, 16386
 1182 071e 1B6B     		ldr	r3, [r3, #48]
 1183 0720 03F00303 		and	r3, r3, #3
 1184 0724 002B     		cmp	r3, #0
 1185 0726 04D1     		bne	.L43
 938:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 939:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is PCLK */
 940:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART1CLK_Frequency = RCC_Clocks->PCLK2_Frequency;
 1186              		.loc 1 940 0
 1187 0728 019B     		ldr	r3, [sp, #4]
 1188 072a DA68     		ldr	r2, [r3, #12]
 1189 072c 019B     		ldr	r3, [sp, #4]
 1190 072e 9A62     		str	r2, [r3, #40]
 1191 0730 2AE0     		b	.L44
 1192              	.L43:
 941:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 942:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART1SW) == RCC_CFGR3_USART1SW_0)
 1193              		.loc 1 942 0
 1194 0732 4FF48053 		mov	r3, #4096
 1195 0736 C4F20203 		movt	r3, 16386
 1196 073a 1B6B     		ldr	r3, [r3, #48]
 1197 073c 03F00303 		and	r3, r3, #3
 1198 0740 012B     		cmp	r3, #1
 1199 0742 04D1     		bne	.L45
 943:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 944:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is System Clock */
 945:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART1CLK_Frequency = RCC_Clocks->SYSCLK_Frequency;
 1200              		.loc 1 945 0
 1201 0744 019B     		ldr	r3, [sp, #4]
 1202 0746 1A68     		ldr	r2, [r3, #0]
 1203 0748 019B     		ldr	r3, [sp, #4]
 1204 074a 9A62     		str	r2, [r3, #40]
 1205 074c 1CE0     		b	.L44
 1206              	.L45:
 946:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 947:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART1SW) == RCC_CFGR3_USART1SW_1)
 1207              		.loc 1 947 0
 1208 074e 4FF48053 		mov	r3, #4096
 1209 0752 C4F20203 		movt	r3, 16386
 1210 0756 1B6B     		ldr	r3, [r3, #48]
 1211 0758 03F00303 		and	r3, r3, #3
 1212 075c 022B     		cmp	r3, #2
 1213 075e 04D1     		bne	.L46
 948:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 949:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is LSE Osc. */
 950:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART1CLK_Frequency = LSE_VALUE;
 1214              		.loc 1 950 0
 1215 0760 019B     		ldr	r3, [sp, #4]
 1216 0762 4FF40042 		mov	r2, #32768
 1217 0766 9A62     		str	r2, [r3, #40]
 1218 0768 0EE0     		b	.L44
 1219              	.L46:
 951:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 952:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART1SW) == RCC_CFGR3_USART1SW)
 1220              		.loc 1 952 0
 1221 076a 4FF48053 		mov	r3, #4096
 1222 076e C4F20203 		movt	r3, 16386
 1223 0772 1B6B     		ldr	r3, [r3, #48]
 1224 0774 03F00303 		and	r3, r3, #3
 1225 0778 032B     		cmp	r3, #3
 1226 077a 05D1     		bne	.L44
 953:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 954:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is HSI Osc. */
 955:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART1CLK_Frequency = HSI_VALUE;
 1227              		.loc 1 955 0
 1228 077c 019A     		ldr	r2, [sp, #4]
 1229 077e 4FF49053 		mov	r3, #4608
 1230 0782 C0F27A03 		movt	r3, 122
 1231 0786 9362     		str	r3, [r2, #40]
 1232              	.L44:
 956:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 957:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 958:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* USART2CLK clock frequency */
 959:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if((RCC->CFGR3 & RCC_CFGR3_USART2SW) == 0x0)
 1233              		.loc 1 959 0
 1234 0788 4FF48053 		mov	r3, #4096
 1235 078c C4F20203 		movt	r3, 16386
 1236 0790 1B6B     		ldr	r3, [r3, #48]
 1237 0792 03F44033 		and	r3, r3, #196608
 1238 0796 002B     		cmp	r3, #0
 1239 0798 04D1     		bne	.L47
 960:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 961:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is PCLK */
 962:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART2CLK_Frequency = RCC_Clocks->PCLK1_Frequency;
 1240              		.loc 1 962 0
 1241 079a 019B     		ldr	r3, [sp, #4]
 1242 079c 9A68     		ldr	r2, [r3, #8]
 1243 079e 019B     		ldr	r3, [sp, #4]
 1244 07a0 DA62     		str	r2, [r3, #44]
 1245 07a2 2DE0     		b	.L48
 1246              	.L47:
 963:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 964:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART2SW) == RCC_CFGR3_USART2SW_0)
 1247              		.loc 1 964 0
 1248 07a4 4FF48053 		mov	r3, #4096
 1249 07a8 C4F20203 		movt	r3, 16386
 1250 07ac 1B6B     		ldr	r3, [r3, #48]
 1251 07ae 03F44033 		and	r3, r3, #196608
 1252 07b2 B3F5803F 		cmp	r3, #65536
 1253 07b6 04D1     		bne	.L49
 965:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 966:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is System Clock */
 967:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART2CLK_Frequency = RCC_Clocks->SYSCLK_Frequency;
 1254              		.loc 1 967 0
 1255 07b8 019B     		ldr	r3, [sp, #4]
 1256 07ba 1A68     		ldr	r2, [r3, #0]
 1257 07bc 019B     		ldr	r3, [sp, #4]
 1258 07be DA62     		str	r2, [r3, #44]
 1259 07c0 1EE0     		b	.L48
 1260              	.L49:
 968:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 969:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART2SW) == RCC_CFGR3_USART2SW_1)
 1261              		.loc 1 969 0
 1262 07c2 4FF48053 		mov	r3, #4096
 1263 07c6 C4F20203 		movt	r3, 16386
 1264 07ca 1B6B     		ldr	r3, [r3, #48]
 1265 07cc 03F44033 		and	r3, r3, #196608
 1266 07d0 B3F5003F 		cmp	r3, #131072
 1267 07d4 04D1     		bne	.L50
 970:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 971:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is LSE Osc. */
 972:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART2CLK_Frequency = LSE_VALUE;
 1268              		.loc 1 972 0
 1269 07d6 019B     		ldr	r3, [sp, #4]
 1270 07d8 4FF40042 		mov	r2, #32768
 1271 07dc DA62     		str	r2, [r3, #44]
 1272 07de 0FE0     		b	.L48
 1273              	.L50:
 973:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 974:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART2SW) == RCC_CFGR3_USART2SW)
 1274              		.loc 1 974 0
 1275 07e0 4FF48053 		mov	r3, #4096
 1276 07e4 C4F20203 		movt	r3, 16386
 1277 07e8 1B6B     		ldr	r3, [r3, #48]
 1278 07ea 03F44033 		and	r3, r3, #196608
 1279 07ee B3F5403F 		cmp	r3, #196608
 1280 07f2 05D1     		bne	.L48
 975:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 976:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is HSI Osc. */
 977:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART2CLK_Frequency = HSI_VALUE;
 1281              		.loc 1 977 0
 1282 07f4 019A     		ldr	r2, [sp, #4]
 1283 07f6 4FF49053 		mov	r3, #4608
 1284 07fa C0F27A03 		movt	r3, 122
 1285 07fe D362     		str	r3, [r2, #44]
 1286              	.L48:
 978:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }    
 979:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 980:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* USART3CLK clock frequency */
 981:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if((RCC->CFGR3 & RCC_CFGR3_USART3SW) == 0x0)
 1287              		.loc 1 981 0
 1288 0800 4FF48053 		mov	r3, #4096
 1289 0804 C4F20203 		movt	r3, 16386
 1290 0808 1B6B     		ldr	r3, [r3, #48]
 1291 080a 03F44023 		and	r3, r3, #786432
 1292 080e 002B     		cmp	r3, #0
 1293 0810 04D1     		bne	.L51
 982:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 983:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is PCLK */
 984:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART3CLK_Frequency = RCC_Clocks->PCLK1_Frequency;
 1294              		.loc 1 984 0
 1295 0812 019B     		ldr	r3, [sp, #4]
 1296 0814 9A68     		ldr	r2, [r3, #8]
 1297 0816 019B     		ldr	r3, [sp, #4]
 1298 0818 1A63     		str	r2, [r3, #48]
 1299 081a 2DE0     		b	.L52
 1300              	.L51:
 985:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 986:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART3SW) == RCC_CFGR3_USART3SW_0)
 1301              		.loc 1 986 0
 1302 081c 4FF48053 		mov	r3, #4096
 1303 0820 C4F20203 		movt	r3, 16386
 1304 0824 1B6B     		ldr	r3, [r3, #48]
 1305 0826 03F44023 		and	r3, r3, #786432
 1306 082a B3F5802F 		cmp	r3, #262144
 1307 082e 04D1     		bne	.L53
 987:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 988:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is System Clock */
 989:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART3CLK_Frequency = RCC_Clocks->SYSCLK_Frequency;
 1308              		.loc 1 989 0
 1309 0830 019B     		ldr	r3, [sp, #4]
 1310 0832 1A68     		ldr	r2, [r3, #0]
 1311 0834 019B     		ldr	r3, [sp, #4]
 1312 0836 1A63     		str	r2, [r3, #48]
 1313 0838 1EE0     		b	.L52
 1314              	.L53:
 990:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 991:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART3SW) == RCC_CFGR3_USART3SW_1)
 1315              		.loc 1 991 0
 1316 083a 4FF48053 		mov	r3, #4096
 1317 083e C4F20203 		movt	r3, 16386
 1318 0842 1B6B     		ldr	r3, [r3, #48]
 1319 0844 03F44023 		and	r3, r3, #786432
 1320 0848 B3F5002F 		cmp	r3, #524288
 1321 084c 04D1     		bne	.L54
 992:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 993:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is LSE Osc. */
 994:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART3CLK_Frequency = LSE_VALUE;
 1322              		.loc 1 994 0
 1323 084e 019B     		ldr	r3, [sp, #4]
 1324 0850 4FF40042 		mov	r2, #32768
 1325 0854 1A63     		str	r2, [r3, #48]
 1326 0856 0FE0     		b	.L52
 1327              	.L54:
 995:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 996:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART3SW) == RCC_CFGR3_USART3SW)
 1328              		.loc 1 996 0
 1329 0858 4FF48053 		mov	r3, #4096
 1330 085c C4F20203 		movt	r3, 16386
 1331 0860 1B6B     		ldr	r3, [r3, #48]
 1332 0862 03F44023 		and	r3, r3, #786432
 1333 0866 B3F5402F 		cmp	r3, #786432
 1334 086a 05D1     		bne	.L52
 997:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 998:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is HSI Osc. */
 999:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART3CLK_Frequency = HSI_VALUE;
 1335              		.loc 1 999 0
 1336 086c 019A     		ldr	r2, [sp, #4]
 1337 086e 4FF49053 		mov	r3, #4608
 1338 0872 C0F27A03 		movt	r3, 122
 1339 0876 1363     		str	r3, [r2, #48]
 1340              	.L52:
1000:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1001:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1002:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* UART4CLK clock frequency */
1003:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if((RCC->CFGR3 & RCC_CFGR3_UART4SW) == 0x0)
 1341              		.loc 1 1003 0
 1342 0878 4FF48053 		mov	r3, #4096
 1343 087c C4F20203 		movt	r3, 16386
 1344 0880 1B6B     		ldr	r3, [r3, #48]
 1345 0882 03F44013 		and	r3, r3, #3145728
 1346 0886 002B     		cmp	r3, #0
 1347 0888 04D1     		bne	.L55
1004:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1005:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is PCLK */
1006:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->UART4CLK_Frequency = RCC_Clocks->PCLK1_Frequency;
 1348              		.loc 1 1006 0
 1349 088a 019B     		ldr	r3, [sp, #4]
 1350 088c 9A68     		ldr	r2, [r3, #8]
 1351 088e 019B     		ldr	r3, [sp, #4]
 1352 0890 5A63     		str	r2, [r3, #52]
 1353 0892 2DE0     		b	.L56
 1354              	.L55:
1007:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1008:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_UART4SW) == RCC_CFGR3_UART4SW_0)
 1355              		.loc 1 1008 0
 1356 0894 4FF48053 		mov	r3, #4096
 1357 0898 C4F20203 		movt	r3, 16386
 1358 089c 1B6B     		ldr	r3, [r3, #48]
 1359 089e 03F44013 		and	r3, r3, #3145728
 1360 08a2 B3F5801F 		cmp	r3, #1048576
 1361 08a6 04D1     		bne	.L57
1009:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1010:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is System Clock */
1011:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->UART4CLK_Frequency = RCC_Clocks->SYSCLK_Frequency;
 1362              		.loc 1 1011 0
 1363 08a8 019B     		ldr	r3, [sp, #4]
 1364 08aa 1A68     		ldr	r2, [r3, #0]
 1365 08ac 019B     		ldr	r3, [sp, #4]
 1366 08ae 5A63     		str	r2, [r3, #52]
 1367 08b0 1EE0     		b	.L56
 1368              	.L57:
1012:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1013:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_UART4SW) == RCC_CFGR3_UART4SW_1)
 1369              		.loc 1 1013 0
 1370 08b2 4FF48053 		mov	r3, #4096
 1371 08b6 C4F20203 		movt	r3, 16386
 1372 08ba 1B6B     		ldr	r3, [r3, #48]
 1373 08bc 03F44013 		and	r3, r3, #3145728
 1374 08c0 B3F5001F 		cmp	r3, #2097152
 1375 08c4 04D1     		bne	.L58
1014:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1015:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is LSE Osc. */
1016:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->UART4CLK_Frequency = LSE_VALUE;
 1376              		.loc 1 1016 0
 1377 08c6 019B     		ldr	r3, [sp, #4]
 1378 08c8 4FF40042 		mov	r2, #32768
 1379 08cc 5A63     		str	r2, [r3, #52]
 1380 08ce 0FE0     		b	.L56
 1381              	.L58:
1017:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1018:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_UART4SW) == RCC_CFGR3_UART4SW)
 1382              		.loc 1 1018 0
 1383 08d0 4FF48053 		mov	r3, #4096
 1384 08d4 C4F20203 		movt	r3, 16386
 1385 08d8 1B6B     		ldr	r3, [r3, #48]
 1386 08da 03F44013 		and	r3, r3, #3145728
 1387 08de B3F5401F 		cmp	r3, #3145728
 1388 08e2 05D1     		bne	.L56
1019:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1020:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is HSI Osc. */
1021:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->UART4CLK_Frequency = HSI_VALUE;
 1389              		.loc 1 1021 0
 1390 08e4 019A     		ldr	r2, [sp, #4]
 1391 08e6 4FF49053 		mov	r3, #4608
 1392 08ea C0F27A03 		movt	r3, 122
 1393 08ee 5363     		str	r3, [r2, #52]
 1394              	.L56:
1022:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }   
1023:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1024:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* UART5CLK clock frequency */
1025:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if((RCC->CFGR3 & RCC_CFGR3_UART5SW) == 0x0)
 1395              		.loc 1 1025 0
 1396 08f0 4FF48053 		mov	r3, #4096
 1397 08f4 C4F20203 		movt	r3, 16386
 1398 08f8 1B6B     		ldr	r3, [r3, #48]
 1399 08fa 03F44003 		and	r3, r3, #12582912
 1400 08fe 002B     		cmp	r3, #0
 1401 0900 04D1     		bne	.L59
1026:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1027:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is PCLK */
1028:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->UART5CLK_Frequency = RCC_Clocks->PCLK1_Frequency;
 1402              		.loc 1 1028 0
 1403 0902 019B     		ldr	r3, [sp, #4]
 1404 0904 9A68     		ldr	r2, [r3, #8]
 1405 0906 019B     		ldr	r3, [sp, #4]
 1406 0908 9A63     		str	r2, [r3, #56]
 1407 090a 2DE0     		b	.L23
 1408              	.L59:
1029:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1030:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_UART5SW) == RCC_CFGR3_UART5SW_0)
 1409              		.loc 1 1030 0
 1410 090c 4FF48053 		mov	r3, #4096
 1411 0910 C4F20203 		movt	r3, 16386
 1412 0914 1B6B     		ldr	r3, [r3, #48]
 1413 0916 03F44003 		and	r3, r3, #12582912
 1414 091a B3F5800F 		cmp	r3, #4194304
 1415 091e 04D1     		bne	.L61
1031:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1032:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is System Clock */
1033:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->UART5CLK_Frequency = RCC_Clocks->SYSCLK_Frequency;
 1416              		.loc 1 1033 0
 1417 0920 019B     		ldr	r3, [sp, #4]
 1418 0922 1A68     		ldr	r2, [r3, #0]
 1419 0924 019B     		ldr	r3, [sp, #4]
 1420 0926 9A63     		str	r2, [r3, #56]
 1421 0928 1EE0     		b	.L23
 1422              	.L61:
1034:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1035:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_UART5SW) == RCC_CFGR3_UART5SW_1)
 1423              		.loc 1 1035 0
 1424 092a 4FF48053 		mov	r3, #4096
 1425 092e C4F20203 		movt	r3, 16386
 1426 0932 1B6B     		ldr	r3, [r3, #48]
 1427 0934 03F44003 		and	r3, r3, #12582912
 1428 0938 B3F5000F 		cmp	r3, #8388608
 1429 093c 04D1     		bne	.L62
1036:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1037:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is LSE Osc. */
1038:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->UART5CLK_Frequency = LSE_VALUE;
 1430              		.loc 1 1038 0
 1431 093e 019B     		ldr	r3, [sp, #4]
 1432 0940 4FF40042 		mov	r2, #32768
 1433 0944 9A63     		str	r2, [r3, #56]
 1434 0946 0FE0     		b	.L23
 1435              	.L62:
1039:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1040:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_UART5SW) == RCC_CFGR3_UART5SW)
 1436              		.loc 1 1040 0
 1437 0948 4FF48053 		mov	r3, #4096
 1438 094c C4F20203 		movt	r3, 16386
 1439 0950 1B6B     		ldr	r3, [r3, #48]
 1440 0952 03F44003 		and	r3, r3, #12582912
 1441 0956 B3F5400F 		cmp	r3, #12582912
 1442 095a 05D1     		bne	.L23
1041:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1042:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is HSI Osc. */
1043:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->UART5CLK_Frequency = HSI_VALUE;
 1443              		.loc 1 1043 0
 1444 095c 019A     		ldr	r2, [sp, #4]
 1445 095e 4FF49053 		mov	r3, #4608
 1446 0962 C0F27A03 		movt	r3, 122
 1447 0966 9363     		str	r3, [r2, #56]
 1448              	.L23:
1044:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   } 
1045:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 1449              		.loc 1 1045 0
 1450 0968 0AB0     		add	sp, sp, #40
 1451 096a 7047     		bx	lr
 1452              		.cfi_endproc
 1453              	.LFE129:
 1455              		.align	2
 1456              		.global	RCC_ADCCLKConfig
 1457              		.thumb
 1458              		.thumb_func
 1460              	RCC_ADCCLKConfig:
 1461              	.LFB130:
1046:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1047:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1048:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @}
1049:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1050:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1051:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /** @defgroup RCC_Group3 Peripheral clocks configuration functions
1052:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  *  @brief   Peripheral clocks configuration functions 
1053:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  *
1054:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** @verbatim   
1055:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ===============================================================================
1056:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             ##### Peripheral clocks configuration functions #####
1057:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ===============================================================================  
1058:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     [..] This section provide functions allowing to configure the Peripheral clocks. 
1059:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) The RTC clock which is derived from the LSE, LSI or  HSE_Div32 
1060:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              (HSE divided by 32).
1061:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) After restart from Reset or wakeup from STANDBY, all peripherals are 
1062:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              off except internal SRAM, Flash and SWD. Before to start using 
1063:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              a peripheral you have to enable its interface clock. You can do this 
1064:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              using RCC_AHBPeriphClockCmd(), RCC_APB2PeriphClockCmd() 
1065:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              and RCC_APB1PeriphClockCmd() functions.
1066:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) To reset the peripherals configuration (to the default state after 
1067:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              device reset) you can use RCC_AHBPeriphResetCmd(), RCC_APB2PeriphResetCmd() 
1068:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              and RCC_APB1PeriphResetCmd() functions.
1069:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** @endverbatim
1070:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @{
1071:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1072:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1073:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1074:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the ADC clock (ADCCLK).
1075:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_PLLCLK: defines the ADC clock divider. This clock is derived from 
1076:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         the PLL Clock.
1077:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
1078:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_OFF: ADC12 clock disabled
1079:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div1: ADC12 clock = PLLCLK/1
1080:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div2: ADC12 clock = PLLCLK/2
1081:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div4: ADC12 clock = PLLCLK/4
1082:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div6: ADC12 clock = PLLCLK/6
1083:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div8: ADC12 clock = PLLCLK/8
1084:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div10: ADC12 clock = PLLCLK/10
1085:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div12: ADC12 clock = PLLCLK/12
1086:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div16: ADC12 clock = PLLCLK/16
1087:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div32: ADC12 clock = PLLCLK/32
1088:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div64: ADC12 clock = PLLCLK/64
1089:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div128: ADC12 clock = PLLCLK/128
1090:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div256: ADC12 clock = PLLCLK/256
1091:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_OFF: ADC34 clock disabled
1092:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div1: ADC34 clock = PLLCLK/1
1093:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div2: ADC34 clock = PLLCLK/2
1094:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div4: ADC34 clock = PLLCLK/4
1095:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div6: ADC34 clock = PLLCLK/6
1096:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div8: ADC34 clock = PLLCLK/8
1097:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div10: ADC34 clock = PLLCLK/10
1098:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div12: ADC34 clock = PLLCLK/12
1099:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div16: ADC34 clock = PLLCLK/16
1100:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div32: ADC34 clock = PLLCLK/32
1101:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div64: ADC34 clock = PLLCLK/64       
1102:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div128: ADC34 clock = PLLCLK/128                                  
1103:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div256: ADC34 clock = PLLCLK/256
1104:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1105:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1106:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_ADCCLKConfig(uint32_t RCC_PLLCLK)
1107:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 1462              		.loc 1 1107 0
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 16
 1465              		@ frame_needed = 0, uses_anonymous_args = 0
 1466              		@ link register save eliminated.
 1467 096c 84B0     		sub	sp, sp, #16
 1468              	.LCFI18:
 1469              		.cfi_def_cfa_offset 16
 1470 096e 0190     		str	r0, [sp, #4]
1108:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmp = 0;
 1471              		.loc 1 1108 0
 1472 0970 4FF00003 		mov	r3, #0
 1473 0974 0393     		str	r3, [sp, #12]
1109:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1110:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1111:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_ADCCLK(RCC_PLLCLK));
1112:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1113:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = (RCC_PLLCLK >> 28);
 1474              		.loc 1 1113 0
 1475 0976 019B     		ldr	r3, [sp, #4]
 1476 0978 4FEA1373 		lsr	r3, r3, #28
 1477 097c 0393     		str	r3, [sp, #12]
1114:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1115:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clears ADCPRE34 bits */
1116:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (tmp != 0)
 1478              		.loc 1 1116 0
 1479 097e 039B     		ldr	r3, [sp, #12]
 1480 0980 002B     		cmp	r3, #0
 1481 0982 0CD0     		beq	.L65
1117:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1118:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->CFGR2 &= ~RCC_CFGR2_ADCPRE34;
 1482              		.loc 1 1118 0
 1483 0984 4FF48053 		mov	r3, #4096
 1484 0988 C4F20203 		movt	r3, 16386
 1485 098c 4FF48052 		mov	r2, #4096
 1486 0990 C4F20202 		movt	r2, 16386
 1487 0994 D26A     		ldr	r2, [r2, #44]
 1488 0996 22F47852 		bic	r2, r2, #15872
 1489 099a DA62     		str	r2, [r3, #44]
 1490 099c 0BE0     		b	.L66
 1491              	.L65:
1119:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1120:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****    /* Clears ADCPRE12 bits */
1121:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1122:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1123:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->CFGR2 &= ~RCC_CFGR2_ADCPRE12;
 1492              		.loc 1 1123 0
 1493 099e 4FF48053 		mov	r3, #4096
 1494 09a2 C4F20203 		movt	r3, 16386
 1495 09a6 4FF48052 		mov	r2, #4096
 1496 09aa C4F20202 		movt	r2, 16386
 1497 09ae D26A     		ldr	r2, [r2, #44]
 1498 09b0 22F4F872 		bic	r2, r2, #496
 1499 09b4 DA62     		str	r2, [r3, #44]
 1500              	.L66:
1124:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1125:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set ADCPRE bits according to RCC_PLLCLK value */
1126:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR2 |= RCC_PLLCLK;
 1501              		.loc 1 1126 0
 1502 09b6 4FF48053 		mov	r3, #4096
 1503 09ba C4F20203 		movt	r3, 16386
 1504 09be 4FF48052 		mov	r2, #4096
 1505 09c2 C4F20202 		movt	r2, 16386
 1506 09c6 D16A     		ldr	r1, [r2, #44]
 1507 09c8 019A     		ldr	r2, [sp, #4]
 1508 09ca 0A43     		orrs	r2, r2, r1
 1509 09cc DA62     		str	r2, [r3, #44]
1127:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 1510              		.loc 1 1127 0
 1511 09ce 04B0     		add	sp, sp, #16
 1512 09d0 7047     		bx	lr
 1513              		.cfi_endproc
 1514              	.LFE130:
 1516 09d2 00BF     		.align	2
 1517              		.global	RCC_I2CCLKConfig
 1518              		.thumb
 1519              		.thumb_func
 1521              	RCC_I2CCLKConfig:
 1522              	.LFB131:
1128:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1129:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1130:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the I2C clock (I2CCLK).
1131:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_I2CCLK: defines the I2C clock source. This clock is derived 
1132:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         from the HSI or System clock.
1133:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
1134:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_I2CxCLK_HSI: I2Cx clock = HSI
1135:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_I2CxCLK_SYSCLK: I2Cx clock = System Clock
1136:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *          (x can be 1 or 2).  
1137:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1138:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1139:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_I2CCLKConfig(uint32_t RCC_I2CCLK)
1140:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** { 
 1523              		.loc 1 1140 0
 1524              		.cfi_startproc
 1525              		@ args = 0, pretend = 0, frame = 16
 1526              		@ frame_needed = 0, uses_anonymous_args = 0
 1527              		@ link register save eliminated.
 1528 09d4 84B0     		sub	sp, sp, #16
 1529              	.LCFI19:
 1530              		.cfi_def_cfa_offset 16
 1531 09d6 0190     		str	r0, [sp, #4]
1141:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmp = 0;
 1532              		.loc 1 1141 0
 1533 09d8 4FF00003 		mov	r3, #0
 1534 09dc 0393     		str	r3, [sp, #12]
1142:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1143:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1144:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_I2CCLK(RCC_I2CCLK));
1145:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1146:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = (RCC_I2CCLK >> 28);
 1535              		.loc 1 1146 0
 1536 09de 019B     		ldr	r3, [sp, #4]
 1537 09e0 4FEA1373 		lsr	r3, r3, #28
 1538 09e4 0393     		str	r3, [sp, #12]
1147:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1148:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear I2CSW bit */
1149:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (tmp != 0)
 1539              		.loc 1 1149 0
 1540 09e6 039B     		ldr	r3, [sp, #12]
 1541 09e8 002B     		cmp	r3, #0
 1542 09ea 0CD0     		beq	.L68
1150:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1151:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->CFGR3 &= ~RCC_CFGR3_I2C2SW;
 1543              		.loc 1 1151 0
 1544 09ec 4FF48053 		mov	r3, #4096
 1545 09f0 C4F20203 		movt	r3, 16386
 1546 09f4 4FF48052 		mov	r2, #4096
 1547 09f8 C4F20202 		movt	r2, 16386
 1548 09fc 126B     		ldr	r2, [r2, #48]
 1549 09fe 22F02002 		bic	r2, r2, #32
 1550 0a02 1A63     		str	r2, [r3, #48]
 1551 0a04 0BE0     		b	.L69
 1552              	.L68:
1152:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1153:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1154:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1155:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->CFGR3 &= ~RCC_CFGR3_I2C1SW;
 1553              		.loc 1 1155 0
 1554 0a06 4FF48053 		mov	r3, #4096
 1555 0a0a C4F20203 		movt	r3, 16386
 1556 0a0e 4FF48052 		mov	r2, #4096
 1557 0a12 C4F20202 		movt	r2, 16386
 1558 0a16 126B     		ldr	r2, [r2, #48]
 1559 0a18 22F01002 		bic	r2, r2, #16
 1560 0a1c 1A63     		str	r2, [r3, #48]
 1561              	.L69:
1156:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1157:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set I2CSW bits according to RCC_I2CCLK value */
1158:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR3 |= RCC_I2CCLK;
 1562              		.loc 1 1158 0
 1563 0a1e 4FF48053 		mov	r3, #4096
 1564 0a22 C4F20203 		movt	r3, 16386
 1565 0a26 4FF48052 		mov	r2, #4096
 1566 0a2a C4F20202 		movt	r2, 16386
 1567 0a2e 116B     		ldr	r1, [r2, #48]
 1568 0a30 019A     		ldr	r2, [sp, #4]
 1569 0a32 0A43     		orrs	r2, r2, r1
 1570 0a34 1A63     		str	r2, [r3, #48]
1159:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 1571              		.loc 1 1159 0
 1572 0a36 04B0     		add	sp, sp, #16
 1573 0a38 7047     		bx	lr
 1574              		.cfi_endproc
 1575              	.LFE131:
 1577 0a3a 00BF     		.align	2
 1578              		.global	RCC_TIMCLKConfig
 1579              		.thumb
 1580              		.thumb_func
 1582              	RCC_TIMCLKConfig:
 1583              	.LFB132:
1160:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1161:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1162:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the TIM1 and TIM8 clock sources(TIMCLK).
1163:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     The configuration of the TIMx clock source is only possible when the 
1164:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           SYSCLK = PLL and HCLK and PCLK2 clocks are not divided in respect to SYSCLK
1165:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     If one of the previous conditions is missed, the TIM clock source 
1166:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           configuration is lost and calling again this function becomes mandatory.  
1167:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_TIMCLK: defines the TIMx clock source.
1168:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
1169:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_TIMxCLK_HCLK: TIMx clock = APB high speed clock (doubled frequency
1170:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *          when prescaled)
1171:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_TIMxCLK_PLLCLK: TIMx clock = PLL output (running up to 144 MHz)
1172:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *          (x can be 1 or 8).
1173:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1174:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1175:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_TIMCLKConfig(uint32_t RCC_TIMCLK)
1176:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** { 
 1584              		.loc 1 1176 0
 1585              		.cfi_startproc
 1586              		@ args = 0, pretend = 0, frame = 16
 1587              		@ frame_needed = 0, uses_anonymous_args = 0
 1588              		@ link register save eliminated.
 1589 0a3c 84B0     		sub	sp, sp, #16
 1590              	.LCFI20:
 1591              		.cfi_def_cfa_offset 16
 1592 0a3e 0190     		str	r0, [sp, #4]
1177:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmp = 0;
 1593              		.loc 1 1177 0
 1594 0a40 4FF00003 		mov	r3, #0
 1595 0a44 0393     		str	r3, [sp, #12]
1178:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1179:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1180:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_TIMCLK(RCC_TIMCLK));
1181:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1182:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = (RCC_TIMCLK >> 28);
 1596              		.loc 1 1182 0
 1597 0a46 019B     		ldr	r3, [sp, #4]
 1598 0a48 4FEA1373 		lsr	r3, r3, #28
 1599 0a4c 0393     		str	r3, [sp, #12]
1183:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1184:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear I2CSW bit */
1185:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (tmp != 0)
 1600              		.loc 1 1185 0
 1601 0a4e 039B     		ldr	r3, [sp, #12]
 1602 0a50 002B     		cmp	r3, #0
 1603 0a52 0CD0     		beq	.L71
1186:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1187:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->CFGR3 &= ~RCC_CFGR3_TIM8SW;
 1604              		.loc 1 1187 0
 1605 0a54 4FF48053 		mov	r3, #4096
 1606 0a58 C4F20203 		movt	r3, 16386
 1607 0a5c 4FF48052 		mov	r2, #4096
 1608 0a60 C4F20202 		movt	r2, 16386
 1609 0a64 126B     		ldr	r2, [r2, #48]
 1610 0a66 22F40072 		bic	r2, r2, #512
 1611 0a6a 1A63     		str	r2, [r3, #48]
 1612 0a6c 0BE0     		b	.L72
 1613              	.L71:
1188:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1189:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1190:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1191:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->CFGR3 &= ~RCC_CFGR3_TIM1SW;
 1614              		.loc 1 1191 0
 1615 0a6e 4FF48053 		mov	r3, #4096
 1616 0a72 C4F20203 		movt	r3, 16386
 1617 0a76 4FF48052 		mov	r2, #4096
 1618 0a7a C4F20202 		movt	r2, 16386
 1619 0a7e 126B     		ldr	r2, [r2, #48]
 1620 0a80 22F48072 		bic	r2, r2, #256
 1621 0a84 1A63     		str	r2, [r3, #48]
 1622              	.L72:
1192:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1193:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set I2CSW bits according to RCC_TIMCLK value */
1194:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR3 |= RCC_TIMCLK;
 1623              		.loc 1 1194 0
 1624 0a86 4FF48053 		mov	r3, #4096
 1625 0a8a C4F20203 		movt	r3, 16386
 1626 0a8e 4FF48052 		mov	r2, #4096
 1627 0a92 C4F20202 		movt	r2, 16386
 1628 0a96 116B     		ldr	r1, [r2, #48]
 1629 0a98 019A     		ldr	r2, [sp, #4]
 1630 0a9a 0A43     		orrs	r2, r2, r1
 1631 0a9c 1A63     		str	r2, [r3, #48]
1195:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 1632              		.loc 1 1195 0
 1633 0a9e 04B0     		add	sp, sp, #16
 1634 0aa0 7047     		bx	lr
 1635              		.cfi_endproc
 1636              	.LFE132:
 1638 0aa2 00BF     		.align	2
 1639              		.global	RCC_USARTCLKConfig
 1640              		.thumb
 1641              		.thumb_func
 1643              	RCC_USARTCLKConfig:
 1644              	.LFB133:
1196:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1197:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1198:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the USART clock (USARTCLK).
1199:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_USARTCLK: defines the USART clock source. This clock is derived 
1200:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         from the HSI or System clock.
1201:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
1202:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_USARTxCLK_PCLK: USART clock = APB Clock (PCLK)
1203:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_USARTxCLK_SYSCLK: USART clock = System Clock
1204:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_USARTxCLK_LSE: USART clock = LSE Clock
1205:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_USARTxCLK_HSI: USART clock = HSI Clock
1206:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *          (x can be 1, 2, 3, 4 or 5).  
1207:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1208:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1209:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_USARTCLKConfig(uint32_t RCC_USARTCLK)
1210:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** { 
 1645              		.loc 1 1210 0
 1646              		.cfi_startproc
 1647              		@ args = 0, pretend = 0, frame = 16
 1648              		@ frame_needed = 0, uses_anonymous_args = 0
 1649              		@ link register save eliminated.
 1650 0aa4 84B0     		sub	sp, sp, #16
 1651              	.LCFI21:
 1652              		.cfi_def_cfa_offset 16
 1653 0aa6 0190     		str	r0, [sp, #4]
1211:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmp = 0;
 1654              		.loc 1 1211 0
 1655 0aa8 4FF00003 		mov	r3, #0
 1656 0aac 0393     		str	r3, [sp, #12]
1212:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1213:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1214:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_USARTCLK(RCC_USARTCLK));
1215:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1216:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = (RCC_USARTCLK >> 28);
 1657              		.loc 1 1216 0
 1658 0aae 019B     		ldr	r3, [sp, #4]
 1659 0ab0 4FEA1373 		lsr	r3, r3, #28
 1660 0ab4 0393     		str	r3, [sp, #12]
1217:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1218:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear USARTSW[1:0] bit */
1219:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   switch (tmp)
 1661              		.loc 1 1219 0
 1662 0ab6 039B     		ldr	r3, [sp, #12]
 1663 0ab8 03F1FF33 		add	r3, r3, #-1
 1664 0abc 042B     		cmp	r3, #4
 1665 0abe 4ED8     		bhi	.L82
 1666 0ac0 01A2     		adr	r2, .L80
 1667 0ac2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1668 0ac6 00BF     		.align	2
 1669              	.L80:
 1670 0ac8 DD0A0000 		.word	.L75+1
 1671 0acc F70A0000 		.word	.L76+1
 1672 0ad0 110B0000 		.word	.L77+1
 1673 0ad4 2B0B0000 		.word	.L78+1
 1674 0ad8 450B0000 		.word	.L79+1
 1675              	.L75:
1220:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1221:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     case 0x01:  /* clear USART1SW */
1222:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       RCC->CFGR3 &= ~RCC_CFGR3_USART1SW;
 1676              		.loc 1 1222 0
 1677 0adc 4FF48053 		mov	r3, #4096
 1678 0ae0 C4F20203 		movt	r3, 16386
 1679 0ae4 4FF48052 		mov	r2, #4096
 1680 0ae8 C4F20202 		movt	r2, 16386
 1681 0aec 126B     		ldr	r2, [r2, #48]
 1682 0aee 22F00302 		bic	r2, r2, #3
 1683 0af2 1A63     		str	r2, [r3, #48]
1223:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       break;
 1684              		.loc 1 1223 0
 1685 0af4 34E0     		b	.L81
 1686              	.L76:
1224:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     case 0x02:  /* clear USART2SW */
1225:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       RCC->CFGR3 &= ~RCC_CFGR3_USART2SW;
 1687              		.loc 1 1225 0
 1688 0af6 4FF48053 		mov	r3, #4096
 1689 0afa C4F20203 		movt	r3, 16386
 1690 0afe 4FF48052 		mov	r2, #4096
 1691 0b02 C4F20202 		movt	r2, 16386
 1692 0b06 126B     		ldr	r2, [r2, #48]
 1693 0b08 22F44032 		bic	r2, r2, #196608
 1694 0b0c 1A63     		str	r2, [r3, #48]
1226:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       break;
 1695              		.loc 1 1226 0
 1696 0b0e 27E0     		b	.L81
 1697              	.L77:
1227:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     case 0x03:  /* clear USART3SW */
1228:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       RCC->CFGR3 &= ~RCC_CFGR3_USART3SW;
 1698              		.loc 1 1228 0
 1699 0b10 4FF48053 		mov	r3, #4096
 1700 0b14 C4F20203 		movt	r3, 16386
 1701 0b18 4FF48052 		mov	r2, #4096
 1702 0b1c C4F20202 		movt	r2, 16386
 1703 0b20 126B     		ldr	r2, [r2, #48]
 1704 0b22 22F44022 		bic	r2, r2, #786432
 1705 0b26 1A63     		str	r2, [r3, #48]
1229:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       break;
 1706              		.loc 1 1229 0
 1707 0b28 1AE0     		b	.L81
 1708              	.L78:
1230:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     case 0x04:  /* clear UART4SW */
1231:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       RCC->CFGR3 &= ~RCC_CFGR3_UART4SW;
 1709              		.loc 1 1231 0
 1710 0b2a 4FF48053 		mov	r3, #4096
 1711 0b2e C4F20203 		movt	r3, 16386
 1712 0b32 4FF48052 		mov	r2, #4096
 1713 0b36 C4F20202 		movt	r2, 16386
 1714 0b3a 126B     		ldr	r2, [r2, #48]
 1715 0b3c 22F44012 		bic	r2, r2, #3145728
 1716 0b40 1A63     		str	r2, [r3, #48]
1232:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       break;
 1717              		.loc 1 1232 0
 1718 0b42 0DE0     		b	.L81
 1719              	.L79:
1233:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     case 0x05:  /* clear UART5SW */
1234:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       RCC->CFGR3 &= ~RCC_CFGR3_UART5SW;
 1720              		.loc 1 1234 0
 1721 0b44 4FF48053 		mov	r3, #4096
 1722 0b48 C4F20203 		movt	r3, 16386
 1723 0b4c 4FF48052 		mov	r2, #4096
 1724 0b50 C4F20202 		movt	r2, 16386
 1725 0b54 126B     		ldr	r2, [r2, #48]
 1726 0b56 22F44002 		bic	r2, r2, #12582912
 1727 0b5a 1A63     		str	r2, [r3, #48]
1235:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       break;
 1728              		.loc 1 1235 0
 1729 0b5c 00E0     		b	.L81
 1730              	.L82:
1236:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     default:
1237:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       break;
 1731              		.loc 1 1237 0
 1732 0b5e 00BF     		nop
 1733              	.L81:
1238:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1239:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1240:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set USARTSW bits according to RCC_USARTCLK value */
1241:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR3 |= RCC_USARTCLK;
 1734              		.loc 1 1241 0
 1735 0b60 4FF48053 		mov	r3, #4096
 1736 0b64 C4F20203 		movt	r3, 16386
 1737 0b68 4FF48052 		mov	r2, #4096
 1738 0b6c C4F20202 		movt	r2, 16386
 1739 0b70 116B     		ldr	r1, [r2, #48]
 1740 0b72 019A     		ldr	r2, [sp, #4]
 1741 0b74 0A43     		orrs	r2, r2, r1
 1742 0b76 1A63     		str	r2, [r3, #48]
1242:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 1743              		.loc 1 1242 0
 1744 0b78 04B0     		add	sp, sp, #16
 1745 0b7a 7047     		bx	lr
 1746              		.cfi_endproc
 1747              	.LFE133:
 1749              		.align	2
 1750              		.global	RCC_USBCLKConfig
 1751              		.thumb
 1752              		.thumb_func
 1754              	RCC_USBCLKConfig:
 1755              	.LFB134:
1243:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1244:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1245:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the USB clock (USBCLK).
1246:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_USBCLKSource: specifies the USB clock source. This clock is 
1247:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   derived from the PLL output.
1248:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
1249:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_1Div5: PLL clock divided by 1,5 selected as USB 
1250:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                                     clock source
1251:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_Div1: PLL clock selected as USB clock source
1252:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1253:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1254:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource)
1255:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 1756              		.loc 1 1255 0
 1757              		.cfi_startproc
 1758              		@ args = 0, pretend = 0, frame = 8
 1759              		@ frame_needed = 0, uses_anonymous_args = 0
 1760              		@ link register save eliminated.
 1761 0b7c 82B0     		sub	sp, sp, #8
 1762              	.LCFI22:
 1763              		.cfi_def_cfa_offset 8
 1764 0b7e 0190     		str	r0, [sp, #4]
1256:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1257:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_USBCLK_SOURCE(RCC_USBCLKSource));
1258:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1259:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint32_t *) CFGR_USBPRE_BB = RCC_USBCLKSource;
 1765              		.loc 1 1259 0
 1766 0b80 4FF0D803 		mov	r3, #216
 1767 0b84 C4F24223 		movt	r3, 16962
 1768 0b88 019A     		ldr	r2, [sp, #4]
 1769 0b8a 1A60     		str	r2, [r3, #0]
1260:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 1770              		.loc 1 1260 0
 1771 0b8c 02B0     		add	sp, sp, #8
 1772 0b8e 7047     		bx	lr
 1773              		.cfi_endproc
 1774              	.LFE134:
 1776              		.align	2
 1777              		.global	RCC_RTCCLKConfig
 1778              		.thumb
 1779              		.thumb_func
 1781              	RCC_RTCCLKConfig:
 1782              	.LFB135:
1261:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1262:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1263:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
1264:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     As the RTC clock configuration bits are in the Backup domain and write
1265:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           access is denied to this domain after reset, you have to enable write
1266:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           access using PWR_BackupAccessCmd(ENABLE) function before to configure
1267:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           the RTC clock source (to be done once after reset).    
1268:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     Once the RTC clock is configured it can't be changed unless the RTC
1269:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           is reset using RCC_BackupResetCmd function, or by a Power On Reset (POR)
1270:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *             
1271:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
1272:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
1273:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
1274:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
1275:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_RTCCLKSource_HSE_Div32: HSE divided by 32 selected as RTC clock
1276:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *       
1277:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     If the LSE or LSI is used as RTC clock source, the RTC continues to
1278:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           work in STOP and STANDBY modes, and can be used as wakeup source.
1279:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           However, when the HSE clock is used as RTC clock source, the RTC
1280:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           cannot be used in STOP and STANDBY modes.             
1281:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     The maximum input clock frequency for RTC is 2MHz (when using HSE as
1282:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           RTC clock source).             
1283:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1284:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1285:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
1286:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 1783              		.loc 1 1286 0
 1784              		.cfi_startproc
 1785              		@ args = 0, pretend = 0, frame = 8
 1786              		@ frame_needed = 0, uses_anonymous_args = 0
 1787              		@ link register save eliminated.
 1788 0b90 82B0     		sub	sp, sp, #8
 1789              	.LCFI23:
 1790              		.cfi_def_cfa_offset 8
 1791 0b92 0190     		str	r0, [sp, #4]
1287:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1288:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
1289:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1290:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Select the RTC clock source */
1291:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->BDCR |= RCC_RTCCLKSource;
 1792              		.loc 1 1291 0
 1793 0b94 4FF48053 		mov	r3, #4096
 1794 0b98 C4F20203 		movt	r3, 16386
 1795 0b9c 4FF48052 		mov	r2, #4096
 1796 0ba0 C4F20202 		movt	r2, 16386
 1797 0ba4 116A     		ldr	r1, [r2, #32]
 1798 0ba6 019A     		ldr	r2, [sp, #4]
 1799 0ba8 0A43     		orrs	r2, r2, r1
 1800 0baa 1A62     		str	r2, [r3, #32]
1292:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 1801              		.loc 1 1292 0
 1802 0bac 02B0     		add	sp, sp, #8
 1803 0bae 7047     		bx	lr
 1804              		.cfi_endproc
 1805              	.LFE135:
 1807              		.align	2
 1808              		.global	RCC_I2SCLKConfig
 1809              		.thumb
 1810              		.thumb_func
 1812              	RCC_I2SCLKConfig:
 1813              	.LFB136:
1293:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1294:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1295:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the I2S clock source (I2SCLK).
1296:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   This function must be called before enabling the SPI2 and SPI3 clocks.
1297:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_I2SCLKSource: specifies the I2S clock source.
1298:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *          This parameter can be one of the following values:
1299:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *            @arg RCC_I2S2CLKSource_SYSCLK: SYSCLK clock used as I2S clock source
1300:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *            @arg RCC_I2S2CLKSource_Ext: External clock mapped on the I2S_CKIN pin
1301:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                                        used as I2S clock source
1302:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1303:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1304:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_I2SCLKConfig(uint32_t RCC_I2SCLKSource)
1305:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 1814              		.loc 1 1305 0
 1815              		.cfi_startproc
 1816              		@ args = 0, pretend = 0, frame = 8
 1817              		@ frame_needed = 0, uses_anonymous_args = 0
 1818              		@ link register save eliminated.
 1819 0bb0 82B0     		sub	sp, sp, #8
 1820              	.LCFI24:
 1821              		.cfi_def_cfa_offset 8
 1822 0bb2 0190     		str	r0, [sp, #4]
1306:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1307:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_I2SCLK_SOURCE(RCC_I2SCLKSource));
1308:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1309:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint32_t *) CFGR_I2SSRC_BB = RCC_I2SCLKSource;
 1823              		.loc 1 1309 0
 1824 0bb4 4FF0DC03 		mov	r3, #220
 1825 0bb8 C4F24223 		movt	r3, 16962
 1826 0bbc 019A     		ldr	r2, [sp, #4]
 1827 0bbe 1A60     		str	r2, [r3, #0]
1310:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 1828              		.loc 1 1310 0
 1829 0bc0 02B0     		add	sp, sp, #8
 1830 0bc2 7047     		bx	lr
 1831              		.cfi_endproc
 1832              	.LFE136:
 1834              		.align	2
 1835              		.global	RCC_RTCCLKCmd
 1836              		.thumb
 1837              		.thumb_func
 1839              	RCC_RTCCLKCmd:
 1840              	.LFB137:
1311:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1312:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1313:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Enables or disables the RTC clock.
1314:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   This function must be used only after the RTC clock source was selected
1315:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         using the RCC_RTCCLKConfig function.
1316:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the RTC clock.
1317:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1318:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1319:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1320:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
1321:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 1841              		.loc 1 1321 0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 8
 1844              		@ frame_needed = 0, uses_anonymous_args = 0
 1845              		@ link register save eliminated.
 1846 0bc4 82B0     		sub	sp, sp, #8
 1847              	.LCFI25:
 1848              		.cfi_def_cfa_offset 8
 1849 0bc6 0346     		mov	r3, r0
 1850 0bc8 8DF80730 		strb	r3, [sp, #7]
1322:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1323:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1324:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1325:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 1851              		.loc 1 1325 0
 1852 0bcc 40F23C43 		movw	r3, #1084
 1853 0bd0 C4F24223 		movt	r3, 16962
 1854 0bd4 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 1855 0bd8 1A60     		str	r2, [r3, #0]
1326:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 1856              		.loc 1 1326 0
 1857 0bda 02B0     		add	sp, sp, #8
 1858 0bdc 7047     		bx	lr
 1859              		.cfi_endproc
 1860              	.LFE137:
 1862 0bde 00BF     		.align	2
 1863              		.global	RCC_BackupResetCmd
 1864              		.thumb
 1865              		.thumb_func
 1867              	RCC_BackupResetCmd:
 1868              	.LFB138:
1327:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1328:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1329:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1330:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   This function resets the RTC peripheral (including the backup registers)
1331:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         and the RTC clock source selection in RCC_BDCR register.
1332:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1333:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1334:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1335:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1336:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1337:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 1869              		.loc 1 1337 0
 1870              		.cfi_startproc
 1871              		@ args = 0, pretend = 0, frame = 8
 1872              		@ frame_needed = 0, uses_anonymous_args = 0
 1873              		@ link register save eliminated.
 1874 0be0 82B0     		sub	sp, sp, #8
 1875              	.LCFI26:
 1876              		.cfi_def_cfa_offset 8
 1877 0be2 0346     		mov	r3, r0
 1878 0be4 8DF80730 		strb	r3, [sp, #7]
1338:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1339:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1340:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1341:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
 1879              		.loc 1 1341 0
 1880 0be8 4FF48863 		mov	r3, #1088
 1881 0bec C4F24223 		movt	r3, 16962
 1882 0bf0 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 1883 0bf4 1A60     		str	r2, [r3, #0]
1342:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 1884              		.loc 1 1342 0
 1885 0bf6 02B0     		add	sp, sp, #8
 1886 0bf8 7047     		bx	lr
 1887              		.cfi_endproc
 1888              	.LFE138:
 1890 0bfa 00BF     		.align	2
 1891              		.global	RCC_AHBPeriphClockCmd
 1892              		.thumb
 1893              		.thumb_func
 1895              	RCC_AHBPeriphClockCmd:
 1896              	.LFB139:
1343:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1344:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1345:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Enables or disables the AHB peripheral clock.
1346:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
1347:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         is disabled and the application software has to enable this clock before 
1348:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         using it.    
1349:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to gates its clock.
1350:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be any combination of the following values:
1351:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOA
1352:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOB
1353:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOC  
1354:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOD
1355:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOE  
1356:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOF
1357:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_TS
1358:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1359:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF (has effect only when the Flash memory is in power down mode)  
1360:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1361:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1362:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1363:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_ADC34
1364:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_ADC12      
1365:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1366:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1367:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1368:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1369:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1370:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 1897              		.loc 1 1370 0
 1898              		.cfi_startproc
 1899              		@ args = 0, pretend = 0, frame = 8
 1900              		@ frame_needed = 0, uses_anonymous_args = 0
 1901              		@ link register save eliminated.
 1902 0bfc 82B0     		sub	sp, sp, #8
 1903              	.LCFI27:
 1904              		.cfi_def_cfa_offset 8
 1905 0bfe 0190     		str	r0, [sp, #4]
 1906 0c00 0B46     		mov	r3, r1
 1907 0c02 8DF80330 		strb	r3, [sp, #3]
1371:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1372:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH(RCC_AHBPeriph));
1373:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1374:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1375:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (NewState != DISABLE)
 1908              		.loc 1 1375 0
 1909 0c06 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 1910 0c0a 002B     		cmp	r3, #0
 1911 0c0c 0CD0     		beq	.L89
1376:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1377:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->AHBENR |= RCC_AHBPeriph;
 1912              		.loc 1 1377 0
 1913 0c0e 4FF48053 		mov	r3, #4096
 1914 0c12 C4F20203 		movt	r3, 16386
 1915 0c16 4FF48052 		mov	r2, #4096
 1916 0c1a C4F20202 		movt	r2, 16386
 1917 0c1e 5169     		ldr	r1, [r2, #20]
 1918 0c20 019A     		ldr	r2, [sp, #4]
 1919 0c22 0A43     		orrs	r2, r2, r1
 1920 0c24 5A61     		str	r2, [r3, #20]
 1921 0c26 0DE0     		b	.L88
 1922              	.L89:
1378:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1379:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1380:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1381:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->AHBENR &= ~RCC_AHBPeriph;
 1923              		.loc 1 1381 0
 1924 0c28 4FF48053 		mov	r3, #4096
 1925 0c2c C4F20203 		movt	r3, 16386
 1926 0c30 4FF48052 		mov	r2, #4096
 1927 0c34 C4F20202 		movt	r2, 16386
 1928 0c38 5169     		ldr	r1, [r2, #20]
 1929 0c3a 019A     		ldr	r2, [sp, #4]
 1930 0c3c 6FEA0202 		mvn	r2, r2
 1931 0c40 0A40     		ands	r2, r2, r1
 1932 0c42 5A61     		str	r2, [r3, #20]
 1933              	.L88:
1382:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1383:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 1934              		.loc 1 1383 0
 1935 0c44 02B0     		add	sp, sp, #8
 1936 0c46 7047     		bx	lr
 1937              		.cfi_endproc
 1938              	.LFE139:
 1940              		.align	2
 1941              		.global	RCC_APB2PeriphClockCmd
 1942              		.thumb
 1943              		.thumb_func
 1945              	RCC_APB2PeriphClockCmd:
 1946              	.LFB140:
1384:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1385:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1386:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
1387:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
1388:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         is disabled and the application software has to enable this clock before 
1389:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         using it.
1390:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
1391:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be any combination of the following values:
1392:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_SYSCFG
1393:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_SPI1
1394:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_USART1
1395:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_TIM15
1396:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_TIM16
1397:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_TIM17
1398:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_TIM1       
1399:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_TIM8
1400:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1401:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1402:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1403:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1404:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1405:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 1947              		.loc 1 1405 0
 1948              		.cfi_startproc
 1949              		@ args = 0, pretend = 0, frame = 8
 1950              		@ frame_needed = 0, uses_anonymous_args = 0
 1951              		@ link register save eliminated.
 1952 0c48 82B0     		sub	sp, sp, #8
 1953              	.LCFI28:
 1954              		.cfi_def_cfa_offset 8
 1955 0c4a 0190     		str	r0, [sp, #4]
 1956 0c4c 0B46     		mov	r3, r1
 1957 0c4e 8DF80330 		strb	r3, [sp, #3]
1406:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1407:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1408:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1409:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1410:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (NewState != DISABLE)
 1958              		.loc 1 1410 0
 1959 0c52 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 1960 0c56 002B     		cmp	r3, #0
 1961 0c58 0CD0     		beq	.L92
1411:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1412:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
 1962              		.loc 1 1412 0
 1963 0c5a 4FF48053 		mov	r3, #4096
 1964 0c5e C4F20203 		movt	r3, 16386
 1965 0c62 4FF48052 		mov	r2, #4096
 1966 0c66 C4F20202 		movt	r2, 16386
 1967 0c6a 9169     		ldr	r1, [r2, #24]
 1968 0c6c 019A     		ldr	r2, [sp, #4]
 1969 0c6e 0A43     		orrs	r2, r2, r1
 1970 0c70 9A61     		str	r2, [r3, #24]
 1971 0c72 0DE0     		b	.L91
 1972              	.L92:
1413:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1414:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1415:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1416:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
 1973              		.loc 1 1416 0
 1974 0c74 4FF48053 		mov	r3, #4096
 1975 0c78 C4F20203 		movt	r3, 16386
 1976 0c7c 4FF48052 		mov	r2, #4096
 1977 0c80 C4F20202 		movt	r2, 16386
 1978 0c84 9169     		ldr	r1, [r2, #24]
 1979 0c86 019A     		ldr	r2, [sp, #4]
 1980 0c88 6FEA0202 		mvn	r2, r2
 1981 0c8c 0A40     		ands	r2, r2, r1
 1982 0c8e 9A61     		str	r2, [r3, #24]
 1983              	.L91:
1417:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1418:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 1984              		.loc 1 1418 0
 1985 0c90 02B0     		add	sp, sp, #8
 1986 0c92 7047     		bx	lr
 1987              		.cfi_endproc
 1988              	.LFE140:
 1990              		.align	2
 1991              		.global	RCC_APB1PeriphClockCmd
 1992              		.thumb
 1993              		.thumb_func
 1995              	RCC_APB1PeriphClockCmd:
 1996              	.LFB141:
1419:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1420:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1421:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
1422:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
1423:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         is disabled and the application software has to enable this clock before 
1424:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         using it.
1425:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
1426:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be any combination of the following values:
1427:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2
1428:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_TIM3
1429:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_TIM4
1430:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_TIM6
1431:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_TIM7
1432:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_WWDG
1433:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_SPI2
1434:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_SPI3  
1435:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_USART2
1436:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_USART3
1437:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_UART4 
1438:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_UART5     
1439:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_I2C1
1440:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_I2C2
1441:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_USB
1442:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_CAN1
1443:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_PWR
1444:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_DAC
1445:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1446:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1447:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1448:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1449:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1450:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 1997              		.loc 1 1450 0
 1998              		.cfi_startproc
 1999              		@ args = 0, pretend = 0, frame = 8
 2000              		@ frame_needed = 0, uses_anonymous_args = 0
 2001              		@ link register save eliminated.
 2002 0c94 82B0     		sub	sp, sp, #8
 2003              	.LCFI29:
 2004              		.cfi_def_cfa_offset 8
 2005 0c96 0190     		str	r0, [sp, #4]
 2006 0c98 0B46     		mov	r3, r1
 2007 0c9a 8DF80330 		strb	r3, [sp, #3]
1451:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1452:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1453:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1454:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1455:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (NewState != DISABLE)
 2008              		.loc 1 1455 0
 2009 0c9e 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 2010 0ca2 002B     		cmp	r3, #0
 2011 0ca4 0CD0     		beq	.L95
1456:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1457:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
 2012              		.loc 1 1457 0
 2013 0ca6 4FF48053 		mov	r3, #4096
 2014 0caa C4F20203 		movt	r3, 16386
 2015 0cae 4FF48052 		mov	r2, #4096
 2016 0cb2 C4F20202 		movt	r2, 16386
 2017 0cb6 D169     		ldr	r1, [r2, #28]
 2018 0cb8 019A     		ldr	r2, [sp, #4]
 2019 0cba 0A43     		orrs	r2, r2, r1
 2020 0cbc DA61     		str	r2, [r3, #28]
 2021 0cbe 0DE0     		b	.L94
 2022              	.L95:
1458:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1459:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1460:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1461:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
 2023              		.loc 1 1461 0
 2024 0cc0 4FF48053 		mov	r3, #4096
 2025 0cc4 C4F20203 		movt	r3, 16386
 2026 0cc8 4FF48052 		mov	r2, #4096
 2027 0ccc C4F20202 		movt	r2, 16386
 2028 0cd0 D169     		ldr	r1, [r2, #28]
 2029 0cd2 019A     		ldr	r2, [sp, #4]
 2030 0cd4 6FEA0202 		mvn	r2, r2
 2031 0cd8 0A40     		ands	r2, r2, r1
 2032 0cda DA61     		str	r2, [r3, #28]
 2033              	.L94:
1462:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1463:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2034              		.loc 1 1463 0
 2035 0cdc 02B0     		add	sp, sp, #8
 2036 0cde 7047     		bx	lr
 2037              		.cfi_endproc
 2038              	.LFE141:
 2040              		.align	2
 2041              		.global	RCC_AHBPeriphResetCmd
 2042              		.thumb
 2043              		.thumb_func
 2045              	RCC_AHBPeriphResetCmd:
 2046              	.LFB142:
1464:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1465:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1466:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Forces or releases AHB peripheral reset.
1467:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to reset.
1468:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be any combination of the following values:
1469:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOA
1470:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOB
1471:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOC  
1472:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOD
1473:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOE  
1474:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOF
1475:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_TS
1476:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_ADC34
1477:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_ADC12    
1478:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1479:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1480:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1481:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1482:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_AHBPeriphResetCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1483:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2047              		.loc 1 1483 0
 2048              		.cfi_startproc
 2049              		@ args = 0, pretend = 0, frame = 8
 2050              		@ frame_needed = 0, uses_anonymous_args = 0
 2051              		@ link register save eliminated.
 2052 0ce0 82B0     		sub	sp, sp, #8
 2053              	.LCFI30:
 2054              		.cfi_def_cfa_offset 8
 2055 0ce2 0190     		str	r0, [sp, #4]
 2056 0ce4 0B46     		mov	r3, r1
 2057 0ce6 8DF80330 		strb	r3, [sp, #3]
1484:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1485:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_AHB_RST_PERIPH(RCC_AHBPeriph));
1486:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1487:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1488:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (NewState != DISABLE)
 2058              		.loc 1 1488 0
 2059 0cea 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 2060 0cee 002B     		cmp	r3, #0
 2061 0cf0 0CD0     		beq	.L98
1489:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1490:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->AHBRSTR |= RCC_AHBPeriph;
 2062              		.loc 1 1490 0
 2063 0cf2 4FF48053 		mov	r3, #4096
 2064 0cf6 C4F20203 		movt	r3, 16386
 2065 0cfa 4FF48052 		mov	r2, #4096
 2066 0cfe C4F20202 		movt	r2, 16386
 2067 0d02 916A     		ldr	r1, [r2, #40]
 2068 0d04 019A     		ldr	r2, [sp, #4]
 2069 0d06 0A43     		orrs	r2, r2, r1
 2070 0d08 9A62     		str	r2, [r3, #40]
 2071 0d0a 0DE0     		b	.L97
 2072              	.L98:
1491:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1492:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1493:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1494:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->AHBRSTR &= ~RCC_AHBPeriph;
 2073              		.loc 1 1494 0
 2074 0d0c 4FF48053 		mov	r3, #4096
 2075 0d10 C4F20203 		movt	r3, 16386
 2076 0d14 4FF48052 		mov	r2, #4096
 2077 0d18 C4F20202 		movt	r2, 16386
 2078 0d1c 916A     		ldr	r1, [r2, #40]
 2079 0d1e 019A     		ldr	r2, [sp, #4]
 2080 0d20 6FEA0202 		mvn	r2, r2
 2081 0d24 0A40     		ands	r2, r2, r1
 2082 0d26 9A62     		str	r2, [r3, #40]
 2083              	.L97:
1495:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1496:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2084              		.loc 1 1496 0
 2085 0d28 02B0     		add	sp, sp, #8
 2086 0d2a 7047     		bx	lr
 2087              		.cfi_endproc
 2088              	.LFE142:
 2090              		.align	2
 2091              		.global	RCC_APB2PeriphResetCmd
 2092              		.thumb
 2093              		.thumb_func
 2095              	RCC_APB2PeriphResetCmd:
 2096              	.LFB143:
1497:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1498:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1499:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
1500:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
1501:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be any combination of the following values:
1502:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_SYSCFG
1503:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_SPI1
1504:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_USART1
1505:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_TIM15
1506:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_TIM16
1507:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_TIM17
1508:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_TIM1       
1509:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_TIM8  
1510:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1511:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1512:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1513:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1514:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1515:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2097              		.loc 1 1515 0
 2098              		.cfi_startproc
 2099              		@ args = 0, pretend = 0, frame = 8
 2100              		@ frame_needed = 0, uses_anonymous_args = 0
 2101              		@ link register save eliminated.
 2102 0d2c 82B0     		sub	sp, sp, #8
 2103              	.LCFI31:
 2104              		.cfi_def_cfa_offset 8
 2105 0d2e 0190     		str	r0, [sp, #4]
 2106 0d30 0B46     		mov	r3, r1
 2107 0d32 8DF80330 		strb	r3, [sp, #3]
1516:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1517:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1518:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1519:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1520:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (NewState != DISABLE)
 2108              		.loc 1 1520 0
 2109 0d36 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 2110 0d3a 002B     		cmp	r3, #0
 2111 0d3c 0CD0     		beq	.L101
1521:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1522:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
 2112              		.loc 1 1522 0
 2113 0d3e 4FF48053 		mov	r3, #4096
 2114 0d42 C4F20203 		movt	r3, 16386
 2115 0d46 4FF48052 		mov	r2, #4096
 2116 0d4a C4F20202 		movt	r2, 16386
 2117 0d4e D168     		ldr	r1, [r2, #12]
 2118 0d50 019A     		ldr	r2, [sp, #4]
 2119 0d52 0A43     		orrs	r2, r2, r1
 2120 0d54 DA60     		str	r2, [r3, #12]
 2121 0d56 0DE0     		b	.L100
 2122              	.L101:
1523:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1524:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1525:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1526:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
 2123              		.loc 1 1526 0
 2124 0d58 4FF48053 		mov	r3, #4096
 2125 0d5c C4F20203 		movt	r3, 16386
 2126 0d60 4FF48052 		mov	r2, #4096
 2127 0d64 C4F20202 		movt	r2, 16386
 2128 0d68 D168     		ldr	r1, [r2, #12]
 2129 0d6a 019A     		ldr	r2, [sp, #4]
 2130 0d6c 6FEA0202 		mvn	r2, r2
 2131 0d70 0A40     		ands	r2, r2, r1
 2132 0d72 DA60     		str	r2, [r3, #12]
 2133              	.L100:
1527:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1528:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2134              		.loc 1 1528 0
 2135 0d74 02B0     		add	sp, sp, #8
 2136 0d76 7047     		bx	lr
 2137              		.cfi_endproc
 2138              	.LFE143:
 2140              		.align	2
 2141              		.global	RCC_APB1PeriphResetCmd
 2142              		.thumb
 2143              		.thumb_func
 2145              	RCC_APB1PeriphResetCmd:
 2146              	.LFB144:
1529:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1530:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1531:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
1532:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
1533:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be any combination of the following values:
1534:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2
1535:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_TIM3
1536:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_TIM4
1537:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_TIM6
1538:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_TIM7
1539:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_WWDG
1540:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_SPI2
1541:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_SPI3  
1542:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_USART2
1543:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_USART3
1544:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_UART4
1545:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_UART5      
1546:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_I2C1
1547:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_I2C2
1548:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_USB
1549:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_CAN1
1550:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_PWR
1551:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_DAC
1552:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1553:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1554:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1555:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1556:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1557:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2147              		.loc 1 1557 0
 2148              		.cfi_startproc
 2149              		@ args = 0, pretend = 0, frame = 8
 2150              		@ frame_needed = 0, uses_anonymous_args = 0
 2151              		@ link register save eliminated.
 2152 0d78 82B0     		sub	sp, sp, #8
 2153              	.LCFI32:
 2154              		.cfi_def_cfa_offset 8
 2155 0d7a 0190     		str	r0, [sp, #4]
 2156 0d7c 0B46     		mov	r3, r1
 2157 0d7e 8DF80330 		strb	r3, [sp, #3]
1558:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1559:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1560:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1561:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1562:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (NewState != DISABLE)
 2158              		.loc 1 1562 0
 2159 0d82 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 2160 0d86 002B     		cmp	r3, #0
 2161 0d88 0CD0     		beq	.L104
1563:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1564:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
 2162              		.loc 1 1564 0
 2163 0d8a 4FF48053 		mov	r3, #4096
 2164 0d8e C4F20203 		movt	r3, 16386
 2165 0d92 4FF48052 		mov	r2, #4096
 2166 0d96 C4F20202 		movt	r2, 16386
 2167 0d9a 1169     		ldr	r1, [r2, #16]
 2168 0d9c 019A     		ldr	r2, [sp, #4]
 2169 0d9e 0A43     		orrs	r2, r2, r1
 2170 0da0 1A61     		str	r2, [r3, #16]
 2171 0da2 0DE0     		b	.L103
 2172              	.L104:
1565:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1566:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1567:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1568:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
 2173              		.loc 1 1568 0
 2174 0da4 4FF48053 		mov	r3, #4096
 2175 0da8 C4F20203 		movt	r3, 16386
 2176 0dac 4FF48052 		mov	r2, #4096
 2177 0db0 C4F20202 		movt	r2, 16386
 2178 0db4 1169     		ldr	r1, [r2, #16]
 2179 0db6 019A     		ldr	r2, [sp, #4]
 2180 0db8 6FEA0202 		mvn	r2, r2
 2181 0dbc 0A40     		ands	r2, r2, r1
 2182 0dbe 1A61     		str	r2, [r3, #16]
 2183              	.L103:
1569:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1570:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2184              		.loc 1 1570 0
 2185 0dc0 02B0     		add	sp, sp, #8
 2186 0dc2 7047     		bx	lr
 2187              		.cfi_endproc
 2188              	.LFE144:
 2190              		.align	2
 2191              		.global	RCC_ITConfig
 2192              		.thumb
 2193              		.thumb_func
 2195              	RCC_ITConfig:
 2196              	.LFB145:
1571:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1572:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1573:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @}
1574:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1575:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1576:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /** @defgroup RCC_Group4 Interrupts and flags management functions
1577:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  *  @brief   Interrupts and flags management functions 
1578:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  *
1579:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** @verbatim   
1580:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ===============================================================================
1581:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             ##### Interrupts and flags management functions #####
1582:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ===============================================================================  
1583:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1584:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** @endverbatim
1585:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @{
1586:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1587:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1588:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1589:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
1590:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   The CSS interrupt doesn't have an enable bit; once the CSS is enabled
1591:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         and if the HSE clock fails, the CSS interrupt occurs and an NMI is
1592:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         automatically generated. The NMI will be executed indefinitely, and 
1593:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         since NMI has higher priority than any other IRQ (and main program)
1594:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         the application will be stacked in the NMI ISR unless the CSS interrupt
1595:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         pending bit is cleared.
1596:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
1597:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be any combination of the following values:
1598:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1599:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1600:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1601:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1602:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1603:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
1604:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1605:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1606:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1607:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
1608:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2197              		.loc 1 1608 0
 2198              		.cfi_startproc
 2199              		@ args = 0, pretend = 0, frame = 8
 2200              		@ frame_needed = 0, uses_anonymous_args = 0
 2201              		@ link register save eliminated.
 2202 0dc4 82B0     		sub	sp, sp, #8
 2203              	.LCFI33:
 2204              		.cfi_def_cfa_offset 8
 2205 0dc6 0246     		mov	r2, r0
 2206 0dc8 0B46     		mov	r3, r1
 2207 0dca 8DF80720 		strb	r2, [sp, #7]
 2208 0dce 8DF80630 		strb	r3, [sp, #6]
1609:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1610:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
1611:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1612:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1613:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (NewState != DISABLE)
 2209              		.loc 1 1613 0
 2210 0dd2 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 2211 0dd6 002B     		cmp	r3, #0
 2212 0dd8 0FD0     		beq	.L107
1614:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1615:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* Perform Byte access to RCC_CIR[13:8] bits to enable the selected interrupts */
1616:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 2213              		.loc 1 1616 0
 2214 0dda 41F20903 		movw	r3, #4105
 2215 0dde C4F20203 		movt	r3, 16386
 2216 0de2 41F20902 		movw	r2, #4105
 2217 0de6 C4F20202 		movt	r2, 16386
 2218 0dea 1278     		ldrb	r2, [r2, #0]
 2219 0dec D1B2     		uxtb	r1, r2
 2220 0dee 9DF80720 		ldrb	r2, [sp, #7]
 2221 0df2 0A43     		orrs	r2, r2, r1
 2222 0df4 D2B2     		uxtb	r2, r2
 2223 0df6 1A70     		strb	r2, [r3, #0]
 2224 0df8 11E0     		b	.L106
 2225              	.L107:
1617:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1618:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1619:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1620:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* Perform Byte access to RCC_CIR[13:8] bits to disable the selected interrupts */
1621:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
 2226              		.loc 1 1621 0
 2227 0dfa 41F20903 		movw	r3, #4105
 2228 0dfe C4F20203 		movt	r3, 16386
 2229 0e02 41F20902 		movw	r2, #4105
 2230 0e06 C4F20202 		movt	r2, 16386
 2231 0e0a 1278     		ldrb	r2, [r2, #0]
 2232 0e0c D1B2     		uxtb	r1, r2
 2233 0e0e 9DF80720 		ldrb	r2, [sp, #7]
 2234 0e12 6FEA0202 		mvn	r2, r2
 2235 0e16 D2B2     		uxtb	r2, r2
 2236 0e18 0A40     		ands	r2, r2, r1
 2237 0e1a D2B2     		uxtb	r2, r2
 2238 0e1c 1A70     		strb	r2, [r3, #0]
 2239              	.L106:
1622:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1623:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2240              		.loc 1 1623 0
 2241 0e1e 02B0     		add	sp, sp, #8
 2242 0e20 7047     		bx	lr
 2243              		.cfi_endproc
 2244              	.LFE145:
 2246 0e22 00BF     		.align	2
 2247              		.global	RCC_GetFlagStatus
 2248              		.thumb
 2249              		.thumb_func
 2251              	RCC_GetFlagStatus:
 2252              	.LFB146:
1624:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1625:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1626:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
1627:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
1628:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
1629:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready  
1630:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1631:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1632:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_MCOF: MCO Flag  
1633:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1634:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1635:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_OBLRST: Option Byte Loader (OBL) reset 
1636:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1637:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1638:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1639:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1640:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1641:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1642:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
1643:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1644:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
1645:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2253              		.loc 1 1645 0
 2254              		.cfi_startproc
 2255              		@ args = 0, pretend = 0, frame = 24
 2256              		@ frame_needed = 0, uses_anonymous_args = 0
 2257              		@ link register save eliminated.
 2258 0e24 86B0     		sub	sp, sp, #24
 2259              	.LCFI34:
 2260              		.cfi_def_cfa_offset 24
 2261 0e26 0346     		mov	r3, r0
 2262 0e28 8DF80730 		strb	r3, [sp, #7]
1646:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmp = 0;
 2263              		.loc 1 1646 0
 2264 0e2c 4FF00003 		mov	r3, #0
 2265 0e30 0393     		str	r3, [sp, #12]
1647:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t statusreg = 0;
 2266              		.loc 1 1647 0
 2267 0e32 4FF00003 		mov	r3, #0
 2268 0e36 0593     		str	r3, [sp, #20]
1648:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   FlagStatus bitstatus = RESET;
 2269              		.loc 1 1648 0
 2270 0e38 4FF00003 		mov	r3, #0
 2271 0e3c 8DF81330 		strb	r3, [sp, #19]
1649:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1650:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1651:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
1652:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1653:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Get the RCC register index */
1654:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = RCC_FLAG >> 5;
 2272              		.loc 1 1654 0
 2273 0e40 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 2274 0e44 4FEA5313 		lsr	r3, r3, #5
 2275 0e48 DBB2     		uxtb	r3, r3
 2276 0e4a 0393     		str	r3, [sp, #12]
1655:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1656:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****    if (tmp == 0)               /* The flag to check is in CR register */
 2277              		.loc 1 1656 0
 2278 0e4c 039B     		ldr	r3, [sp, #12]
 2279 0e4e 002B     		cmp	r3, #0
 2280 0e50 06D1     		bne	.L110
1657:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1658:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     statusreg = RCC->CR;
 2281              		.loc 1 1658 0
 2282 0e52 4FF48053 		mov	r3, #4096
 2283 0e56 C4F20203 		movt	r3, 16386
 2284 0e5a 1B68     		ldr	r3, [r3, #0]
 2285 0e5c 0593     		str	r3, [sp, #20]
 2286 0e5e 19E0     		b	.L111
 2287              	.L110:
1659:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1660:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if (tmp == 1)          /* The flag to check is in BDCR register */
 2288              		.loc 1 1660 0
 2289 0e60 039B     		ldr	r3, [sp, #12]
 2290 0e62 012B     		cmp	r3, #1
 2291 0e64 06D1     		bne	.L112
1661:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1662:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     statusreg = RCC->BDCR;
 2292              		.loc 1 1662 0
 2293 0e66 4FF48053 		mov	r3, #4096
 2294 0e6a C4F20203 		movt	r3, 16386
 2295 0e6e 1B6A     		ldr	r3, [r3, #32]
 2296 0e70 0593     		str	r3, [sp, #20]
 2297 0e72 0FE0     		b	.L111
 2298              	.L112:
1663:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1664:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if (tmp == 4)          /* The flag to check is in CFGR register */
 2299              		.loc 1 1664 0
 2300 0e74 039B     		ldr	r3, [sp, #12]
 2301 0e76 042B     		cmp	r3, #4
 2302 0e78 06D1     		bne	.L113
1665:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1666:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     statusreg = RCC->CFGR;
 2303              		.loc 1 1666 0
 2304 0e7a 4FF48053 		mov	r3, #4096
 2305 0e7e C4F20203 		movt	r3, 16386
 2306 0e82 5B68     		ldr	r3, [r3, #4]
 2307 0e84 0593     		str	r3, [sp, #20]
 2308 0e86 05E0     		b	.L111
 2309              	.L113:
1667:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1668:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else                       /* The flag to check is in CSR register */
1669:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1670:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     statusreg = RCC->CSR;
 2310              		.loc 1 1670 0
 2311 0e88 4FF48053 		mov	r3, #4096
 2312 0e8c C4F20203 		movt	r3, 16386
 2313 0e90 5B6A     		ldr	r3, [r3, #36]
 2314 0e92 0593     		str	r3, [sp, #20]
 2315              	.L111:
1671:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1672:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1673:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Get the flag position */
1674:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = RCC_FLAG & FLAG_MASK;
 2316              		.loc 1 1674 0
 2317 0e94 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 2318 0e98 03F01F03 		and	r3, r3, #31
 2319 0e9c 0393     		str	r3, [sp, #12]
1675:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1676:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
 2320              		.loc 1 1676 0
 2321 0e9e 039B     		ldr	r3, [sp, #12]
 2322 0ea0 059A     		ldr	r2, [sp, #20]
 2323 0ea2 22FA03F3 		lsr	r3, r2, r3
 2324 0ea6 03F00103 		and	r3, r3, #1
 2325 0eaa DBB2     		uxtb	r3, r3
 2326 0eac 002B     		cmp	r3, #0
 2327 0eae 04D0     		beq	.L114
1677:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1678:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     bitstatus = SET;
 2328              		.loc 1 1678 0
 2329 0eb0 4FF00103 		mov	r3, #1
 2330 0eb4 8DF81330 		strb	r3, [sp, #19]
 2331 0eb8 03E0     		b	.L115
 2332              	.L114:
1679:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1680:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1681:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1682:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     bitstatus = RESET;
 2333              		.loc 1 1682 0
 2334 0eba 4FF00003 		mov	r3, #0
 2335 0ebe 8DF81330 		strb	r3, [sp, #19]
 2336              	.L115:
1683:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1684:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Return the flag status */
1685:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   return bitstatus;
 2337              		.loc 1 1685 0
 2338 0ec2 9DF81330 		ldrb	r3, [sp, #19]	@ zero_extendqisi2
1686:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2339              		.loc 1 1686 0
 2340 0ec6 1846     		mov	r0, r3
 2341 0ec8 06B0     		add	sp, sp, #24
 2342 0eca 7047     		bx	lr
 2343              		.cfi_endproc
 2344              	.LFE146:
 2346              		.align	2
 2347              		.global	RCC_ClearFlag
 2348              		.thumb
 2349              		.thumb_func
 2351              	RCC_ClearFlag:
 2352              	.LFB147:
1687:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1688:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1689:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Clears the RCC reset flags.
1690:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         The reset flags are: RCC_FLAG_OBLRST, RCC_FLAG_PINRST, RCC_FLAG_PORRST, 
1691:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         RCC_FLAG_SFTRST, RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST.
1692:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  None
1693:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1694:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1695:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_ClearFlag(void)
1696:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2353              		.loc 1 1696 0
 2354              		.cfi_startproc
 2355              		@ args = 0, pretend = 0, frame = 0
 2356              		@ frame_needed = 0, uses_anonymous_args = 0
 2357              		@ link register save eliminated.
1697:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set RMVF bit to clear the reset flags */
1698:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CSR |= RCC_CSR_RMVF;
 2358              		.loc 1 1698 0
 2359 0ecc 4FF48053 		mov	r3, #4096
 2360 0ed0 C4F20203 		movt	r3, 16386
 2361 0ed4 4FF48052 		mov	r2, #4096
 2362 0ed8 C4F20202 		movt	r2, 16386
 2363 0edc 526A     		ldr	r2, [r2, #36]
 2364 0ede 42F08072 		orr	r2, r2, #16777216
 2365 0ee2 5A62     		str	r2, [r3, #36]
1699:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2366              		.loc 1 1699 0
 2367 0ee4 7047     		bx	lr
 2368              		.cfi_endproc
 2369              	.LFE147:
 2371 0ee6 00BF     		.align	2
 2372              		.global	RCC_GetITStatus
 2373              		.thumb
 2374              		.thumb_func
 2376              	RCC_GetITStatus:
 2377              	.LFB148:
1700:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1701:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1702:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
1703:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
1704:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
1705:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1706:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1707:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1708:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1709:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1710:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1711:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
1712:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1713:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
1714:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2378              		.loc 1 1714 0
 2379              		.cfi_startproc
 2380              		@ args = 0, pretend = 0, frame = 16
 2381              		@ frame_needed = 0, uses_anonymous_args = 0
 2382              		@ link register save eliminated.
 2383 0ee8 84B0     		sub	sp, sp, #16
 2384              	.LCFI35:
 2385              		.cfi_def_cfa_offset 16
 2386 0eea 0346     		mov	r3, r0
 2387 0eec 8DF80730 		strb	r3, [sp, #7]
1715:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   ITStatus bitstatus = RESET;
 2388              		.loc 1 1715 0
 2389 0ef0 4FF00003 		mov	r3, #0
 2390 0ef4 8DF80F30 		strb	r3, [sp, #15]
1716:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1717:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1718:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
1719:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1720:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the status of the specified RCC interrupt */
1721:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
 2391              		.loc 1 1721 0
 2392 0ef8 4FF48053 		mov	r3, #4096
 2393 0efc C4F20203 		movt	r3, 16386
 2394 0f00 9A68     		ldr	r2, [r3, #8]
 2395 0f02 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 2396 0f06 1340     		ands	r3, r3, r2
 2397 0f08 002B     		cmp	r3, #0
 2398 0f0a 04D0     		beq	.L118
1722:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1723:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     bitstatus = SET;
 2399              		.loc 1 1723 0
 2400 0f0c 4FF00103 		mov	r3, #1
 2401 0f10 8DF80F30 		strb	r3, [sp, #15]
 2402 0f14 03E0     		b	.L119
 2403              	.L118:
1724:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1725:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1726:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1727:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     bitstatus = RESET;
 2404              		.loc 1 1727 0
 2405 0f16 4FF00003 		mov	r3, #0
 2406 0f1a 8DF80F30 		strb	r3, [sp, #15]
 2407              	.L119:
1728:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1729:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Return the RCC_IT status */
1730:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   return  bitstatus;
 2408              		.loc 1 1730 0
 2409 0f1e 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
1731:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2410              		.loc 1 1731 0
 2411 0f22 1846     		mov	r0, r3
 2412 0f24 04B0     		add	sp, sp, #16
 2413 0f26 7047     		bx	lr
 2414              		.cfi_endproc
 2415              	.LFE148:
 2417              		.align	2
 2418              		.global	RCC_ClearITPendingBit
 2419              		.thumb
 2420              		.thumb_func
 2422              	RCC_ClearITPendingBit:
 2423              	.LFB149:
1732:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1733:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1734:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
1735:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
1736:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be any combination of the following values:
1737:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1738:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1739:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1740:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1741:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1742:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1743:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1744:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1745:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
1746:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2424              		.loc 1 1746 0
 2425              		.cfi_startproc
 2426              		@ args = 0, pretend = 0, frame = 8
 2427              		@ frame_needed = 0, uses_anonymous_args = 0
 2428              		@ link register save eliminated.
 2429 0f28 82B0     		sub	sp, sp, #8
 2430              	.LCFI36:
 2431              		.cfi_def_cfa_offset 8
 2432 0f2a 0346     		mov	r3, r0
 2433 0f2c 8DF80730 		strb	r3, [sp, #7]
1747:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1748:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
1749:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1750:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
1751:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****      pending bits */
1752:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 2434              		.loc 1 1752 0
 2435 0f30 41F20A03 		movw	r3, #4106
 2436 0f34 C4F20203 		movt	r3, 16386
 2437 0f38 9DF80720 		ldrb	r2, [sp, #7]
 2438 0f3c 1A70     		strb	r2, [r3, #0]
1753:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2439              		.loc 1 1753 0
 2440 0f3e 02B0     		add	sp, sp, #8
 2441 0f40 7047     		bx	lr
 2442              		.cfi_endproc
 2443              	.LFE149:
 2445              	.Letext0:
 2446              		.file 2 "c:\\program files\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/gcc/ar
 2447              		.file 3 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\Device\\
 2448              		.file 4 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\STM32F30
 2449              		.file 5 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\CMSIS\\I
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f30x_rcc.c
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:20     .data:00000000 $d
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:23     .data:00000000 APBAHBPrescTable
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:43     .data:00000010 ADCPrescTable
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:58     .text:00000000 $t
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:63     .text:00000000 RCC_DeInit
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:148    .text:000000cc RCC_HSEConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:181    .text:000000f4 RCC_WaitForHSEStartUp
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:2251   .text:00000e24 RCC_GetFlagStatus
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:250    .text:00000160 RCC_AdjustHSICalibrationValue
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:296    .text:000001a0 RCC_HSICmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:324    .text:000001bc RCC_LSEConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:371    .text:0000020c RCC_LSEDriveConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:410    .text:00000244 RCC_LSICmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:438    .text:00000260 RCC_PLLConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:480    .text:000002a0 RCC_PLLCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:508    .text:000002bc RCC_PREDIV1Config
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:552    .text:000002f4 RCC_ClockSecuritySystemCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:580    .text:00000310 RCC_MCOConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:608    .text:0000032c RCC_SYSCLKConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:652    .text:00000364 RCC_GetSYSCLKSource
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:677    .text:0000037c RCC_HCLKConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:721    .text:000003b4 RCC_PCLK1Config
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:765    .text:000003ec RCC_PCLK2Config
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:810    .text:00000428 RCC_GetClocksFreq
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:1460   .text:0000096c RCC_ADCCLKConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:1521   .text:000009d4 RCC_I2CCLKConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:1582   .text:00000a3c RCC_TIMCLKConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:1643   .text:00000aa4 RCC_USARTCLKConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:1670   .text:00000ac8 $d
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:1677   .text:00000adc $t
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:1754   .text:00000b7c RCC_USBCLKConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:1781   .text:00000b90 RCC_RTCCLKConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:1812   .text:00000bb0 RCC_I2SCLKConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:1839   .text:00000bc4 RCC_RTCCLKCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:1867   .text:00000be0 RCC_BackupResetCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:1895   .text:00000bfc RCC_AHBPeriphClockCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:1945   .text:00000c48 RCC_APB2PeriphClockCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:1995   .text:00000c94 RCC_APB1PeriphClockCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:2045   .text:00000ce0 RCC_AHBPeriphResetCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:2095   .text:00000d2c RCC_APB2PeriphResetCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:2145   .text:00000d78 RCC_APB1PeriphResetCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:2195   .text:00000dc4 RCC_ITConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:2351   .text:00000ecc RCC_ClearFlag
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:2376   .text:00000ee8 RCC_GetITStatus
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc0D7kp9.s:2422   .text:00000f28 RCC_ClearITPendingBit
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS

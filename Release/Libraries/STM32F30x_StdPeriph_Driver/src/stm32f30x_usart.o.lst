   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f30x_usart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.align	2
  20              		.global	USART_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	USART_DeInit:
  25              	.LFB111:
  26              		.file 1 "../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c"
   1:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
   2:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   ******************************************************************************
   3:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @file    stm32f30x_usart.c
   4:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @version V1.0.1
   6:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @date    23-October-2012
   7:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief   This file provides firmware functions to manage the following
   8:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *          functionalities of the Universal synchronous asynchronous receiver
   9:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *          transmitter (USART):
  10:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + Initialization and Configuration
  11:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + STOP Mode
  12:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + AutoBaudRate
  13:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + Data transfers
  14:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + Multi-Processor Communication
  15:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + LIN mode
  16:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + Half-duplex mode
  17:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + Smartcard mode
  18:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + IrDA mode
  19:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + RS485 mode  
  20:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + DMA transfers management
  21:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + Interrupts and flags management
  22:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           
  23:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *  @verbatim  
  24:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
  25:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                       ##### How to use this driver #####
  26:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
  27:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****       [..]
  28:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****           (#) Enable peripheral clock using RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE)
  29:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              function for USART1 or using RCC_APB1PeriphClockCmd(RCC_APB1Periph_USARTx, ENABLE)
  30:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              function for USART2, USART3, UART4 and UART5.
  31:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****           (#)  According to the USART mode, enable the GPIO clocks using
  32:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               RCC_AHBPeriphClockCmd() function. (The I/O can be TX, RX, CTS,
  33:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               or and SCLK).
  34:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****           (#) Peripheral's alternate function:
  35:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               (++) Connect the pin to the desired peripherals' Alternate
  36:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                    Function (AF) using GPIO_PinAFConfig() function.
  37:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               (++) Configure the desired pin in alternate function by:
  38:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                    GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF.
  39:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               (++) Select the type, pull-up/pull-down and output speed via
  40:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                    GPIO_PuPd, GPIO_OType and GPIO_Speed members.
  41:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               (++) Call GPIO_Init() function.
  42:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****           (#) Program the Baud Rate, Word Length , Stop Bit, Parity, Hardware
  43:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              flow control and Mode(Receiver/Transmitter) using the SPI_Init()
  44:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              function.
  45:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****           (#) For synchronous mode, enable the clock and program the polarity,
  46:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              phase and last bit using the USART_ClockInit() function.
  47:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****           (#) Enable the NVIC and the corresponding interrupt using the function
  48:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              USART_ITConfig() if you need to use interrupt mode.
  49:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****           (#) When using the DMA mode:
  50:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               (++) Configure the DMA using DMA_Init() function.
  51:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               (++) Active the needed channel Request using USART_DMACmd() function.
  52:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****           (#) Enable the USART using the USART_Cmd() function.
  53:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****           (#) Enable the DMA using the DMA_Cmd() function, when using DMA mode.
  54:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****       [..]
  55:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               Refer to Multi-Processor, LIN, half-duplex, Smartcard, IrDA sub-sections
  56:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               for more details.
  57:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
  58:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    @endverbatim
  59:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
  60:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   ******************************************************************************
  61:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @attention
  62:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *
  63:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  64:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *
  65:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  66:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * You may not use this file except in compliance with the License.
  67:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * You may obtain a copy of the License at:
  68:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *
  69:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  70:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *
  71:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * Unless required by applicable law or agreed to in writing, software 
  72:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  73:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  74:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * See the License for the specific language governing permissions and
  75:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * limitations under the License.
  76:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *
  77:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   ******************************************************************************
  78:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
  79:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
  80:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /* Includes ------------------------------------------------------------------*/
  81:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** #include "stm32f30x_usart.h"
  82:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** #include "stm32f30x_rcc.h"
  83:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
  84:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @addtogroup STM32F30x_StdPeriph_Driver
  85:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
  86:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
  87:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
  88:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART 
  89:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief USART driver modules
  90:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
  91:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
  92:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
  93:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /* Private typedef -----------------------------------------------------------*/
  94:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /* Private define ------------------------------------------------------------*/
  95:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
  96:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /*!< USART CR1 register clear Mask ((~(uint32_t)0xFFFFE6F3)) */
  97:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** #define CR1_CLEAR_MASK            ((uint32_t)(USART_CR1_M | USART_CR1_PCE | \
  98:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                                               USART_CR1_PS | USART_CR1_TE | \
  99:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                                               USART_CR1_RE))
 100:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 101:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /*!< USART CR2 register clock bits clear Mask ((~(uint32_t)0xFFFFF0FF)) */
 102:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** #define CR2_CLOCK_CLEAR_MASK      ((uint32_t)(USART_CR2_CLKEN | USART_CR2_CPOL | \
 103:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                                               USART_CR2_CPHA | USART_CR2_LBCL))
 104:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 105:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /*!< USART CR3 register clear Mask ((~(uint32_t)0xFFFFFCFF)) */
 106:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** #define CR3_CLEAR_MASK            ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE))
 107:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 108:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /*!< USART Interrupts mask */
 109:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** #define IT_MASK                   ((uint32_t)0x000000FF)
 110:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 111:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /* Private macro -------------------------------------------------------------*/
 112:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /* Private variables ---------------------------------------------------------*/
 113:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /* Private function prototypes -----------------------------------------------*/
 114:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /* Private functions ---------------------------------------------------------*/
 115:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 116:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Private_Functions
 117:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
 118:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 119:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 120:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group1 Initialization and Configuration functions
 121:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   Initialization and Configuration functions 
 122:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
 123:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim 
 124:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
 125:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****            ##### Initialization and Configuration functions #####
 126:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================  
 127:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   [..]
 128:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****       This subsection provides a set of functions allowing to initialize the USART 
 129:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****       in asynchronous and in synchronous modes.
 130:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        (+) For the asynchronous mode only these parameters can be configured: 
 131:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             (++) Baud Rate.
 132:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             (++) Word Length. 
 133:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             (++) Stop Bit.
 134:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             (++) Parity: If the parity is enabled, then the MSB bit of the data written
 135:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                  in the data register is transmitted but is changed by the parity bit.
 136:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                  Depending on the frame length defined by the M bit (8-bits or 9-bits),
 137:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                  the possible USART frame formats are as listed in the following table:
 138:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..]
 139:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    +-------------------------------------------------------------+     
 140:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    |   M bit |  PCE bit  |            USART frame                |
 141:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    |---------------------|---------------------------------------|             
 142:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    |    0    |    0      |    | SB | 8 bit data | STB |          |
 143:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    |---------|-----------|---------------------------------------|  
 144:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 145:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    |---------|-----------|---------------------------------------|  
 146:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    |    1    |    0      |    | SB | 9 bit data | STB |          |
 147:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    |---------|-----------|---------------------------------------|  
 148:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 149:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    +-------------------------------------------------------------+            
 150:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..]
 151:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****            (++) Hardware flow control.
 152:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****            (++) Receiver/transmitter modes.
 153:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] The USART_Init() function follows the USART  asynchronous configuration 
 154:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          procedure(details for the procedure are available in reference manual.
 155:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****         (+) For the synchronous mode in addition to the asynchronous mode parameters
 156:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             these parameters should be also configured:
 157:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             (++) USART Clock Enabled.
 158:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             (++) USART polarity.
 159:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             (++) USART phase.
 160:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             (++) USART LastBit.
 161:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] These parameters can be configured using the USART_ClockInit() function.
 162:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 163:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
 164:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
 165:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 166:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 167:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 168:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Deinitializes the USARTx peripheral registers to their default reset values.
 169:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 170:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 171:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 172:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 173:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_DeInit(USART_TypeDef* USARTx)
 174:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
  27              		.loc 1 174 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 00B5     		push	{lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 16
  38 0004 0190     		str	r0, [sp, #4]
 175:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 176:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 177:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 178:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (USARTx == USART1)
  39              		.loc 1 178 0
  40 0006 019A     		ldr	r2, [sp, #4]
  41 0008 4FF46053 		mov	r3, #14336
  42 000c C4F20103 		movt	r3, 16385
  43 0010 9A42     		cmp	r2, r3
  44 0012 0CD1     		bne	.L2
 179:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 180:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, ENABLE);
  45              		.loc 1 180 0
  46 0014 4FF48040 		mov	r0, #16384
  47 0018 4FF00101 		mov	r1, #1
  48 001c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 181:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, DISABLE);
  49              		.loc 1 181 0
  50 0020 4FF48040 		mov	r0, #16384
  51 0024 4FF00001 		mov	r1, #0
  52 0028 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  53 002c 4EE0     		b	.L1
  54              	.L2:
 182:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 183:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else if (USARTx == USART2)
  55              		.loc 1 183 0
  56 002e 019A     		ldr	r2, [sp, #4]
  57 0030 4FF48843 		mov	r3, #17408
  58 0034 C4F20003 		movt	r3, 16384
  59 0038 9A42     		cmp	r2, r3
  60 003a 0CD1     		bne	.L4
 184:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 185:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, ENABLE);
  61              		.loc 1 185 0
  62 003c 4FF40030 		mov	r0, #131072
  63 0040 4FF00101 		mov	r1, #1
  64 0044 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 186:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, DISABLE);
  65              		.loc 1 186 0
  66 0048 4FF40030 		mov	r0, #131072
  67 004c 4FF00001 		mov	r1, #0
  68 0050 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  69 0054 3AE0     		b	.L1
  70              	.L4:
 187:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 188:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else if (USARTx == USART3)
  71              		.loc 1 188 0
  72 0056 019A     		ldr	r2, [sp, #4]
  73 0058 4FF49043 		mov	r3, #18432
  74 005c C4F20003 		movt	r3, 16384
  75 0060 9A42     		cmp	r2, r3
  76 0062 0CD1     		bne	.L5
 189:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 190:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, ENABLE);
  77              		.loc 1 190 0
  78 0064 4FF48020 		mov	r0, #262144
  79 0068 4FF00101 		mov	r1, #1
  80 006c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 191:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, DISABLE);
  81              		.loc 1 191 0
  82 0070 4FF48020 		mov	r0, #262144
  83 0074 4FF00001 		mov	r1, #0
  84 0078 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  85 007c 26E0     		b	.L1
  86              	.L5:
 192:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 193:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else if (USARTx == UART4)
  87              		.loc 1 193 0
  88 007e 019A     		ldr	r2, [sp, #4]
  89 0080 4FF49843 		mov	r3, #19456
  90 0084 C4F20003 		movt	r3, 16384
  91 0088 9A42     		cmp	r2, r3
  92 008a 0CD1     		bne	.L6
 194:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 195:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, ENABLE);
  93              		.loc 1 195 0
  94 008c 4FF40020 		mov	r0, #524288
  95 0090 4FF00101 		mov	r1, #1
  96 0094 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 196:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
  97              		.loc 1 196 0
  98 0098 4FF40020 		mov	r0, #524288
  99 009c 4FF00001 		mov	r1, #0
 100 00a0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 101 00a4 12E0     		b	.L1
 102              	.L6:
 197:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 198:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 199:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 200:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     if  (USARTx == UART5)
 103              		.loc 1 200 0
 104 00a6 019A     		ldr	r2, [sp, #4]
 105 00a8 4FF4A043 		mov	r3, #20480
 106 00ac C4F20003 		movt	r3, 16384
 107 00b0 9A42     		cmp	r2, r3
 108 00b2 0BD1     		bne	.L1
 201:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     {
 202:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, ENABLE);
 109              		.loc 1 202 0
 110 00b4 4FF48010 		mov	r0, #1048576
 111 00b8 4FF00101 		mov	r1, #1
 112 00bc FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 203:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
 113              		.loc 1 203 0
 114 00c0 4FF48010 		mov	r0, #1048576
 115 00c4 4FF00001 		mov	r1, #0
 116 00c8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 117              	.L1:
 204:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     }
 205:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 206:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 118              		.loc 1 206 0
 119 00cc 03B0     		add	sp, sp, #12
 120 00ce 00BD     		pop	{pc}
 121              		.cfi_endproc
 122              	.LFE111:
 124              		.align	2
 125              		.global	USART_Init
 126              		.thumb
 127              		.thumb_func
 129              	USART_Init:
 130              	.LFB112:
 207:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 208:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 209:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Initializes the USARTx peripheral according to the specified
 210:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         parameters in the USART_InitStruct .
 211:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 212:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 213:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure
 214:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         that contains the configuration information for the specified USART peripheral.
 215:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 216:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 217:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)
 218:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 131              		.loc 1 218 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 80
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135 00d0 00B5     		push	{lr}
 136              	.LCFI2:
 137              		.cfi_def_cfa_offset 4
 138              		.cfi_offset 14, -4
 139 00d2 95B0     		sub	sp, sp, #84
 140              	.LCFI3:
 141              		.cfi_def_cfa_offset 88
 142 00d4 0190     		str	r0, [sp, #4]
 143 00d6 0091     		str	r1, [sp, #0]
 219:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   uint32_t divider = 0, apbclock = 0, tmpreg = 0;
 144              		.loc 1 219 0
 145 00d8 4FF00003 		mov	r3, #0
 146 00dc 1393     		str	r3, [sp, #76]
 147 00de 4FF00003 		mov	r3, #0
 148 00e2 1293     		str	r3, [sp, #72]
 149 00e4 4FF00003 		mov	r3, #0
 150 00e8 1193     		str	r3, [sp, #68]
 220:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   RCC_ClocksTypeDef RCC_ClocksStatus;
 221:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 222:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 223:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 224:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_BAUDRATE(USART_InitStruct->USART_BaudRate));
 225:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_WORD_LENGTH(USART_InitStruct->USART_WordLength));
 226:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_STOPBITS(USART_InitStruct->USART_StopBits));
 227:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_PARITY(USART_InitStruct->USART_Parity));
 228:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_MODE(USART_InitStruct->USART_Mode));
 229:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_HARDWARE_FLOW_CONTROL(USART_InitStruct->USART_HardwareFlowControl));
 230:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 231:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Disable USART */
 232:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR1 &= (uint32_t)~((uint32_t)USART_CR1_UE);
 151              		.loc 1 232 0
 152 00ea 019B     		ldr	r3, [sp, #4]
 153 00ec 1B68     		ldr	r3, [r3, #0]
 154 00ee 23F00102 		bic	r2, r3, #1
 155 00f2 019B     		ldr	r3, [sp, #4]
 156 00f4 1A60     		str	r2, [r3, #0]
 233:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 234:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /*---------------------------- USART CR2 Configuration -----------------------*/
 235:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg = USARTx->CR2;
 157              		.loc 1 235 0
 158 00f6 019B     		ldr	r3, [sp, #4]
 159 00f8 5B68     		ldr	r3, [r3, #4]
 160 00fa 1193     		str	r3, [sp, #68]
 236:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear STOP[13:12] bits */
 237:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
 161              		.loc 1 237 0
 162 00fc 119B     		ldr	r3, [sp, #68]
 163 00fe 23F44053 		bic	r3, r3, #12288
 164 0102 1193     		str	r3, [sp, #68]
 238:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 239:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Configure the USART Stop Bits, Clock, CPOL, CPHA and LastBit ------------*/
 240:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set STOP[13:12] bits according to USART_StopBits value */
 241:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg |= (uint32_t)USART_InitStruct->USART_StopBits;
 165              		.loc 1 241 0
 166 0104 009B     		ldr	r3, [sp, #0]
 167 0106 9B68     		ldr	r3, [r3, #8]
 168 0108 119A     		ldr	r2, [sp, #68]
 169 010a 1343     		orrs	r3, r3, r2
 170 010c 1193     		str	r3, [sp, #68]
 242:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 243:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Write to USART CR2 */
 244:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR2 = tmpreg;
 171              		.loc 1 244 0
 172 010e 019B     		ldr	r3, [sp, #4]
 173 0110 119A     		ldr	r2, [sp, #68]
 174 0112 5A60     		str	r2, [r3, #4]
 245:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 246:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /*---------------------------- USART CR1 Configuration -----------------------*/
 247:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg = USARTx->CR1;
 175              		.loc 1 247 0
 176 0114 019B     		ldr	r3, [sp, #4]
 177 0116 1B68     		ldr	r3, [r3, #0]
 178 0118 1193     		str	r3, [sp, #68]
 248:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear M, PCE, PS, TE and RE bits */
 249:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR1_CLEAR_MASK);
 179              		.loc 1 249 0
 180 011a 119B     		ldr	r3, [sp, #68]
 181 011c 23F4B053 		bic	r3, r3, #5632
 182 0120 23F00C03 		bic	r3, r3, #12
 183 0124 1193     		str	r3, [sp, #68]
 250:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 251:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Configure the USART Word Length, Parity and mode ----------------------- */
 252:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the M bits according to USART_WordLength value */
 253:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set PCE and PS bits according to USART_Parity value */
 254:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set TE and RE bits according to USART_Mode value */
 255:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 184              		.loc 1 255 0
 185 0126 009B     		ldr	r3, [sp, #0]
 186 0128 5A68     		ldr	r2, [r3, #4]
 187 012a 009B     		ldr	r3, [sp, #0]
 188 012c DB68     		ldr	r3, [r3, #12]
 189 012e 1A43     		orrs	r2, r2, r3
 256:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USART_InitStruct->USART_Mode;
 190              		.loc 1 256 0
 191 0130 009B     		ldr	r3, [sp, #0]
 192 0132 1B69     		ldr	r3, [r3, #16]
 255:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 193              		.loc 1 255 0
 194 0134 1343     		orrs	r3, r3, r2
 195 0136 119A     		ldr	r2, [sp, #68]
 196 0138 1343     		orrs	r3, r3, r2
 197 013a 1193     		str	r3, [sp, #68]
 257:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 258:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Write to USART CR1 */
 259:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR1 = tmpreg;
 198              		.loc 1 259 0
 199 013c 019B     		ldr	r3, [sp, #4]
 200 013e 119A     		ldr	r2, [sp, #68]
 201 0140 1A60     		str	r2, [r3, #0]
 260:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 261:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /*---------------------------- USART CR3 Configuration -----------------------*/
 262:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg = USARTx->CR3;
 202              		.loc 1 262 0
 203 0142 019B     		ldr	r3, [sp, #4]
 204 0144 9B68     		ldr	r3, [r3, #8]
 205 0146 1193     		str	r3, [sp, #68]
 263:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear CTSE and RTSE bits */
 264:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR3_CLEAR_MASK);
 206              		.loc 1 264 0
 207 0148 119B     		ldr	r3, [sp, #68]
 208 014a 23F44073 		bic	r3, r3, #768
 209 014e 1193     		str	r3, [sp, #68]
 265:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 266:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Configure the USART HFC -------------------------------------------------*/
 267:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set CTSE and RTSE bits according to USART_HardwareFlowControl value */
 268:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg |= USART_InitStruct->USART_HardwareFlowControl;
 210              		.loc 1 268 0
 211 0150 009B     		ldr	r3, [sp, #0]
 212 0152 5B69     		ldr	r3, [r3, #20]
 213 0154 119A     		ldr	r2, [sp, #68]
 214 0156 1343     		orrs	r3, r3, r2
 215 0158 1193     		str	r3, [sp, #68]
 269:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 270:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Write to USART CR3 */
 271:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 = tmpreg;
 216              		.loc 1 271 0
 217 015a 019B     		ldr	r3, [sp, #4]
 218 015c 119A     		ldr	r2, [sp, #68]
 219 015e 9A60     		str	r2, [r3, #8]
 272:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 273:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /*---------------------------- USART BRR Configuration -----------------------*/
 274:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Configure the USART Baud Rate -------------------------------------------*/
 275:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   RCC_GetClocksFreq(&RCC_ClocksStatus);
 220              		.loc 1 275 0
 221 0160 02AB     		add	r3, sp, #8
 222 0162 1846     		mov	r0, r3
 223 0164 FFF7FEFF 		bl	RCC_GetClocksFreq
 276:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 277:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (USARTx == USART1)
 224              		.loc 1 277 0
 225 0168 019A     		ldr	r2, [sp, #4]
 226 016a 4FF46053 		mov	r3, #14336
 227 016e C4F20103 		movt	r3, 16385
 228 0172 9A42     		cmp	r2, r3
 229 0174 02D1     		bne	.L8
 278:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 279:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     apbclock = RCC_ClocksStatus.USART1CLK_Frequency;
 230              		.loc 1 279 0
 231 0176 0C9B     		ldr	r3, [sp, #48]
 232 0178 1293     		str	r3, [sp, #72]
 233 017a 1FE0     		b	.L9
 234              	.L8:
 280:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 281:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else if (USARTx == USART2)
 235              		.loc 1 281 0
 236 017c 019A     		ldr	r2, [sp, #4]
 237 017e 4FF48843 		mov	r3, #17408
 238 0182 C4F20003 		movt	r3, 16384
 239 0186 9A42     		cmp	r2, r3
 240 0188 02D1     		bne	.L10
 282:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 283:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     apbclock = RCC_ClocksStatus.USART2CLK_Frequency;
 241              		.loc 1 283 0
 242 018a 0D9B     		ldr	r3, [sp, #52]
 243 018c 1293     		str	r3, [sp, #72]
 244 018e 15E0     		b	.L9
 245              	.L10:
 284:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 285:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else if (USARTx == USART3)
 246              		.loc 1 285 0
 247 0190 019A     		ldr	r2, [sp, #4]
 248 0192 4FF49043 		mov	r3, #18432
 249 0196 C4F20003 		movt	r3, 16384
 250 019a 9A42     		cmp	r2, r3
 251 019c 02D1     		bne	.L11
 286:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 287:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     apbclock = RCC_ClocksStatus.USART3CLK_Frequency;
 252              		.loc 1 287 0
 253 019e 0E9B     		ldr	r3, [sp, #56]
 254 01a0 1293     		str	r3, [sp, #72]
 255 01a2 0BE0     		b	.L9
 256              	.L11:
 288:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 289:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else if (USARTx == UART4)
 257              		.loc 1 289 0
 258 01a4 019A     		ldr	r2, [sp, #4]
 259 01a6 4FF49843 		mov	r3, #19456
 260 01aa C4F20003 		movt	r3, 16384
 261 01ae 9A42     		cmp	r2, r3
 262 01b0 02D1     		bne	.L12
 290:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 291:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     apbclock = RCC_ClocksStatus.UART4CLK_Frequency;
 263              		.loc 1 291 0
 264 01b2 0F9B     		ldr	r3, [sp, #60]
 265 01b4 1293     		str	r3, [sp, #72]
 266 01b6 01E0     		b	.L9
 267              	.L12:
 292:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 293:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else 
 294:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 295:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     apbclock = RCC_ClocksStatus.UART5CLK_Frequency;
 268              		.loc 1 295 0
 269 01b8 109B     		ldr	r3, [sp, #64]
 270 01ba 1293     		str	r3, [sp, #72]
 271              	.L9:
 296:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }  
 297:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 298:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Determine the integer part */
 299:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if ((USARTx->CR1 & USART_CR1_OVER8) != 0)
 272              		.loc 1 299 0
 273 01bc 019B     		ldr	r3, [sp, #4]
 274 01be 1B68     		ldr	r3, [r3, #0]
 275 01c0 03F40043 		and	r3, r3, #32768
 276 01c4 002B     		cmp	r3, #0
 277 01c6 13D0     		beq	.L13
 300:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 301:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* (divider * 10) computing in case Oversampling mode is 8 Samples */
 302:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     divider = (uint32_t)((2 * apbclock) / (USART_InitStruct->USART_BaudRate));
 278              		.loc 1 302 0
 279 01c8 129B     		ldr	r3, [sp, #72]
 280 01ca 4FEA4302 		lsl	r2, r3, #1
 281 01ce 009B     		ldr	r3, [sp, #0]
 282 01d0 1B68     		ldr	r3, [r3, #0]
 283 01d2 B2FBF3F3 		udiv	r3, r2, r3
 284 01d6 1393     		str	r3, [sp, #76]
 303:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     tmpreg  = (uint32_t)((2 * apbclock) % (USART_InitStruct->USART_BaudRate));
 285              		.loc 1 303 0
 286 01d8 129B     		ldr	r3, [sp, #72]
 287 01da 4FEA4303 		lsl	r3, r3, #1
 288 01de 009A     		ldr	r2, [sp, #0]
 289 01e0 1268     		ldr	r2, [r2, #0]
 290 01e2 B3FBF2F1 		udiv	r1, r3, r2
 291 01e6 02FB01F2 		mul	r2, r2, r1
 292 01ea 9B1A     		subs	r3, r3, r2
 293 01ec 1193     		str	r3, [sp, #68]
 294 01ee 0EE0     		b	.L14
 295              	.L13:
 304:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 305:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else /* if ((USARTx->CR1 & CR1_OVER8_Set) == 0) */
 306:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 307:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* (divider * 10) computing in case Oversampling mode is 16 Samples */
 308:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     divider = (uint32_t)((apbclock) / (USART_InitStruct->USART_BaudRate));
 296              		.loc 1 308 0
 297 01f0 009B     		ldr	r3, [sp, #0]
 298 01f2 1B68     		ldr	r3, [r3, #0]
 299 01f4 129A     		ldr	r2, [sp, #72]
 300 01f6 B2FBF3F3 		udiv	r3, r2, r3
 301 01fa 1393     		str	r3, [sp, #76]
 309:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     tmpreg  = (uint32_t)((apbclock) % (USART_InitStruct->USART_BaudRate));
 302              		.loc 1 309 0
 303 01fc 009B     		ldr	r3, [sp, #0]
 304 01fe 1A68     		ldr	r2, [r3, #0]
 305 0200 129B     		ldr	r3, [sp, #72]
 306 0202 B3FBF2F1 		udiv	r1, r3, r2
 307 0206 02FB01F2 		mul	r2, r2, r1
 308 020a 9B1A     		subs	r3, r3, r2
 309 020c 1193     		str	r3, [sp, #68]
 310              	.L14:
 310:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 311:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 312:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* round the divider : if fractional part i greater than 0.5 increment divider */
 313:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (tmpreg >=  (USART_InitStruct->USART_BaudRate) / 2)
 311              		.loc 1 313 0
 312 020e 009B     		ldr	r3, [sp, #0]
 313 0210 1B68     		ldr	r3, [r3, #0]
 314 0212 4FEA5302 		lsr	r2, r3, #1
 315 0216 119B     		ldr	r3, [sp, #68]
 316 0218 9A42     		cmp	r2, r3
 317 021a 03D8     		bhi	.L15
 314:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 315:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     divider++;
 318              		.loc 1 315 0
 319 021c 139B     		ldr	r3, [sp, #76]
 320 021e 03F10103 		add	r3, r3, #1
 321 0222 1393     		str	r3, [sp, #76]
 322              	.L15:
 316:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   } 
 317:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 318:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Implement the divider in case Oversampling mode is 8 Samples */
 319:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if ((USARTx->CR1 & USART_CR1_OVER8) != 0)
 323              		.loc 1 319 0
 324 0224 019B     		ldr	r3, [sp, #4]
 325 0226 1B68     		ldr	r3, [r3, #0]
 326 0228 03F40043 		and	r3, r3, #32768
 327 022c 002B     		cmp	r3, #0
 328 022e 0CD0     		beq	.L16
 320:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 321:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* get the LSB of divider and shift it to the right by 1 bit */
 322:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     tmpreg = (divider & (uint16_t)0x000F) >> 1;
 329              		.loc 1 322 0
 330 0230 139B     		ldr	r3, [sp, #76]
 331 0232 03F00F03 		and	r3, r3, #15
 332 0236 4FEA5303 		lsr	r3, r3, #1
 333 023a 1193     		str	r3, [sp, #68]
 323:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     
 324:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* update the divider value */
 325:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     divider = (divider & (uint16_t)0xFFF0) | tmpreg;
 334              		.loc 1 325 0
 335 023c 139A     		ldr	r2, [sp, #76]
 336 023e 4FF6F073 		movw	r3, #65520
 337 0242 1340     		ands	r3, r3, r2
 338 0244 119A     		ldr	r2, [sp, #68]
 339 0246 1343     		orrs	r3, r3, r2
 340 0248 1393     		str	r3, [sp, #76]
 341              	.L16:
 326:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 327:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 328:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Write to USART BRR */
 329:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->BRR = (uint16_t)divider;
 342              		.loc 1 329 0
 343 024a 139B     		ldr	r3, [sp, #76]
 344 024c 9AB2     		uxth	r2, r3
 345 024e 019B     		ldr	r3, [sp, #4]
 346 0250 9A81     		strh	r2, [r3, #12]	@ movhi
 330:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 347              		.loc 1 330 0
 348 0252 15B0     		add	sp, sp, #84
 349 0254 00BD     		pop	{pc}
 350              		.cfi_endproc
 351              	.LFE112:
 353 0256 00BF     		.align	2
 354              		.global	USART_StructInit
 355              		.thumb
 356              		.thumb_func
 358              	USART_StructInit:
 359              	.LFB113:
 331:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 332:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 333:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Fills each USART_InitStruct member with its default value.
 334:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure
 335:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         which will be initialized.
 336:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 337:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 338:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_StructInit(USART_InitTypeDef* USART_InitStruct)
 339:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 360              		.loc 1 339 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 8
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364              		@ link register save eliminated.
 365 0258 82B0     		sub	sp, sp, #8
 366              	.LCFI4:
 367              		.cfi_def_cfa_offset 8
 368 025a 0190     		str	r0, [sp, #4]
 340:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* USART_InitStruct members default value */
 341:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USART_InitStruct->USART_BaudRate = 9600;
 369              		.loc 1 341 0
 370 025c 019B     		ldr	r3, [sp, #4]
 371 025e 4FF41652 		mov	r2, #9600
 372 0262 1A60     		str	r2, [r3, #0]
 342:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USART_InitStruct->USART_WordLength = USART_WordLength_8b;
 373              		.loc 1 342 0
 374 0264 019B     		ldr	r3, [sp, #4]
 375 0266 4FF00002 		mov	r2, #0
 376 026a 5A60     		str	r2, [r3, #4]
 343:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USART_InitStruct->USART_StopBits = USART_StopBits_1;
 377              		.loc 1 343 0
 378 026c 019B     		ldr	r3, [sp, #4]
 379 026e 4FF00002 		mov	r2, #0
 380 0272 9A60     		str	r2, [r3, #8]
 344:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USART_InitStruct->USART_Parity = USART_Parity_No ;
 381              		.loc 1 344 0
 382 0274 019B     		ldr	r3, [sp, #4]
 383 0276 4FF00002 		mov	r2, #0
 384 027a DA60     		str	r2, [r3, #12]
 345:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USART_InitStruct->USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 385              		.loc 1 345 0
 386 027c 019B     		ldr	r3, [sp, #4]
 387 027e 4FF00C02 		mov	r2, #12
 388 0282 1A61     		str	r2, [r3, #16]
 346:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USART_InitStruct->USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 389              		.loc 1 346 0
 390 0284 019B     		ldr	r3, [sp, #4]
 391 0286 4FF00002 		mov	r2, #0
 392 028a 5A61     		str	r2, [r3, #20]
 347:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 393              		.loc 1 347 0
 394 028c 02B0     		add	sp, sp, #8
 395 028e 7047     		bx	lr
 396              		.cfi_endproc
 397              	.LFE113:
 399              		.align	2
 400              		.global	USART_ClockInit
 401              		.thumb
 402              		.thumb_func
 404              	USART_ClockInit:
 405              	.LFB114:
 348:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 349:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 350:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Initializes the USARTx peripheral Clock according to the
 351:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         specified parameters in the USART_ClockInitStruct.
 352:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the
 353:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3.
 354:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_ClockInitStruct: pointer to a USART_ClockInitTypeDef
 355:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         structure that contains the configuration information for the specified
 356:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         USART peripheral.
 357:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 358:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 359:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_ClockInit(USART_TypeDef* USARTx, USART_ClockInitTypeDef* USART_ClockInitStruct)
 360:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 406              		.loc 1 360 0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 16
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410              		@ link register save eliminated.
 411 0290 84B0     		sub	sp, sp, #16
 412              	.LCFI5:
 413              		.cfi_def_cfa_offset 16
 414 0292 0190     		str	r0, [sp, #4]
 415 0294 0091     		str	r1, [sp, #0]
 361:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   uint32_t tmpreg = 0;
 416              		.loc 1 361 0
 417 0296 4FF00003 		mov	r3, #0
 418 029a 0393     		str	r3, [sp, #12]
 362:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 363:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_123_PERIPH(USARTx));
 364:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_CLOCK(USART_ClockInitStruct->USART_Clock));
 365:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_CPOL(USART_ClockInitStruct->USART_CPOL));
 366:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_CPHA(USART_ClockInitStruct->USART_CPHA));
 367:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_LASTBIT(USART_ClockInitStruct->USART_LastBit));
 368:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /*---------------------------- USART CR2 Configuration -----------------------*/
 369:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg = USARTx->CR2;
 419              		.loc 1 369 0
 420 029c 019B     		ldr	r3, [sp, #4]
 421 029e 5B68     		ldr	r3, [r3, #4]
 422 02a0 0393     		str	r3, [sp, #12]
 370:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear CLKEN, CPOL, CPHA, LBCL and SSM bits */
 371:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR2_CLOCK_CLEAR_MASK);
 423              		.loc 1 371 0
 424 02a2 039B     		ldr	r3, [sp, #12]
 425 02a4 23F47063 		bic	r3, r3, #3840
 426 02a8 0393     		str	r3, [sp, #12]
 372:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Configure the USART Clock, CPOL, CPHA, LastBit and SSM ------------*/
 373:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set CLKEN bit according to USART_Clock value */
 374:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set CPOL bit according to USART_CPOL value */
 375:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set CPHA bit according to USART_CPHA value */
 376:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set LBCL bit according to USART_LastBit value */
 377:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg |= (uint32_t)(USART_ClockInitStruct->USART_Clock | USART_ClockInitStruct->USART_CPOL | 
 427              		.loc 1 377 0
 428 02aa 009B     		ldr	r3, [sp, #0]
 429 02ac 1A68     		ldr	r2, [r3, #0]
 430 02ae 009B     		ldr	r3, [sp, #0]
 431 02b0 5B68     		ldr	r3, [r3, #4]
 432 02b2 1A43     		orrs	r2, r2, r3
 378:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                        USART_ClockInitStruct->USART_CPHA | USART_ClockInitStruct->USART_LastBit);
 433              		.loc 1 378 0
 434 02b4 009B     		ldr	r3, [sp, #0]
 435 02b6 9B68     		ldr	r3, [r3, #8]
 377:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg |= (uint32_t)(USART_ClockInitStruct->USART_Clock | USART_ClockInitStruct->USART_CPOL | 
 436              		.loc 1 377 0
 437 02b8 1A43     		orrs	r2, r2, r3
 438              		.loc 1 378 0
 439 02ba 009B     		ldr	r3, [sp, #0]
 440 02bc DB68     		ldr	r3, [r3, #12]
 377:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg |= (uint32_t)(USART_ClockInitStruct->USART_Clock | USART_ClockInitStruct->USART_CPOL | 
 441              		.loc 1 377 0
 442 02be 1343     		orrs	r3, r3, r2
 443 02c0 039A     		ldr	r2, [sp, #12]
 444 02c2 1343     		orrs	r3, r3, r2
 445 02c4 0393     		str	r3, [sp, #12]
 379:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Write to USART CR2 */
 380:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR2 = tmpreg;
 446              		.loc 1 380 0
 447 02c6 019B     		ldr	r3, [sp, #4]
 448 02c8 039A     		ldr	r2, [sp, #12]
 449 02ca 5A60     		str	r2, [r3, #4]
 381:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 450              		.loc 1 381 0
 451 02cc 04B0     		add	sp, sp, #16
 452 02ce 7047     		bx	lr
 453              		.cfi_endproc
 454              	.LFE114:
 456              		.align	2
 457              		.global	USART_ClockStructInit
 458              		.thumb
 459              		.thumb_func
 461              	USART_ClockStructInit:
 462              	.LFB115:
 382:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 383:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 384:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Fills each USART_ClockInitStruct member with its default value.
 385:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_ClockInitStruct: pointer to a USART_ClockInitTypeDef
 386:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         structure which will be initialized.
 387:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 388:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 389:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_ClockStructInit(USART_ClockInitTypeDef* USART_ClockInitStruct)
 390:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 463              		.loc 1 390 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 8
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 468 02d0 82B0     		sub	sp, sp, #8
 469              	.LCFI6:
 470              		.cfi_def_cfa_offset 8
 471 02d2 0190     		str	r0, [sp, #4]
 391:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* USART_ClockInitStruct members default value */
 392:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USART_ClockInitStruct->USART_Clock = USART_Clock_Disable;
 472              		.loc 1 392 0
 473 02d4 019B     		ldr	r3, [sp, #4]
 474 02d6 4FF00002 		mov	r2, #0
 475 02da 1A60     		str	r2, [r3, #0]
 393:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USART_ClockInitStruct->USART_CPOL = USART_CPOL_Low;
 476              		.loc 1 393 0
 477 02dc 019B     		ldr	r3, [sp, #4]
 478 02de 4FF00002 		mov	r2, #0
 479 02e2 5A60     		str	r2, [r3, #4]
 394:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USART_ClockInitStruct->USART_CPHA = USART_CPHA_1Edge;
 480              		.loc 1 394 0
 481 02e4 019B     		ldr	r3, [sp, #4]
 482 02e6 4FF00002 		mov	r2, #0
 483 02ea 9A60     		str	r2, [r3, #8]
 395:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USART_ClockInitStruct->USART_LastBit = USART_LastBit_Disable;
 484              		.loc 1 395 0
 485 02ec 019B     		ldr	r3, [sp, #4]
 486 02ee 4FF00002 		mov	r2, #0
 487 02f2 DA60     		str	r2, [r3, #12]
 396:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 488              		.loc 1 396 0
 489 02f4 02B0     		add	sp, sp, #8
 490 02f6 7047     		bx	lr
 491              		.cfi_endproc
 492              	.LFE115:
 494              		.align	2
 495              		.global	USART_Cmd
 496              		.thumb
 497              		.thumb_func
 499              	USART_Cmd:
 500              	.LFB116:
 397:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 398:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 399:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the specified USART peripheral.
 400:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the
 401:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 402:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USARTx peripheral.
 403:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 404:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 405:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 406:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
 407:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 501              		.loc 1 407 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 8
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              		@ link register save eliminated.
 506 02f8 82B0     		sub	sp, sp, #8
 507              	.LCFI7:
 508              		.cfi_def_cfa_offset 8
 509 02fa 0190     		str	r0, [sp, #4]
 510 02fc 0B46     		mov	r3, r1
 511 02fe 8DF80330 		strb	r3, [sp, #3]
 408:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 409:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 410:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 411:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 412:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 512              		.loc 1 412 0
 513 0302 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 514 0306 002B     		cmp	r3, #0
 515 0308 06D0     		beq	.L21
 413:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 414:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the selected USART by setting the UE bit in the CR1 register */
 415:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR1 |= USART_CR1_UE;
 516              		.loc 1 415 0
 517 030a 019B     		ldr	r3, [sp, #4]
 518 030c 1B68     		ldr	r3, [r3, #0]
 519 030e 43F00102 		orr	r2, r3, #1
 520 0312 019B     		ldr	r3, [sp, #4]
 521 0314 1A60     		str	r2, [r3, #0]
 522 0316 05E0     		b	.L20
 523              	.L21:
 416:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 417:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 418:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 419:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the selected USART by clearing the UE bit in the CR1 register */
 420:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR1 &= (uint32_t)~((uint32_t)USART_CR1_UE);
 524              		.loc 1 420 0
 525 0318 019B     		ldr	r3, [sp, #4]
 526 031a 1B68     		ldr	r3, [r3, #0]
 527 031c 23F00102 		bic	r2, r3, #1
 528 0320 019B     		ldr	r3, [sp, #4]
 529 0322 1A60     		str	r2, [r3, #0]
 530              	.L20:
 421:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 422:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 531              		.loc 1 422 0
 532 0324 02B0     		add	sp, sp, #8
 533 0326 7047     		bx	lr
 534              		.cfi_endproc
 535              	.LFE116:
 537              		.align	2
 538              		.global	USART_DirectionModeCmd
 539              		.thumb
 540              		.thumb_func
 542              	USART_DirectionModeCmd:
 543              	.LFB117:
 423:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 424:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 425:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's transmitter or receiver.
 426:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 427:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 428:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_Direction: specifies the USART direction.
 429:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be any combination of the following values:
 430:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_Mode_Tx: USART Transmitter
 431:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_Mode_Rx: USART Receiver
 432:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USART transfer direction.
 433:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.  
 434:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 435:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 436:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_DirectionModeCmd(USART_TypeDef* USARTx, uint32_t USART_DirectionMode, FunctionalState Ne
 437:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 544              		.loc 1 437 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 16
 547              		@ frame_needed = 0, uses_anonymous_args = 0
 548              		@ link register save eliminated.
 549 0328 84B0     		sub	sp, sp, #16
 550              	.LCFI8:
 551              		.cfi_def_cfa_offset 16
 552 032a 0390     		str	r0, [sp, #12]
 553 032c 0291     		str	r1, [sp, #8]
 554 032e 1346     		mov	r3, r2
 555 0330 8DF80730 		strb	r3, [sp, #7]
 438:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 439:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 440:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_MODE(USART_DirectionMode));
 441:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState)); 
 442:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 443:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 556              		.loc 1 443 0
 557 0334 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 558 0338 002B     		cmp	r3, #0
 559 033a 06D0     		beq	.L24
 444:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 445:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the USART's transfer interface by setting the TE and/or RE bits 
 446:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        in the USART CR1 register */
 447:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR1 |= USART_DirectionMode;
 560              		.loc 1 447 0
 561 033c 039B     		ldr	r3, [sp, #12]
 562 033e 1A68     		ldr	r2, [r3, #0]
 563 0340 029B     		ldr	r3, [sp, #8]
 564 0342 1A43     		orrs	r2, r2, r3
 565 0344 039B     		ldr	r3, [sp, #12]
 566 0346 1A60     		str	r2, [r3, #0]
 567 0348 07E0     		b	.L23
 568              	.L24:
 448:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 449:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 450:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 451:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the USART's transfer interface by clearing the TE and/or RE bits
 452:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        in the USART CR3 register */
 453:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR1 &= (uint32_t)~USART_DirectionMode;
 569              		.loc 1 453 0
 570 034a 039B     		ldr	r3, [sp, #12]
 571 034c 1A68     		ldr	r2, [r3, #0]
 572 034e 029B     		ldr	r3, [sp, #8]
 573 0350 6FEA0303 		mvn	r3, r3
 574 0354 1A40     		ands	r2, r2, r3
 575 0356 039B     		ldr	r3, [sp, #12]
 576 0358 1A60     		str	r2, [r3, #0]
 577              	.L23:
 454:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 455:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 578              		.loc 1 455 0
 579 035a 04B0     		add	sp, sp, #16
 580 035c 7047     		bx	lr
 581              		.cfi_endproc
 582              	.LFE117:
 584 035e 00BF     		.align	2
 585              		.global	USART_OverSampling8Cmd
 586              		.thumb
 587              		.thumb_func
 589              	USART_OverSampling8Cmd:
 590              	.LFB118:
 456:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 457:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 458:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's 8x oversampling mode.
 459:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 460:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 461:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USART 8x oversampling mode.
 462:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 463:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
 464:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   This function has to be called before calling USART_Init()
 465:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   function in order to have correct baudrate Divider value.
 466:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 467:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 468:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_OverSampling8Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
 469:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 591              		.loc 1 469 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 8
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 596 0360 82B0     		sub	sp, sp, #8
 597              	.LCFI9:
 598              		.cfi_def_cfa_offset 8
 599 0362 0190     		str	r0, [sp, #4]
 600 0364 0B46     		mov	r3, r1
 601 0366 8DF80330 		strb	r3, [sp, #3]
 470:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 471:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 472:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 473:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 474:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 602              		.loc 1 474 0
 603 036a 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 604 036e 002B     		cmp	r3, #0
 605 0370 06D0     		beq	.L27
 475:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 476:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the 8x Oversampling mode by setting the OVER8 bit in the CR1 register */
 477:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR1 |= USART_CR1_OVER8;
 606              		.loc 1 477 0
 607 0372 019B     		ldr	r3, [sp, #4]
 608 0374 1B68     		ldr	r3, [r3, #0]
 609 0376 43F40042 		orr	r2, r3, #32768
 610 037a 019B     		ldr	r3, [sp, #4]
 611 037c 1A60     		str	r2, [r3, #0]
 612 037e 05E0     		b	.L26
 613              	.L27:
 478:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 479:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 480:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 481:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the 8x Oversampling mode by clearing the OVER8 bit in the CR1 register */
 482:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR1 &= (uint32_t)~((uint32_t)USART_CR1_OVER8);
 614              		.loc 1 482 0
 615 0380 019B     		ldr	r3, [sp, #4]
 616 0382 1B68     		ldr	r3, [r3, #0]
 617 0384 23F40042 		bic	r2, r3, #32768
 618 0388 019B     		ldr	r3, [sp, #4]
 619 038a 1A60     		str	r2, [r3, #0]
 620              	.L26:
 483:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 484:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 621              		.loc 1 484 0
 622 038c 02B0     		add	sp, sp, #8
 623 038e 7047     		bx	lr
 624              		.cfi_endproc
 625              	.LFE118:
 627              		.align	2
 628              		.global	USART_OneBitMethodCmd
 629              		.thumb
 630              		.thumb_func
 632              	USART_OneBitMethodCmd:
 633              	.LFB119:
 485:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 486:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 487:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's one bit sampling method.
 488:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the
 489:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 490:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USART one bit sampling method.
 491:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 492:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
 493:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   This function has to be called before calling USART_Cmd() function.
 494:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 495:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 496:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_OneBitMethodCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 497:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 634              		.loc 1 497 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 8
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638              		@ link register save eliminated.
 639 0390 82B0     		sub	sp, sp, #8
 640              	.LCFI10:
 641              		.cfi_def_cfa_offset 8
 642 0392 0190     		str	r0, [sp, #4]
 643 0394 0B46     		mov	r3, r1
 644 0396 8DF80330 		strb	r3, [sp, #3]
 498:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 499:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 500:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 501:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 502:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 645              		.loc 1 502 0
 646 039a 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 647 039e 002B     		cmp	r3, #0
 648 03a0 06D0     		beq	.L30
 503:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 504:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the one bit method by setting the ONEBITE bit in the CR3 register */
 505:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 |= USART_CR3_ONEBIT;
 649              		.loc 1 505 0
 650 03a2 019B     		ldr	r3, [sp, #4]
 651 03a4 9B68     		ldr	r3, [r3, #8]
 652 03a6 43F40062 		orr	r2, r3, #2048
 653 03aa 019B     		ldr	r3, [sp, #4]
 654 03ac 9A60     		str	r2, [r3, #8]
 655 03ae 05E0     		b	.L29
 656              	.L30:
 506:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 507:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 508:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 509:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the one bit method by clearing the ONEBITE bit in the CR3 register */
 510:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_ONEBIT);
 657              		.loc 1 510 0
 658 03b0 019B     		ldr	r3, [sp, #4]
 659 03b2 9B68     		ldr	r3, [r3, #8]
 660 03b4 23F40062 		bic	r2, r3, #2048
 661 03b8 019B     		ldr	r3, [sp, #4]
 662 03ba 9A60     		str	r2, [r3, #8]
 663              	.L29:
 511:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 512:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 664              		.loc 1 512 0
 665 03bc 02B0     		add	sp, sp, #8
 666 03be 7047     		bx	lr
 667              		.cfi_endproc
 668              	.LFE119:
 670              		.align	2
 671              		.global	USART_MSBFirstCmd
 672              		.thumb
 673              		.thumb_func
 675              	USART_MSBFirstCmd:
 676              	.LFB120:
 513:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 514:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 515:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's most significant bit first 
 516:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         transmitted/received following the start bit.
 517:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the
 518:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 519:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USART most significant bit first
 520:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         transmitted/received following the start bit.
 521:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 522:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
 523:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   This function has to be called before calling USART_Cmd() function. 
 524:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 525:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 526:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_MSBFirstCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 527:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 677              		.loc 1 527 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 8
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682 03c0 82B0     		sub	sp, sp, #8
 683              	.LCFI11:
 684              		.cfi_def_cfa_offset 8
 685 03c2 0190     		str	r0, [sp, #4]
 686 03c4 0B46     		mov	r3, r1
 687 03c6 8DF80330 		strb	r3, [sp, #3]
 528:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 529:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 530:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 531:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 532:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 688              		.loc 1 532 0
 689 03ca 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 690 03ce 002B     		cmp	r3, #0
 691 03d0 06D0     		beq	.L33
 533:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 534:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the most significant bit first transmitted/received following the
 535:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        start bit by setting the MSBFIRST bit in the CR2 register */
 536:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 |= USART_CR2_MSBFIRST;
 692              		.loc 1 536 0
 693 03d2 019B     		ldr	r3, [sp, #4]
 694 03d4 5B68     		ldr	r3, [r3, #4]
 695 03d6 43F40022 		orr	r2, r3, #524288
 696 03da 019B     		ldr	r3, [sp, #4]
 697 03dc 5A60     		str	r2, [r3, #4]
 698 03de 05E0     		b	.L32
 699              	.L33:
 537:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 538:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 539:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 540:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the most significant bit first transmitted/received following the
 541:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        start bit by clearing the MSBFIRST bit in the CR2 register */
 542:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 &= (uint32_t)~((uint32_t)USART_CR2_MSBFIRST);
 700              		.loc 1 542 0
 701 03e0 019B     		ldr	r3, [sp, #4]
 702 03e2 5B68     		ldr	r3, [r3, #4]
 703 03e4 23F40022 		bic	r2, r3, #524288
 704 03e8 019B     		ldr	r3, [sp, #4]
 705 03ea 5A60     		str	r2, [r3, #4]
 706              	.L32:
 543:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 544:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 707              		.loc 1 544 0
 708 03ec 02B0     		add	sp, sp, #8
 709 03ee 7047     		bx	lr
 710              		.cfi_endproc
 711              	.LFE120:
 713              		.align	2
 714              		.global	USART_DataInvCmd
 715              		.thumb
 716              		.thumb_func
 718              	USART_DataInvCmd:
 719              	.LFB121:
 545:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 546:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 547:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the binary data inversion.
 548:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 549:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 550:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new defined levels for the USART data.
 551:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 552:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   @arg  ENABLE: Logical data from the data register are send/received in negative
 553:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         logic. (1=L, 0=H). The parity bit is also inverted.
 554:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   @arg  DISABLE: Logical data from the data register are send/received in positive
 555:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         logic. (1=H, 0=L) 
 556:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
 557:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   This function has to be called before calling USART_Cmd() function. 
 558:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 559:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 560:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_DataInvCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 561:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 720              		.loc 1 561 0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 8
 723              		@ frame_needed = 0, uses_anonymous_args = 0
 724              		@ link register save eliminated.
 725 03f0 82B0     		sub	sp, sp, #8
 726              	.LCFI12:
 727              		.cfi_def_cfa_offset 8
 728 03f2 0190     		str	r0, [sp, #4]
 729 03f4 0B46     		mov	r3, r1
 730 03f6 8DF80330 		strb	r3, [sp, #3]
 562:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 563:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 564:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 565:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 566:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 731              		.loc 1 566 0
 732 03fa 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 733 03fe 002B     		cmp	r3, #0
 734 0400 06D0     		beq	.L36
 567:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 568:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the binary data inversion feature by setting the DATAINV bit in
 569:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        the CR2 register */
 570:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 |= USART_CR2_DATAINV;
 735              		.loc 1 570 0
 736 0402 019B     		ldr	r3, [sp, #4]
 737 0404 5B68     		ldr	r3, [r3, #4]
 738 0406 43F48022 		orr	r2, r3, #262144
 739 040a 019B     		ldr	r3, [sp, #4]
 740 040c 5A60     		str	r2, [r3, #4]
 741 040e 05E0     		b	.L35
 742              	.L36:
 571:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 572:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 573:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 574:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the binary data inversion feature by clearing the DATAINV bit in
 575:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        the CR2 register */
 576:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 &= (uint32_t)~((uint32_t)USART_CR2_DATAINV);
 743              		.loc 1 576 0
 744 0410 019B     		ldr	r3, [sp, #4]
 745 0412 5B68     		ldr	r3, [r3, #4]
 746 0414 23F48022 		bic	r2, r3, #262144
 747 0418 019B     		ldr	r3, [sp, #4]
 748 041a 5A60     		str	r2, [r3, #4]
 749              	.L35:
 577:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 578:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 750              		.loc 1 578 0
 751 041c 02B0     		add	sp, sp, #8
 752 041e 7047     		bx	lr
 753              		.cfi_endproc
 754              	.LFE121:
 756              		.align	2
 757              		.global	USART_InvPinCmd
 758              		.thumb
 759              		.thumb_func
 761              	USART_InvPinCmd:
 762              	.LFB122:
 579:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 580:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 581:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the Pin(s) active level inversion.
 582:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 583:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 584:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_InvPin: specifies the USART pin(s) to invert.
 585:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be any combination of the following values:
 586:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_InvPin_Tx: USART Tx pin active level inversion.
 587:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_InvPin_Rx: USART Rx pin active level inversion.
 588:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new active level status for the USART pin(s).
 589:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 590:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *          - ENABLE: pin(s) signal values are inverted (Vdd =0, Gnd =1).
 591:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *          - DISABLE: pin(s) signal works using the standard logic levels (Vdd =1, Gnd =0).
 592:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
 593:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   This function has to be called before calling USART_Cmd() function.  
 594:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 595:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 596:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_InvPinCmd(USART_TypeDef* USARTx, uint32_t USART_InvPin, FunctionalState NewState)
 597:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 763              		.loc 1 597 0
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 16
 766              		@ frame_needed = 0, uses_anonymous_args = 0
 767              		@ link register save eliminated.
 768 0420 84B0     		sub	sp, sp, #16
 769              	.LCFI13:
 770              		.cfi_def_cfa_offset 16
 771 0422 0390     		str	r0, [sp, #12]
 772 0424 0291     		str	r1, [sp, #8]
 773 0426 1346     		mov	r3, r2
 774 0428 8DF80730 		strb	r3, [sp, #7]
 598:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 599:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 600:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_INVERSTION_PIN(USART_InvPin));
 601:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState)); 
 602:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 603:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 775              		.loc 1 603 0
 776 042c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 777 0430 002B     		cmp	r3, #0
 778 0432 06D0     		beq	.L39
 604:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 605:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the active level inversion for selected pins by setting the TXINV 
 606:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        and/or RXINV bits in the USART CR2 register */
 607:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 |= USART_InvPin;
 779              		.loc 1 607 0
 780 0434 039B     		ldr	r3, [sp, #12]
 781 0436 5A68     		ldr	r2, [r3, #4]
 782 0438 029B     		ldr	r3, [sp, #8]
 783 043a 1A43     		orrs	r2, r2, r3
 784 043c 039B     		ldr	r3, [sp, #12]
 785 043e 5A60     		str	r2, [r3, #4]
 786 0440 07E0     		b	.L38
 787              	.L39:
 608:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 609:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 610:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 611:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the active level inversion for selected requests by clearing the 
 612:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        TXINV and/or RXINV bits in the USART CR2 register */
 613:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 &= (uint32_t)~USART_InvPin;
 788              		.loc 1 613 0
 789 0442 039B     		ldr	r3, [sp, #12]
 790 0444 5A68     		ldr	r2, [r3, #4]
 791 0446 029B     		ldr	r3, [sp, #8]
 792 0448 6FEA0303 		mvn	r3, r3
 793 044c 1A40     		ands	r2, r2, r3
 794 044e 039B     		ldr	r3, [sp, #12]
 795 0450 5A60     		str	r2, [r3, #4]
 796              	.L38:
 614:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 615:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 797              		.loc 1 615 0
 798 0452 04B0     		add	sp, sp, #16
 799 0454 7047     		bx	lr
 800              		.cfi_endproc
 801              	.LFE122:
 803 0456 00BF     		.align	2
 804              		.global	USART_SWAPPinCmd
 805              		.thumb
 806              		.thumb_func
 808              	USART_SWAPPinCmd:
 809              	.LFB123:
 616:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 617:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 618:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the swap Tx/Rx pins.
 619:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the
 620:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 621:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USARTx TX/RX pins pinout.
 622:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 623:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg ENABLE: The TX and RX pins functions are swapped.
 624:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg DISABLE: TX/RX pins are used as defined in standard pinout
 625:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
 626:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   This function has to be called before calling USART_Cmd() function.
 627:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 628:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 629:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SWAPPinCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 630:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 810              		.loc 1 630 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 8
 813              		@ frame_needed = 0, uses_anonymous_args = 0
 814              		@ link register save eliminated.
 815 0458 82B0     		sub	sp, sp, #8
 816              	.LCFI14:
 817              		.cfi_def_cfa_offset 8
 818 045a 0190     		str	r0, [sp, #4]
 819 045c 0B46     		mov	r3, r1
 820 045e 8DF80330 		strb	r3, [sp, #3]
 631:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 632:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 633:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 634:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 635:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 821              		.loc 1 635 0
 822 0462 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 823 0466 002B     		cmp	r3, #0
 824 0468 06D0     		beq	.L42
 636:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 637:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the SWAP feature by setting the SWAP bit in the CR2 register */
 638:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 |= USART_CR2_SWAP;
 825              		.loc 1 638 0
 826 046a 019B     		ldr	r3, [sp, #4]
 827 046c 5B68     		ldr	r3, [r3, #4]
 828 046e 43F40042 		orr	r2, r3, #32768
 829 0472 019B     		ldr	r3, [sp, #4]
 830 0474 5A60     		str	r2, [r3, #4]
 831 0476 05E0     		b	.L41
 832              	.L42:
 639:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 640:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 641:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 642:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the SWAP feature by clearing the SWAP bit in the CR2 register */
 643:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 &= (uint32_t)~((uint32_t)USART_CR2_SWAP);
 833              		.loc 1 643 0
 834 0478 019B     		ldr	r3, [sp, #4]
 835 047a 5B68     		ldr	r3, [r3, #4]
 836 047c 23F40042 		bic	r2, r3, #32768
 837 0480 019B     		ldr	r3, [sp, #4]
 838 0482 5A60     		str	r2, [r3, #4]
 839              	.L41:
 644:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 645:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 840              		.loc 1 645 0
 841 0484 02B0     		add	sp, sp, #8
 842 0486 7047     		bx	lr
 843              		.cfi_endproc
 844              	.LFE123:
 846              		.align	2
 847              		.global	USART_ReceiverTimeOutCmd
 848              		.thumb
 849              		.thumb_func
 851              	USART_ReceiverTimeOutCmd:
 852              	.LFB124:
 646:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 647:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 648:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the receiver Time Out feature.
 649:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 650:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 651:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USARTx receiver Time Out.
 652:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 653:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 654:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 655:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_ReceiverTimeOutCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 656:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 853              		.loc 1 656 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 8
 856              		@ frame_needed = 0, uses_anonymous_args = 0
 857              		@ link register save eliminated.
 858 0488 82B0     		sub	sp, sp, #8
 859              	.LCFI15:
 860              		.cfi_def_cfa_offset 8
 861 048a 0190     		str	r0, [sp, #4]
 862 048c 0B46     		mov	r3, r1
 863 048e 8DF80330 		strb	r3, [sp, #3]
 657:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 658:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 659:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 660:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 661:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 864              		.loc 1 661 0
 865 0492 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 866 0496 002B     		cmp	r3, #0
 867 0498 06D0     		beq	.L45
 662:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 663:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the receiver time out feature by setting the RTOEN bit in the CR2 
 664:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        register */
 665:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 |= USART_CR2_RTOEN;
 868              		.loc 1 665 0
 869 049a 019B     		ldr	r3, [sp, #4]
 870 049c 5B68     		ldr	r3, [r3, #4]
 871 049e 43F40002 		orr	r2, r3, #8388608
 872 04a2 019B     		ldr	r3, [sp, #4]
 873 04a4 5A60     		str	r2, [r3, #4]
 874 04a6 05E0     		b	.L44
 875              	.L45:
 666:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 667:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 668:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 669:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the receiver time out feature by clearing the RTOEN bit in the CR2 
 670:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        register */
 671:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 &= (uint32_t)~((uint32_t)USART_CR2_RTOEN);
 876              		.loc 1 671 0
 877 04a8 019B     		ldr	r3, [sp, #4]
 878 04aa 5B68     		ldr	r3, [r3, #4]
 879 04ac 23F40002 		bic	r2, r3, #8388608
 880 04b0 019B     		ldr	r3, [sp, #4]
 881 04b2 5A60     		str	r2, [r3, #4]
 882              	.L44:
 672:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 673:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 883              		.loc 1 673 0
 884 04b4 02B0     		add	sp, sp, #8
 885 04b6 7047     		bx	lr
 886              		.cfi_endproc
 887              	.LFE124:
 889              		.align	2
 890              		.global	USART_SetReceiverTimeOut
 891              		.thumb
 892              		.thumb_func
 894              	USART_SetReceiverTimeOut:
 895              	.LFB125:
 674:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 675:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 676:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Sets the receiver Time Out value.
 677:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 678:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 679:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_ReceiverTimeOut: specifies the Receiver Time Out value.
 680:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 681:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 682:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SetReceiverTimeOut(USART_TypeDef* USARTx, uint32_t USART_ReceiverTimeOut)
 683:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {    
 896              		.loc 1 683 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 8
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              		@ link register save eliminated.
 901 04b8 82B0     		sub	sp, sp, #8
 902              	.LCFI16:
 903              		.cfi_def_cfa_offset 8
 904 04ba 0190     		str	r0, [sp, #4]
 905 04bc 0091     		str	r1, [sp, #0]
 684:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 685:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 686:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_TIMEOUT(USART_ReceiverTimeOut));
 687:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 688:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear the receiver Time Out value by clearing the RTO[23:0] bits in the RTOR
 689:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****      register  */
 690:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->RTOR &= (uint32_t)~((uint32_t)USART_RTOR_RTO);
 906              		.loc 1 690 0
 907 04be 019B     		ldr	r3, [sp, #4]
 908 04c0 5B69     		ldr	r3, [r3, #20]
 909 04c2 03F07F42 		and	r2, r3, #-16777216
 910 04c6 019B     		ldr	r3, [sp, #4]
 911 04c8 5A61     		str	r2, [r3, #20]
 691:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the receiver Time Out value by setting the RTO[23:0] bits in the RTOR
 692:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****      register  */
 693:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->RTOR |= USART_ReceiverTimeOut;
 912              		.loc 1 693 0
 913 04ca 019B     		ldr	r3, [sp, #4]
 914 04cc 5A69     		ldr	r2, [r3, #20]
 915 04ce 009B     		ldr	r3, [sp, #0]
 916 04d0 1A43     		orrs	r2, r2, r3
 917 04d2 019B     		ldr	r3, [sp, #4]
 918 04d4 5A61     		str	r2, [r3, #20]
 694:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 919              		.loc 1 694 0
 920 04d6 02B0     		add	sp, sp, #8
 921 04d8 7047     		bx	lr
 922              		.cfi_endproc
 923              	.LFE125:
 925 04da 00BF     		.align	2
 926              		.global	USART_SetPrescaler
 927              		.thumb
 928              		.thumb_func
 930              	USART_SetPrescaler:
 931              	.LFB126:
 695:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 696:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 697:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Sets the system clock prescaler.
 698:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the
 699:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 700:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_Prescaler: specifies the prescaler clock.  
 701:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
 702:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   This function has to be called before calling USART_Cmd() function.  
 703:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 704:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 705:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SetPrescaler(USART_TypeDef* USARTx, uint8_t USART_Prescaler)
 706:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 932              		.loc 1 706 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 8
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936              		@ link register save eliminated.
 937 04dc 82B0     		sub	sp, sp, #8
 938              	.LCFI17:
 939              		.cfi_def_cfa_offset 8
 940 04de 0190     		str	r0, [sp, #4]
 941 04e0 0B46     		mov	r3, r1
 942 04e2 8DF80330 		strb	r3, [sp, #3]
 707:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 708:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 709:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 710:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear the USART prescaler */
 711:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->GTPR &= USART_GTPR_GT;
 943              		.loc 1 711 0
 944 04e6 019B     		ldr	r3, [sp, #4]
 945 04e8 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 946 04ea 9BB2     		uxth	r3, r3
 947 04ec 23F0FF03 		bic	r3, r3, #255
 948 04f0 9AB2     		uxth	r2, r3
 949 04f2 019B     		ldr	r3, [sp, #4]
 950 04f4 1A82     		strh	r2, [r3, #16]	@ movhi
 712:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the USART prescaler */
 713:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->GTPR |= USART_Prescaler;
 951              		.loc 1 713 0
 952 04f6 019B     		ldr	r3, [sp, #4]
 953 04f8 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 954 04fa 9AB2     		uxth	r2, r3
 955 04fc 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 956 0500 9BB2     		uxth	r3, r3
 957 0502 1343     		orrs	r3, r3, r2
 958 0504 9AB2     		uxth	r2, r3
 959 0506 019B     		ldr	r3, [sp, #4]
 960 0508 1A82     		strh	r2, [r3, #16]	@ movhi
 714:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 961              		.loc 1 714 0
 962 050a 02B0     		add	sp, sp, #8
 963 050c 7047     		bx	lr
 964              		.cfi_endproc
 965              	.LFE126:
 967 050e 00BF     		.align	2
 968              		.global	USART_STOPModeCmd
 969              		.thumb
 970              		.thumb_func
 972              	USART_STOPModeCmd:
 973              	.LFB127:
 715:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 716:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 717:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
 718:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 719:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 720:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 721:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group2 STOP Mode functions
 722:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   STOP Mode functions
 723:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
 724:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim
 725:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
 726:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                         ##### STOP Mode functions #####
 727:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
 728:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This subsection provides a set of functions allowing to manage 
 729:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          WakeUp from STOP mode.
 730:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 731:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] The USART is able to WakeUp from Stop Mode if USART clock is set to HSI
 732:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          or LSI.
 733:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          
 734:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] The WakeUp source is configured by calling USART_StopModeWakeUpSourceConfig()
 735:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          function.
 736:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          
 737:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] After configuring the source of WakeUp and before entering in Stop Mode 
 738:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          USART_STOPModeCmd() function should be called to allow USART WakeUp.
 739:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                            
 740:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
 741:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
 742:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 743:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 744:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 745:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the specified USART peripheral in STOP Mode.
 746:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the
 747:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 748:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USARTx peripheral state in stop mode.
 749:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 750:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
 751:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   This function has to be called when USART clock is set to HSI or LSE.
 752:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 753:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 754:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_STOPModeCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 755:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 974              		.loc 1 755 0
 975              		.cfi_startproc
 976              		@ args = 0, pretend = 0, frame = 8
 977              		@ frame_needed = 0, uses_anonymous_args = 0
 978              		@ link register save eliminated.
 979 0510 82B0     		sub	sp, sp, #8
 980              	.LCFI18:
 981              		.cfi_def_cfa_offset 8
 982 0512 0190     		str	r0, [sp, #4]
 983 0514 0B46     		mov	r3, r1
 984 0516 8DF80330 		strb	r3, [sp, #3]
 756:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 757:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 758:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 759:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 760:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 985              		.loc 1 760 0
 986 051a 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 987 051e 002B     		cmp	r3, #0
 988 0520 06D0     		beq	.L50
 761:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 762:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the selected USART in STOP mode by setting the UESM bit in the CR1
 763:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        register */
 764:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR1 |= USART_CR1_UESM;
 989              		.loc 1 764 0
 990 0522 019B     		ldr	r3, [sp, #4]
 991 0524 1B68     		ldr	r3, [r3, #0]
 992 0526 43F00202 		orr	r2, r3, #2
 993 052a 019B     		ldr	r3, [sp, #4]
 994 052c 1A60     		str	r2, [r3, #0]
 995 052e 05E0     		b	.L49
 996              	.L50:
 765:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 766:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 767:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 768:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the selected USART in STOP mode by clearing the UE bit in the CR1
 769:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        register */
 770:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR1 &= (uint32_t)~((uint32_t)USART_CR1_UESM);
 997              		.loc 1 770 0
 998 0530 019B     		ldr	r3, [sp, #4]
 999 0532 1B68     		ldr	r3, [r3, #0]
 1000 0534 23F00202 		bic	r2, r3, #2
 1001 0538 019B     		ldr	r3, [sp, #4]
 1002 053a 1A60     		str	r2, [r3, #0]
 1003              	.L49:
 771:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 772:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1004              		.loc 1 772 0
 1005 053c 02B0     		add	sp, sp, #8
 1006 053e 7047     		bx	lr
 1007              		.cfi_endproc
 1008              	.LFE127:
 1010              		.align	2
 1011              		.global	USART_StopModeWakeUpSourceConfig
 1012              		.thumb
 1013              		.thumb_func
 1015              	USART_StopModeWakeUpSourceConfig:
 1016              	.LFB128:
 773:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 774:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 775:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Selects the USART WakeUp method form stop mode.
 776:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 777:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 778:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_WakeUp: specifies the selected USART wakeup method.
 779:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
 780:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_WakeUpSource_AddressMatch: WUF active on address match.
 781:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_WakeUpSource_StartBit: WUF active on Start bit detection.
 782:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_WakeUpSource_RXNE: WUF active on RXNE.
 783:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
 784:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   This function has to be called before calling USART_Cmd() function.  
 785:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 786:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 787:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_StopModeWakeUpSourceConfig(USART_TypeDef* USARTx, uint32_t USART_WakeUpSource)
 788:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1017              		.loc 1 788 0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 8
 1020              		@ frame_needed = 0, uses_anonymous_args = 0
 1021              		@ link register save eliminated.
 1022 0540 82B0     		sub	sp, sp, #8
 1023              	.LCFI19:
 1024              		.cfi_def_cfa_offset 8
 1025 0542 0190     		str	r0, [sp, #4]
 1026 0544 0091     		str	r1, [sp, #0]
 789:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 790:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 791:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_STOPMODE_WAKEUPSOURCE(USART_WakeUpSource));
 792:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 793:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_WUS);
 1027              		.loc 1 793 0
 1028 0546 019B     		ldr	r3, [sp, #4]
 1029 0548 9B68     		ldr	r3, [r3, #8]
 1030 054a 23F44012 		bic	r2, r3, #3145728
 1031 054e 019B     		ldr	r3, [sp, #4]
 1032 0550 9A60     		str	r2, [r3, #8]
 794:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 |= USART_WakeUpSource;
 1033              		.loc 1 794 0
 1034 0552 019B     		ldr	r3, [sp, #4]
 1035 0554 9A68     		ldr	r2, [r3, #8]
 1036 0556 009B     		ldr	r3, [sp, #0]
 1037 0558 1A43     		orrs	r2, r2, r3
 1038 055a 019B     		ldr	r3, [sp, #4]
 1039 055c 9A60     		str	r2, [r3, #8]
 795:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1040              		.loc 1 795 0
 1041 055e 02B0     		add	sp, sp, #8
 1042 0560 7047     		bx	lr
 1043              		.cfi_endproc
 1044              	.LFE128:
 1046 0562 00BF     		.align	2
 1047              		.global	USART_AutoBaudRateCmd
 1048              		.thumb
 1049              		.thumb_func
 1051              	USART_AutoBaudRateCmd:
 1052              	.LFB129:
 796:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 797:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 798:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
 799:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 800:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 801:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 802:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group3 AutoBaudRate functions
 803:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   AutoBaudRate functions 
 804:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
 805:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim
 806:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
 807:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                        ##### AutoBaudRate functions #####
 808:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
 809:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This subsection provides a set of functions allowing to manage 
 810:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          the AutoBaudRate detections.
 811:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          
 812:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] Before Enabling AutoBaudRate detection using USART_AutoBaudRateCmd ()
 813:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          The character patterns used to calculate baudrate must be chosen by calling 
 814:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          USART_AutoBaudRateConfig() function. These function take as parameter :
 815:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****         (#)USART_AutoBaudRate_StartBit : any character starting with a bit 1.
 816:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****         (#)USART_AutoBaudRate_FallingEdge : any character starting with a 10xx bit pattern. 
 817:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                           
 818:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] At any later time, another request for AutoBaudRate detection can be performed
 819:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          using USART_RequestCmd() function.
 820:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          
 821:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] The AutoBaudRate detection is monitored by the status of ABRF flag which indicate
 822:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          that the AutoBaudRate detection is completed. In addition to ABRF flag, the ABRE flag
 823:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          indicate that this procedure is completed without success. USART_GetFlagStatus () 
 824:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          function should be used to monitor the status of these flags.  
 825:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              
 826:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
 827:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
 828:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 829:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 830:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 831:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the Auto Baud Rate.
 832:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 833:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 834:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USARTx auto baud rate.
 835:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 836:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 837:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 838:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_AutoBaudRateCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 839:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1053              		.loc 1 839 0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 8
 1056              		@ frame_needed = 0, uses_anonymous_args = 0
 1057              		@ link register save eliminated.
 1058 0564 82B0     		sub	sp, sp, #8
 1059              	.LCFI20:
 1060              		.cfi_def_cfa_offset 8
 1061 0566 0190     		str	r0, [sp, #4]
 1062 0568 0B46     		mov	r3, r1
 1063 056a 8DF80330 		strb	r3, [sp, #3]
 840:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 841:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 842:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 843:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 844:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 1064              		.loc 1 844 0
 1065 056e 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 1066 0572 002B     		cmp	r3, #0
 1067 0574 06D0     		beq	.L54
 845:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 846:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the auto baud rate feature by setting the ABREN bit in the CR2 
 847:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        register */
 848:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 |= USART_CR2_ABREN;
 1068              		.loc 1 848 0
 1069 0576 019B     		ldr	r3, [sp, #4]
 1070 0578 5B68     		ldr	r3, [r3, #4]
 1071 057a 43F48012 		orr	r2, r3, #1048576
 1072 057e 019B     		ldr	r3, [sp, #4]
 1073 0580 5A60     		str	r2, [r3, #4]
 1074 0582 05E0     		b	.L53
 1075              	.L54:
 849:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 850:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 851:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 852:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the auto baud rate feature by clearing the ABREN bit in the CR2 
 853:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        register */
 854:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 &= (uint32_t)~((uint32_t)USART_CR2_ABREN);
 1076              		.loc 1 854 0
 1077 0584 019B     		ldr	r3, [sp, #4]
 1078 0586 5B68     		ldr	r3, [r3, #4]
 1079 0588 23F48012 		bic	r2, r3, #1048576
 1080 058c 019B     		ldr	r3, [sp, #4]
 1081 058e 5A60     		str	r2, [r3, #4]
 1082              	.L53:
 855:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 856:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1083              		.loc 1 856 0
 1084 0590 02B0     		add	sp, sp, #8
 1085 0592 7047     		bx	lr
 1086              		.cfi_endproc
 1087              	.LFE129:
 1089              		.align	2
 1090              		.global	USART_AutoBaudRateConfig
 1091              		.thumb
 1092              		.thumb_func
 1094              	USART_AutoBaudRateConfig:
 1095              	.LFB130:
 857:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 858:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 859:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Selects the USART auto baud rate method.
 860:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 861:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 862:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_AutoBaudRate: specifies the selected USART auto baud rate method.
 863:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
 864:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_AutoBaudRate_StartBit: Start Bit duration measurement.
 865:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_AutoBaudRate_FallingEdge: Falling edge to falling edge measurement.
 866:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_AutoBaudRate_0x7FFrame: 0x7F frame.
 867:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_AutoBaudRate_0x55Frame: 0x55 frame.
 868:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
 869:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   This function has to be called before calling USART_Cmd() function. 
 870:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 871:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 872:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_AutoBaudRateConfig(USART_TypeDef* USARTx, uint32_t USART_AutoBaudRate)
 873:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1096              		.loc 1 873 0
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 8
 1099              		@ frame_needed = 0, uses_anonymous_args = 0
 1100              		@ link register save eliminated.
 1101 0594 82B0     		sub	sp, sp, #8
 1102              	.LCFI21:
 1103              		.cfi_def_cfa_offset 8
 1104 0596 0190     		str	r0, [sp, #4]
 1105 0598 0091     		str	r1, [sp, #0]
 874:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 875:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 876:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_AUTOBAUDRATE_MODE(USART_AutoBaudRate));
 877:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 878:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR2 &= (uint32_t)~((uint32_t)USART_CR2_ABRMODE);
 1106              		.loc 1 878 0
 1107 059a 019B     		ldr	r3, [sp, #4]
 1108 059c 5B68     		ldr	r3, [r3, #4]
 1109 059e 23F4C002 		bic	r2, r3, #6291456
 1110 05a2 019B     		ldr	r3, [sp, #4]
 1111 05a4 5A60     		str	r2, [r3, #4]
 879:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR2 |= USART_AutoBaudRate;
 1112              		.loc 1 879 0
 1113 05a6 019B     		ldr	r3, [sp, #4]
 1114 05a8 5A68     		ldr	r2, [r3, #4]
 1115 05aa 009B     		ldr	r3, [sp, #0]
 1116 05ac 1A43     		orrs	r2, r2, r3
 1117 05ae 019B     		ldr	r3, [sp, #4]
 1118 05b0 5A60     		str	r2, [r3, #4]
 880:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1119              		.loc 1 880 0
 1120 05b2 02B0     		add	sp, sp, #8
 1121 05b4 7047     		bx	lr
 1122              		.cfi_endproc
 1123              	.LFE130:
 1125 05b6 00BF     		.align	2
 1126              		.global	USART_SendData
 1127              		.thumb
 1128              		.thumb_func
 1130              	USART_SendData:
 1131              	.LFB131:
 881:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 882:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 883:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
 884:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 885:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 886:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 887:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group4 Data transfers functions
 888:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   Data transfers functions 
 889:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
 890:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim
 891:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
 892:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                     ##### Data transfers functions #####
 893:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
 894:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This subsection provides a set of functions allowing to manage 
 895:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          the USART data transfers.
 896:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] During an USART reception, data shifts in least significant bit first 
 897:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          through the RX pin. When a transmission is taking place, a write instruction to 
 898:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          the USART_TDR register stores the data in the shift register.
 899:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] The read access of the USART_RDR register can be done using 
 900:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          the USART_ReceiveData() function and returns the RDR value.
 901:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          Whereas a write access to the USART_TDR can be done using USART_SendData()
 902:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          function and stores the written data into TDR.
 903:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 904:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
 905:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
 906:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 907:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 908:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 909:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Transmits single data through the USARTx peripheral.
 910:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 911:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 912:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  Data: the data to transmit.
 913:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 914:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 915:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SendData(USART_TypeDef* USARTx, uint16_t Data)
 916:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1132              		.loc 1 916 0
 1133              		.cfi_startproc
 1134              		@ args = 0, pretend = 0, frame = 8
 1135              		@ frame_needed = 0, uses_anonymous_args = 0
 1136              		@ link register save eliminated.
 1137 05b8 82B0     		sub	sp, sp, #8
 1138              	.LCFI22:
 1139              		.cfi_def_cfa_offset 8
 1140 05ba 0190     		str	r0, [sp, #4]
 1141 05bc 0B46     		mov	r3, r1
 1142 05be ADF80230 		strh	r3, [sp, #2]	@ movhi
 917:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 918:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 919:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_DATA(Data)); 
 920:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 921:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Transmit Data */
 922:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->TDR = (Data & (uint16_t)0x01FF);
 1143              		.loc 1 922 0
 1144 05c2 BDF80230 		ldrh	r3, [sp, #2]	@ movhi
 1145 05c6 4FEAC353 		lsl	r3, r3, #23
 1146 05ca 4FEAD353 		lsr	r3, r3, #23
 1147 05ce 9AB2     		uxth	r2, r3
 1148 05d0 019B     		ldr	r3, [sp, #4]
 1149 05d2 1A85     		strh	r2, [r3, #40]	@ movhi
 923:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1150              		.loc 1 923 0
 1151 05d4 02B0     		add	sp, sp, #8
 1152 05d6 7047     		bx	lr
 1153              		.cfi_endproc
 1154              	.LFE131:
 1156              		.align	2
 1157              		.global	USART_ReceiveData
 1158              		.thumb
 1159              		.thumb_func
 1161              	USART_ReceiveData:
 1162              	.LFB132:
 924:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 925:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 926:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Returns the most recent received data by the USARTx peripheral.
 927:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 928:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 929:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval The received data.
 930:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 931:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** uint16_t USART_ReceiveData(USART_TypeDef* USARTx)
 932:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1163              		.loc 1 932 0
 1164              		.cfi_startproc
 1165              		@ args = 0, pretend = 0, frame = 8
 1166              		@ frame_needed = 0, uses_anonymous_args = 0
 1167              		@ link register save eliminated.
 1168 05d8 82B0     		sub	sp, sp, #8
 1169              	.LCFI23:
 1170              		.cfi_def_cfa_offset 8
 1171 05da 0190     		str	r0, [sp, #4]
 933:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 934:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 935:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 936:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Receive Data */
 937:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   return (uint16_t)(USARTx->RDR & (uint16_t)0x01FF);
 1172              		.loc 1 937 0
 1173 05dc 019B     		ldr	r3, [sp, #4]
 1174 05de 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 1175 05e0 9BB2     		uxth	r3, r3
 1176 05e2 4FEAC353 		lsl	r3, r3, #23
 1177 05e6 4FEAD353 		lsr	r3, r3, #23
 1178 05ea 9BB2     		uxth	r3, r3
 938:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1179              		.loc 1 938 0
 1180 05ec 1846     		mov	r0, r3
 1181 05ee 02B0     		add	sp, sp, #8
 1182 05f0 7047     		bx	lr
 1183              		.cfi_endproc
 1184              	.LFE132:
 1186 05f2 00BF     		.align	2
 1187              		.global	USART_SetAddress
 1188              		.thumb
 1189              		.thumb_func
 1191              	USART_SetAddress:
 1192              	.LFB133:
 939:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 940:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 941:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
 942:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 943:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 944:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group5 MultiProcessor Communication functions
 945:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   Multi-Processor Communication functions 
 946:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
 947:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim   
 948:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
 949:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              ##### Multi-Processor Communication functions #####
 950:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
 951:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This subsection provides a set of functions allowing to manage the USART
 952:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          multiprocessor communication.
 953:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] For instance one of the USARTs can be the master, its TX output is
 954:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          connected to the RX input of the other USART. The others are slaves,
 955:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          their respective TX outputs are logically ANDed together and connected 
 956:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          to the RX input of the master. USART multiprocessor communication is 
 957:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          possible through the following procedure:
 958:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Program the Baud rate, Word length = 9 bits, Stop bits, Parity, 
 959:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              Mode transmitter or Mode receiver and hardware flow control values 
 960:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              using the USART_Init() function.
 961:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Configures the USART address using the USART_SetAddress() function.
 962:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Configures the wake up methode (USART_WakeUp_IdleLine or 
 963:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              USART_WakeUp_AddressMark) using USART_WakeUpConfig() function only 
 964:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              for the slaves.
 965:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the USART using the USART_Cmd() function.
 966:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enter the USART slaves in mute mode using USART_ReceiverWakeUpCmd() 
 967:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              function.
 968:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] The USART Slave exit from mute mode when receive the wake up condition.
 969:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 970:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
 971:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
 972:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 973:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 974:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 975:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Sets the address of the USART node.
 976:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 977:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 978:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_Address: Indicates the address of the USART node.
 979:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 980:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 981:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SetAddress(USART_TypeDef* USARTx, uint8_t USART_Address)
 982:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1193              		.loc 1 982 0
 1194              		.cfi_startproc
 1195              		@ args = 0, pretend = 0, frame = 8
 1196              		@ frame_needed = 0, uses_anonymous_args = 0
 1197              		@ link register save eliminated.
 1198 05f4 82B0     		sub	sp, sp, #8
 1199              	.LCFI24:
 1200              		.cfi_def_cfa_offset 8
 1201 05f6 0190     		str	r0, [sp, #4]
 1202 05f8 0B46     		mov	r3, r1
 1203 05fa 8DF80330 		strb	r3, [sp, #3]
 983:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 984:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 985:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 986:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear the USART address */
 987:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR2 &= (uint32_t)~((uint32_t)USART_CR2_ADD);
 1204              		.loc 1 987 0
 1205 05fe 019B     		ldr	r3, [sp, #4]
 1206 0600 5B68     		ldr	r3, [r3, #4]
 1207 0602 23F07F42 		bic	r2, r3, #-16777216
 1208 0606 019B     		ldr	r3, [sp, #4]
 1209 0608 5A60     		str	r2, [r3, #4]
 988:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the USART address node */
 989:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR2 |=((uint32_t)USART_Address << (uint32_t)0x18);
 1210              		.loc 1 989 0
 1211 060a 019B     		ldr	r3, [sp, #4]
 1212 060c 5A68     		ldr	r2, [r3, #4]
 1213 060e 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 1214 0612 4FEA0363 		lsl	r3, r3, #24
 1215 0616 1A43     		orrs	r2, r2, r3
 1216 0618 019B     		ldr	r3, [sp, #4]
 1217 061a 5A60     		str	r2, [r3, #4]
 990:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1218              		.loc 1 990 0
 1219 061c 02B0     		add	sp, sp, #8
 1220 061e 7047     		bx	lr
 1221              		.cfi_endproc
 1222              	.LFE133:
 1224              		.align	2
 1225              		.global	USART_MuteModeCmd
 1226              		.thumb
 1227              		.thumb_func
 1229              	USART_MuteModeCmd:
 1230              	.LFB134:
 991:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 992:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 993:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's mute mode.
 994:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 995:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 996:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USART mute mode.
 997:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 998:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 999:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1000:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_MuteModeCmd(USART_TypeDef* USARTx, FunctionalState NewState)
1001:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1231              		.loc 1 1001 0
 1232              		.cfi_startproc
 1233              		@ args = 0, pretend = 0, frame = 8
 1234              		@ frame_needed = 0, uses_anonymous_args = 0
 1235              		@ link register save eliminated.
 1236 0620 82B0     		sub	sp, sp, #8
 1237              	.LCFI25:
 1238              		.cfi_def_cfa_offset 8
 1239 0622 0190     		str	r0, [sp, #4]
 1240 0624 0B46     		mov	r3, r1
 1241 0626 8DF80330 		strb	r3, [sp, #3]
1002:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1003:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1004:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState)); 
1005:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1006:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 1242              		.loc 1 1006 0
 1243 062a 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 1244 062e 002B     		cmp	r3, #0
 1245 0630 06D0     		beq	.L61
1007:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1008:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the USART mute mode by setting the MME bit in the CR1 register */
1009:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR1 |= USART_CR1_MME;
 1246              		.loc 1 1009 0
 1247 0632 019B     		ldr	r3, [sp, #4]
 1248 0634 1B68     		ldr	r3, [r3, #0]
 1249 0636 43F40052 		orr	r2, r3, #8192
 1250 063a 019B     		ldr	r3, [sp, #4]
 1251 063c 1A60     		str	r2, [r3, #0]
 1252 063e 05E0     		b	.L60
 1253              	.L61:
1010:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1011:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1012:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1013:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the USART mute mode by clearing the MME bit in the CR1 register */
1014:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR1 &= (uint32_t)~((uint32_t)USART_CR1_MME);
 1254              		.loc 1 1014 0
 1255 0640 019B     		ldr	r3, [sp, #4]
 1256 0642 1B68     		ldr	r3, [r3, #0]
 1257 0644 23F40052 		bic	r2, r3, #8192
 1258 0648 019B     		ldr	r3, [sp, #4]
 1259 064a 1A60     		str	r2, [r3, #0]
 1260              	.L60:
1015:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1016:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1261              		.loc 1 1016 0
 1262 064c 02B0     		add	sp, sp, #8
 1263 064e 7047     		bx	lr
 1264              		.cfi_endproc
 1265              	.LFE134:
 1267              		.align	2
 1268              		.global	USART_MuteModeWakeUpConfig
 1269              		.thumb
 1270              		.thumb_func
 1272              	USART_MuteModeWakeUpConfig:
 1273              	.LFB135:
1017:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1018:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1019:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Selects the USART WakeUp method from mute mode.
1020:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1021:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1022:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_WakeUp: specifies the USART wakeup method.
1023:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
1024:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_WakeUp_IdleLine: WakeUp by an idle line detection
1025:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_WakeUp_AddressMark: WakeUp by an address mark
1026:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1027:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1028:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_MuteModeWakeUpConfig(USART_TypeDef* USARTx, uint32_t USART_WakeUp)
1029:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1274              		.loc 1 1029 0
 1275              		.cfi_startproc
 1276              		@ args = 0, pretend = 0, frame = 8
 1277              		@ frame_needed = 0, uses_anonymous_args = 0
 1278              		@ link register save eliminated.
 1279 0650 82B0     		sub	sp, sp, #8
 1280              	.LCFI26:
 1281              		.cfi_def_cfa_offset 8
 1282 0652 0190     		str	r0, [sp, #4]
 1283 0654 0091     		str	r1, [sp, #0]
1030:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1031:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1032:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_MUTEMODE_WAKEUP(USART_WakeUp));
1033:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1034:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR1 &= (uint32_t)~((uint32_t)USART_CR1_WAKE);
 1284              		.loc 1 1034 0
 1285 0656 019B     		ldr	r3, [sp, #4]
 1286 0658 1B68     		ldr	r3, [r3, #0]
 1287 065a 23F40062 		bic	r2, r3, #2048
 1288 065e 019B     		ldr	r3, [sp, #4]
 1289 0660 1A60     		str	r2, [r3, #0]
1035:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR1 |= USART_WakeUp;
 1290              		.loc 1 1035 0
 1291 0662 019B     		ldr	r3, [sp, #4]
 1292 0664 1A68     		ldr	r2, [r3, #0]
 1293 0666 009B     		ldr	r3, [sp, #0]
 1294 0668 1A43     		orrs	r2, r2, r3
 1295 066a 019B     		ldr	r3, [sp, #4]
 1296 066c 1A60     		str	r2, [r3, #0]
1036:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1297              		.loc 1 1036 0
 1298 066e 02B0     		add	sp, sp, #8
 1299 0670 7047     		bx	lr
 1300              		.cfi_endproc
 1301              	.LFE135:
 1303 0672 00BF     		.align	2
 1304              		.global	USART_AddressDetectionConfig
 1305              		.thumb
 1306              		.thumb_func
 1308              	USART_AddressDetectionConfig:
 1309              	.LFB136:
1037:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1038:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1039:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Configure the the USART Address detection length.
1040:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1041:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1042:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_AddressLength: specifies the USART address length detection.
1043:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
1044:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_AddressLength_4b: 4-bit address length detection 
1045:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_AddressLength_7b: 7-bit address length detection 
1046:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1047:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1048:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_AddressDetectionConfig(USART_TypeDef* USARTx, uint32_t USART_AddressLength)
1049:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1310              		.loc 1 1049 0
 1311              		.cfi_startproc
 1312              		@ args = 0, pretend = 0, frame = 8
 1313              		@ frame_needed = 0, uses_anonymous_args = 0
 1314              		@ link register save eliminated.
 1315 0674 82B0     		sub	sp, sp, #8
 1316              	.LCFI27:
 1317              		.cfi_def_cfa_offset 8
 1318 0676 0190     		str	r0, [sp, #4]
 1319 0678 0091     		str	r1, [sp, #0]
1050:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1051:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1052:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ADDRESS_DETECTION(USART_AddressLength));
1053:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1054:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR2 &= (uint32_t)~((uint32_t)USART_CR2_ADDM7);
 1320              		.loc 1 1054 0
 1321 067a 019B     		ldr	r3, [sp, #4]
 1322 067c 5B68     		ldr	r3, [r3, #4]
 1323 067e 23F01002 		bic	r2, r3, #16
 1324 0682 019B     		ldr	r3, [sp, #4]
 1325 0684 5A60     		str	r2, [r3, #4]
1055:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR2 |= USART_AddressLength;
 1326              		.loc 1 1055 0
 1327 0686 019B     		ldr	r3, [sp, #4]
 1328 0688 5A68     		ldr	r2, [r3, #4]
 1329 068a 009B     		ldr	r3, [sp, #0]
 1330 068c 1A43     		orrs	r2, r2, r3
 1331 068e 019B     		ldr	r3, [sp, #4]
 1332 0690 5A60     		str	r2, [r3, #4]
1056:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1333              		.loc 1 1056 0
 1334 0692 02B0     		add	sp, sp, #8
 1335 0694 7047     		bx	lr
 1336              		.cfi_endproc
 1337              	.LFE136:
 1339 0696 00BF     		.align	2
 1340              		.global	USART_LINBreakDetectLengthConfig
 1341              		.thumb
 1342              		.thumb_func
 1344              	USART_LINBreakDetectLengthConfig:
 1345              	.LFB137:
1057:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1058:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1059:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
1060:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1061:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1062:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group6 LIN mode functions
1063:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   LIN mode functions 
1064:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
1065:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim   
1066:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1067:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                        ##### LIN mode functions #####
1068:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1069:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This subsection provides a set of functions allowing to manage the USART 
1070:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          LIN Mode communication.
1071:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] In LIN mode, 8-bit data format with 1 stop bit is required in accordance 
1072:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          with the LIN standard.
1073:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] Only this LIN Feature is supported by the USART IP:
1074:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (+) LIN Master Synchronous Break send capability and LIN slave break 
1075:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              detection capability :  13-bit break generation and 10/11 bit break 
1076:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              detection.
1077:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] USART LIN Master transmitter communication is possible through the 
1078:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          following procedure:
1079:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Program the Baud rate, Word length = 8bits, Stop bits = 1bit, Parity, 
1080:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              Mode transmitter or Mode receiver and hardware flow control values 
1081:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              using the USART_Init() function.
1082:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the LIN mode using the USART_LINCmd() function.
1083:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the USART using the USART_Cmd() function.
1084:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Send the break character using USART_SendBreak() function.
1085:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] USART LIN Master receiver communication is possible through the 
1086:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          following procedure:
1087:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Program the Baud rate, Word length = 8bits, Stop bits = 1bit, Parity, 
1088:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              Mode transmitter or Mode receiver and hardware flow control values 
1089:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              using the USART_Init() function.
1090:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Configures the break detection length 
1091:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              using the USART_LINBreakDetectLengthConfig() function.
1092:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the LIN mode using the USART_LINCmd() function.
1093:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the USART using the USART_Cmd() function.
1094:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          [..]
1095:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (@) In LIN mode, the following bits must be kept cleared:
1096:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (+@) CLKEN in the USART_CR2 register.
1097:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (+@) STOP[1:0], SCEN, HDSEL and IREN in the USART_CR3 register.
1098:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1099:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
1100:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
1101:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1102:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1103:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1104:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Sets the USART LIN Break detection length.
1105:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1106:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1107:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_LINBreakDetectLength: specifies the LIN break detection length.
1108:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
1109:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_LINBreakDetectLength_10b: 10-bit break detection
1110:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_LINBreakDetectLength_11b: 11-bit break detection
1111:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1112:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1113:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_LINBreakDetectLengthConfig(USART_TypeDef* USARTx, uint32_t USART_LINBreakDetectLength)
1114:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1346              		.loc 1 1114 0
 1347              		.cfi_startproc
 1348              		@ args = 0, pretend = 0, frame = 8
 1349              		@ frame_needed = 0, uses_anonymous_args = 0
 1350              		@ link register save eliminated.
 1351 0698 82B0     		sub	sp, sp, #8
 1352              	.LCFI28:
 1353              		.cfi_def_cfa_offset 8
 1354 069a 0190     		str	r0, [sp, #4]
 1355 069c 0091     		str	r1, [sp, #0]
1115:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1116:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1117:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_LIN_BREAK_DETECT_LENGTH(USART_LINBreakDetectLength));
1118:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1119:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR2 &= (uint32_t)~((uint32_t)USART_CR2_LBDL);
 1356              		.loc 1 1119 0
 1357 069e 019B     		ldr	r3, [sp, #4]
 1358 06a0 5B68     		ldr	r3, [r3, #4]
 1359 06a2 23F02002 		bic	r2, r3, #32
 1360 06a6 019B     		ldr	r3, [sp, #4]
 1361 06a8 5A60     		str	r2, [r3, #4]
1120:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR2 |= USART_LINBreakDetectLength;  
 1362              		.loc 1 1120 0
 1363 06aa 019B     		ldr	r3, [sp, #4]
 1364 06ac 5A68     		ldr	r2, [r3, #4]
 1365 06ae 009B     		ldr	r3, [sp, #0]
 1366 06b0 1A43     		orrs	r2, r2, r3
 1367 06b2 019B     		ldr	r3, [sp, #4]
 1368 06b4 5A60     		str	r2, [r3, #4]
1121:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1369              		.loc 1 1121 0
 1370 06b6 02B0     		add	sp, sp, #8
 1371 06b8 7047     		bx	lr
 1372              		.cfi_endproc
 1373              	.LFE137:
 1375 06ba 00BF     		.align	2
 1376              		.global	USART_LINCmd
 1377              		.thumb
 1378              		.thumb_func
 1380              	USART_LINCmd:
 1381              	.LFB138:
1122:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1123:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1124:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's LIN mode.
1125:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1126:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1127:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USART LIN mode.
1128:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
1129:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1130:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1131:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_LINCmd(USART_TypeDef* USARTx, FunctionalState NewState)
1132:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1382              		.loc 1 1132 0
 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 8
 1385              		@ frame_needed = 0, uses_anonymous_args = 0
 1386              		@ link register save eliminated.
 1387 06bc 82B0     		sub	sp, sp, #8
 1388              	.LCFI29:
 1389              		.cfi_def_cfa_offset 8
 1390 06be 0190     		str	r0, [sp, #4]
 1391 06c0 0B46     		mov	r3, r1
 1392 06c2 8DF80330 		strb	r3, [sp, #3]
1133:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1134:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1135:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1136:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1137:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 1393              		.loc 1 1137 0
 1394 06c6 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 1395 06ca 002B     		cmp	r3, #0
 1396 06cc 06D0     		beq	.L67
1138:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1139:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
1140:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 |= USART_CR2_LINEN;
 1397              		.loc 1 1140 0
 1398 06ce 019B     		ldr	r3, [sp, #4]
 1399 06d0 5B68     		ldr	r3, [r3, #4]
 1400 06d2 43F48042 		orr	r2, r3, #16384
 1401 06d6 019B     		ldr	r3, [sp, #4]
 1402 06d8 5A60     		str	r2, [r3, #4]
 1403 06da 05E0     		b	.L66
 1404              	.L67:
1141:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1142:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1143:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1144:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the LIN mode by clearing the LINEN bit in the CR2 register */
1145:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 &= (uint32_t)~((uint32_t)USART_CR2_LINEN);
 1405              		.loc 1 1145 0
 1406 06dc 019B     		ldr	r3, [sp, #4]
 1407 06de 5B68     		ldr	r3, [r3, #4]
 1408 06e0 23F48042 		bic	r2, r3, #16384
 1409 06e4 019B     		ldr	r3, [sp, #4]
 1410 06e6 5A60     		str	r2, [r3, #4]
 1411              	.L66:
1146:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1147:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1412              		.loc 1 1147 0
 1413 06e8 02B0     		add	sp, sp, #8
 1414 06ea 7047     		bx	lr
 1415              		.cfi_endproc
 1416              	.LFE138:
 1418              		.align	2
 1419              		.global	USART_HalfDuplexCmd
 1420              		.thumb
 1421              		.thumb_func
 1423              	USART_HalfDuplexCmd:
 1424              	.LFB139:
1148:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1149:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1150:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
1151:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1152:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1153:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group7 Halfduplex mode function
1154:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   Half-duplex mode function 
1155:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
1156:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim   
1157:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1158:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                    ##### Half-duplex mode function #####
1159:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1160:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This subsection provides a set of functions allowing to manage the USART
1161:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          Half-duplex communication.
1162:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] The USART can be configured to follow a single-wire half-duplex protocol 
1163:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          where the TX and RX lines are internally connected.
1164:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] USART Half duplex communication is possible through the following procedure:
1165:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Program the Baud rate, Word length, Stop bits, Parity, Mode transmitter 
1166:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              or Mode receiver and hardware flow control values using the USART_Init()
1167:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             function.
1168:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Configures the USART address using the USART_SetAddress() function.
1169:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the half duplex mode using USART_HalfDuplexCmd() function.
1170:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the USART using the USART_Cmd() function.
1171:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          [..]
1172:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (@) The RX pin is no longer used.
1173:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (@) In Half-duplex mode the following bits must be kept cleared:
1174:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (+@) LINEN and CLKEN bits in the USART_CR2 register.
1175:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (+@) SCEN and IREN bits in the USART_CR3 register.
1176:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1177:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
1178:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
1179:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1180:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1181:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1182:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's Half Duplex communication.
1183:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1184:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1185:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USART Communication.
1186:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
1187:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1188:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1189:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_HalfDuplexCmd(USART_TypeDef* USARTx, FunctionalState NewState)
1190:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1425              		.loc 1 1190 0
 1426              		.cfi_startproc
 1427              		@ args = 0, pretend = 0, frame = 8
 1428              		@ frame_needed = 0, uses_anonymous_args = 0
 1429              		@ link register save eliminated.
 1430 06ec 82B0     		sub	sp, sp, #8
 1431              	.LCFI30:
 1432              		.cfi_def_cfa_offset 8
 1433 06ee 0190     		str	r0, [sp, #4]
 1434 06f0 0B46     		mov	r3, r1
 1435 06f2 8DF80330 		strb	r3, [sp, #3]
1191:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1192:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1193:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1194:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
1195:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 1436              		.loc 1 1195 0
 1437 06f6 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 1438 06fa 002B     		cmp	r3, #0
 1439 06fc 06D0     		beq	.L70
1196:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1197:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
1198:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 |= USART_CR3_HDSEL;
 1440              		.loc 1 1198 0
 1441 06fe 019B     		ldr	r3, [sp, #4]
 1442 0700 9B68     		ldr	r3, [r3, #8]
 1443 0702 43F00802 		orr	r2, r3, #8
 1444 0706 019B     		ldr	r3, [sp, #4]
 1445 0708 9A60     		str	r2, [r3, #8]
 1446 070a 05E0     		b	.L69
 1447              	.L70:
1199:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1200:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1201:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1202:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the Half-Duplex mode by clearing the HDSEL bit in the CR3 register */
1203:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_HDSEL);
 1448              		.loc 1 1203 0
 1449 070c 019B     		ldr	r3, [sp, #4]
 1450 070e 9B68     		ldr	r3, [r3, #8]
 1451 0710 23F00802 		bic	r2, r3, #8
 1452 0714 019B     		ldr	r3, [sp, #4]
 1453 0716 9A60     		str	r2, [r3, #8]
 1454              	.L69:
1204:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1205:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1455              		.loc 1 1205 0
 1456 0718 02B0     		add	sp, sp, #8
 1457 071a 7047     		bx	lr
 1458              		.cfi_endproc
 1459              	.LFE139:
 1461              		.align	2
 1462              		.global	USART_SetGuardTime
 1463              		.thumb
 1464              		.thumb_func
 1466              	USART_SetGuardTime:
 1467              	.LFB140:
1206:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1207:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1208:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
1209:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1210:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1211:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1212:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group8 Smartcard mode functions
1213:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   Smartcard mode functions 
1214:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
1215:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim   
1216:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1217:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                      ##### Smartcard mode functions #####
1218:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1219:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This subsection provides a set of functions allowing to manage the USART
1220:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          Smartcard communication.
1221:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] The Smartcard interface is designed to support asynchronous protocol 
1222:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          Smartcards as defined in the ISO 7816-3 standard. The USART can provide 
1223:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          a clock to the smartcard through the SCLK output. In smartcard mode, 
1224:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          SCLK is not associated to the communication but is simply derived from 
1225:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          the internal peripheral input clock through a 5-bit prescaler.
1226:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] Smartcard communication is possible through the following procedure:
1227:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Configures the Smartcard Prsecaler using the USART_SetPrescaler() 
1228:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              function.
1229:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Configures the Smartcard Guard Time using the USART_SetGuardTime() 
1230:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              function.
1231:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Program the USART clock using the USART_ClockInit() function as following:
1232:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (++) USART Clock enabled.
1233:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (++) USART CPOL Low.
1234:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (++) USART CPHA on first edge.
1235:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (++) USART Last Bit Clock Enabled.
1236:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Program the Smartcard interface using the USART_Init() function as 
1237:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              following:
1238:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (++) Word Length = 9 Bits.
1239:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (++) 1.5 Stop Bit.
1240:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (++) Even parity.
1241:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (++) BaudRate = 12096 baud.
1242:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (++) Hardware flow control disabled (RTS and CTS signals).
1243:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (++) Tx and Rx enabled
1244:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Optionally you can enable the parity error interrupt using 
1245:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              the USART_ITConfig() function.
1246:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the Smartcard NACK using the USART_SmartCardNACKCmd() function.
1247:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the Smartcard interface using the USART_SmartCardCmd() function.
1248:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the USART using the USART_Cmd() function.
1249:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] 
1250:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   Please refer to the ISO 7816-3 specification for more details.
1251:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] 
1252:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (@) It is also possible to choose 0.5 stop bit for receiving but it is 
1253:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              recommended to use 1.5 stop bits for both transmitting and receiving 
1254:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              to avoid switching between the two configurations.
1255:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (@) In smartcard mode, the following bits must be kept cleared:
1256:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (+@) LINEN bit in the USART_CR2 register.
1257:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (+@) HDSEL and IREN bits in the USART_CR3 register.
1258:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1259:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
1260:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
1261:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1262:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1263:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1264:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Sets the specified USART guard time.
1265:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1266:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3.
1267:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_GuardTime: specifies the guard time.
1268:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1269:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1270:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SetGuardTime(USART_TypeDef* USARTx, uint8_t USART_GuardTime)
1271:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {    
 1468              		.loc 1 1271 0
 1469              		.cfi_startproc
 1470              		@ args = 0, pretend = 0, frame = 8
 1471              		@ frame_needed = 0, uses_anonymous_args = 0
 1472              		@ link register save eliminated.
 1473 071c 82B0     		sub	sp, sp, #8
 1474              	.LCFI31:
 1475              		.cfi_def_cfa_offset 8
 1476 071e 0190     		str	r0, [sp, #4]
 1477 0720 0B46     		mov	r3, r1
 1478 0722 8DF80330 		strb	r3, [sp, #3]
1272:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1273:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_123_PERIPH(USARTx));
1274:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1275:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear the USART Guard time */
1276:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->GTPR &= USART_GTPR_PSC;
 1479              		.loc 1 1276 0
 1480 0726 019B     		ldr	r3, [sp, #4]
 1481 0728 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1482 072a 9BB2     		uxth	r3, r3
 1483 072c DBB2     		uxtb	r3, r3
 1484 072e 9AB2     		uxth	r2, r3
 1485 0730 019B     		ldr	r3, [sp, #4]
 1486 0732 1A82     		strh	r2, [r3, #16]	@ movhi
1277:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the USART guard time */
1278:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->GTPR |= (uint16_t)((uint16_t)USART_GuardTime << 0x08);
 1487              		.loc 1 1278 0
 1488 0734 019B     		ldr	r3, [sp, #4]
 1489 0736 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1490 0738 9AB2     		uxth	r2, r3
 1491 073a 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 1492 073e 9BB2     		uxth	r3, r3
 1493 0740 4FEA0323 		lsl	r3, r3, #8
 1494 0744 9BB2     		uxth	r3, r3
 1495 0746 1343     		orrs	r3, r3, r2
 1496 0748 9AB2     		uxth	r2, r3
 1497 074a 019B     		ldr	r3, [sp, #4]
 1498 074c 1A82     		strh	r2, [r3, #16]	@ movhi
1279:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1499              		.loc 1 1279 0
 1500 074e 02B0     		add	sp, sp, #8
 1501 0750 7047     		bx	lr
 1502              		.cfi_endproc
 1503              	.LFE140:
 1505 0752 00BF     		.align	2
 1506              		.global	USART_SmartCardCmd
 1507              		.thumb
 1508              		.thumb_func
 1510              	USART_SmartCardCmd:
 1511              	.LFB141:
1280:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1281:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1282:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's Smart Card mode.
1283:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1284:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3.
1285:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the Smart Card mode.
1286:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.      
1287:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1288:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1289:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SmartCardCmd(USART_TypeDef* USARTx, FunctionalState NewState)
1290:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1512              		.loc 1 1290 0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 8
 1515              		@ frame_needed = 0, uses_anonymous_args = 0
 1516              		@ link register save eliminated.
 1517 0754 82B0     		sub	sp, sp, #8
 1518              	.LCFI32:
 1519              		.cfi_def_cfa_offset 8
 1520 0756 0190     		str	r0, [sp, #4]
 1521 0758 0B46     		mov	r3, r1
 1522 075a 8DF80330 		strb	r3, [sp, #3]
1291:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1292:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_123_PERIPH(USARTx));
1293:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1294:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 1523              		.loc 1 1294 0
 1524 075e 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 1525 0762 002B     		cmp	r3, #0
 1526 0764 06D0     		beq	.L74
1295:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1296:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the SC mode by setting the SCEN bit in the CR3 register */
1297:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 |= USART_CR3_SCEN;
 1527              		.loc 1 1297 0
 1528 0766 019B     		ldr	r3, [sp, #4]
 1529 0768 9B68     		ldr	r3, [r3, #8]
 1530 076a 43F02002 		orr	r2, r3, #32
 1531 076e 019B     		ldr	r3, [sp, #4]
 1532 0770 9A60     		str	r2, [r3, #8]
 1533 0772 05E0     		b	.L73
 1534              	.L74:
1298:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1299:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1300:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1301:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the SC mode by clearing the SCEN bit in the CR3 register */
1302:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_SCEN);
 1535              		.loc 1 1302 0
 1536 0774 019B     		ldr	r3, [sp, #4]
 1537 0776 9B68     		ldr	r3, [r3, #8]
 1538 0778 23F02002 		bic	r2, r3, #32
 1539 077c 019B     		ldr	r3, [sp, #4]
 1540 077e 9A60     		str	r2, [r3, #8]
 1541              	.L73:
1303:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1304:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1542              		.loc 1 1304 0
 1543 0780 02B0     		add	sp, sp, #8
 1544 0782 7047     		bx	lr
 1545              		.cfi_endproc
 1546              	.LFE141:
 1548              		.align	2
 1549              		.global	USART_SmartCardNACKCmd
 1550              		.thumb
 1551              		.thumb_func
 1553              	USART_SmartCardNACKCmd:
 1554              	.LFB142:
1305:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1306:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1307:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables NACK transmission.
1308:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1309:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3.
1310:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the NACK transmission.
1311:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.  
1312:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1313:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1314:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SmartCardNACKCmd(USART_TypeDef* USARTx, FunctionalState NewState)
1315:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1555              		.loc 1 1315 0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 8
 1558              		@ frame_needed = 0, uses_anonymous_args = 0
 1559              		@ link register save eliminated.
 1560 0784 82B0     		sub	sp, sp, #8
 1561              	.LCFI33:
 1562              		.cfi_def_cfa_offset 8
 1563 0786 0190     		str	r0, [sp, #4]
 1564 0788 0B46     		mov	r3, r1
 1565 078a 8DF80330 		strb	r3, [sp, #3]
1316:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1317:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_123_PERIPH(USARTx)); 
1318:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1319:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 1566              		.loc 1 1319 0
 1567 078e 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 1568 0792 002B     		cmp	r3, #0
 1569 0794 06D0     		beq	.L77
1320:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1321:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the NACK transmission by setting the NACK bit in the CR3 register */
1322:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 |= USART_CR3_NACK;
 1570              		.loc 1 1322 0
 1571 0796 019B     		ldr	r3, [sp, #4]
 1572 0798 9B68     		ldr	r3, [r3, #8]
 1573 079a 43F01002 		orr	r2, r3, #16
 1574 079e 019B     		ldr	r3, [sp, #4]
 1575 07a0 9A60     		str	r2, [r3, #8]
 1576 07a2 05E0     		b	.L76
 1577              	.L77:
1323:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1324:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1325:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1326:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the NACK transmission by clearing the NACK bit in the CR3 register */
1327:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_NACK);
 1578              		.loc 1 1327 0
 1579 07a4 019B     		ldr	r3, [sp, #4]
 1580 07a6 9B68     		ldr	r3, [r3, #8]
 1581 07a8 23F01002 		bic	r2, r3, #16
 1582 07ac 019B     		ldr	r3, [sp, #4]
 1583 07ae 9A60     		str	r2, [r3, #8]
 1584              	.L76:
1328:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1329:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1585              		.loc 1 1329 0
 1586 07b0 02B0     		add	sp, sp, #8
 1587 07b2 7047     		bx	lr
 1588              		.cfi_endproc
 1589              	.LFE142:
 1591              		.align	2
 1592              		.global	USART_SetAutoRetryCount
 1593              		.thumb
 1594              		.thumb_func
 1596              	USART_SetAutoRetryCount:
 1597              	.LFB143:
1330:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1331:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1332:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Sets the Smart Card number of retries in transmit and receive.
1333:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1334:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3.
1335:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_AutoCount: specifies the Smart Card auto retry count.
1336:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1337:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1338:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SetAutoRetryCount(USART_TypeDef* USARTx, uint8_t USART_AutoCount)
1339:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {    
 1598              		.loc 1 1339 0
 1599              		.cfi_startproc
 1600              		@ args = 0, pretend = 0, frame = 8
 1601              		@ frame_needed = 0, uses_anonymous_args = 0
 1602              		@ link register save eliminated.
 1603 07b4 82B0     		sub	sp, sp, #8
 1604              	.LCFI34:
 1605              		.cfi_def_cfa_offset 8
 1606 07b6 0190     		str	r0, [sp, #4]
 1607 07b8 0B46     		mov	r3, r1
 1608 07ba 8DF80330 		strb	r3, [sp, #3]
1340:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1341:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_123_PERIPH(USARTx));
1342:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_AUTO_RETRY_COUNTER(USART_AutoCount));
1343:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear the USART auto retry count */
1344:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_SCARCNT);
 1609              		.loc 1 1344 0
 1610 07be 019B     		ldr	r3, [sp, #4]
 1611 07c0 9B68     		ldr	r3, [r3, #8]
 1612 07c2 23F46022 		bic	r2, r3, #917504
 1613 07c6 019B     		ldr	r3, [sp, #4]
 1614 07c8 9A60     		str	r2, [r3, #8]
1345:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the USART auto retry count*/
1346:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 |= (uint32_t)((uint32_t)USART_AutoCount << 0x11);
 1615              		.loc 1 1346 0
 1616 07ca 019B     		ldr	r3, [sp, #4]
 1617 07cc 9A68     		ldr	r2, [r3, #8]
 1618 07ce 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 1619 07d2 4FEA4343 		lsl	r3, r3, #17
 1620 07d6 1A43     		orrs	r2, r2, r3
 1621 07d8 019B     		ldr	r3, [sp, #4]
 1622 07da 9A60     		str	r2, [r3, #8]
1347:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1623              		.loc 1 1347 0
 1624 07dc 02B0     		add	sp, sp, #8
 1625 07de 7047     		bx	lr
 1626              		.cfi_endproc
 1627              	.LFE143:
 1629              		.align	2
 1630              		.global	USART_SetBlockLength
 1631              		.thumb
 1632              		.thumb_func
 1634              	USART_SetBlockLength:
 1635              	.LFB144:
1348:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1349:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1350:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Sets the Smart Card Block length.
1351:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1352:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3.
1353:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_BlockLength: specifies the Smart Card block length.
1354:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1355:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1356:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SetBlockLength(USART_TypeDef* USARTx, uint8_t USART_BlockLength)
1357:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {    
 1636              		.loc 1 1357 0
 1637              		.cfi_startproc
 1638              		@ args = 0, pretend = 0, frame = 8
 1639              		@ frame_needed = 0, uses_anonymous_args = 0
 1640              		@ link register save eliminated.
 1641 07e0 82B0     		sub	sp, sp, #8
 1642              	.LCFI35:
 1643              		.cfi_def_cfa_offset 8
 1644 07e2 0190     		str	r0, [sp, #4]
 1645 07e4 0B46     		mov	r3, r1
 1646 07e6 8DF80330 		strb	r3, [sp, #3]
1358:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1359:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_123_PERIPH(USARTx));
1360:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1361:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear the Smart card block length */
1362:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->RTOR &= (uint32_t)~((uint32_t)USART_RTOR_BLEN);
 1647              		.loc 1 1362 0
 1648 07ea 019B     		ldr	r3, [sp, #4]
 1649 07ec 5B69     		ldr	r3, [r3, #20]
 1650 07ee 23F07F42 		bic	r2, r3, #-16777216
 1651 07f2 019B     		ldr	r3, [sp, #4]
 1652 07f4 5A61     		str	r2, [r3, #20]
1363:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the Smart Card block length */
1364:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->RTOR |= (uint32_t)((uint32_t)USART_BlockLength << 0x18);
 1653              		.loc 1 1364 0
 1654 07f6 019B     		ldr	r3, [sp, #4]
 1655 07f8 5A69     		ldr	r2, [r3, #20]
 1656 07fa 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 1657 07fe 4FEA0363 		lsl	r3, r3, #24
 1658 0802 1A43     		orrs	r2, r2, r3
 1659 0804 019B     		ldr	r3, [sp, #4]
 1660 0806 5A61     		str	r2, [r3, #20]
1365:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1661              		.loc 1 1365 0
 1662 0808 02B0     		add	sp, sp, #8
 1663 080a 7047     		bx	lr
 1664              		.cfi_endproc
 1665              	.LFE144:
 1667              		.align	2
 1668              		.global	USART_IrDAConfig
 1669              		.thumb
 1670              		.thumb_func
 1672              	USART_IrDAConfig:
 1673              	.LFB145:
1366:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1367:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1368:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
1369:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1370:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1371:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group9 IrDA mode functions
1372:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   IrDA mode functions 
1373:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
1374:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim   
1375:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1376:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                         ##### IrDA mode functions #####
1377:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1378:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This subsection provides a set of functions allowing to manage the USART
1379:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          IrDA communication.
1380:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] IrDA is a half duplex communication protocol. If the Transmitter is busy, 
1381:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          any data on the IrDA receive line will be ignored by the IrDA decoder 
1382:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          and if the Receiver is busy, data on the TX from the USART to IrDA will 
1383:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          not be encoded by IrDA. While receiving data, transmission should be 
1384:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          avoided as the data to be transmitted could be corrupted.
1385:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] IrDA communication is possible through the following procedure:
1386:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Program the Baud rate, Word length = 8 bits, Stop bits, Parity, 
1387:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              Transmitter/Receiver modes and hardware flow control values using 
1388:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              the USART_Init() function.
1389:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Configures the IrDA pulse width by configuring the prescaler using  
1390:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              the USART_SetPrescaler() function.
1391:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Configures the IrDA  USART_IrDAMode_LowPower or USART_IrDAMode_Normal 
1392:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              mode using the USART_IrDAConfig() function.
1393:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the IrDA using the USART_IrDACmd() function.
1394:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the USART using the USART_Cmd() function.         
1395:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..]
1396:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     (@) A pulse of width less than two and greater than one PSC period(s) may or 
1397:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****         may not be rejected.
1398:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     (@) The receiver set up time should be managed by software. The IrDA physical 
1399:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****         layer specification specifies a minimum of 10 ms delay between 
1400:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****         transmission and reception (IrDA is a half duplex protocol).
1401:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     (@) In IrDA mode, the following bits must be kept cleared:
1402:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****         (+@) LINEN, STOP and CLKEN bits in the USART_CR2 register.
1403:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****         (+@) SCEN and HDSEL bits in the USART_CR3 register.
1404:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1405:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
1406:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
1407:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1408:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1409:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1410:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Configures the USART's IrDA interface.
1411:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1412:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1413:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_IrDAMode: specifies the IrDA mode.
1414:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
1415:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IrDAMode_LowPower
1416:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IrDAMode_Normal
1417:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1418:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1419:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_IrDAConfig(USART_TypeDef* USARTx, uint32_t USART_IrDAMode)
1420:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1674              		.loc 1 1420 0
 1675              		.cfi_startproc
 1676              		@ args = 0, pretend = 0, frame = 8
 1677              		@ frame_needed = 0, uses_anonymous_args = 0
 1678              		@ link register save eliminated.
 1679 080c 82B0     		sub	sp, sp, #8
 1680              	.LCFI36:
 1681              		.cfi_def_cfa_offset 8
 1682 080e 0190     		str	r0, [sp, #4]
 1683 0810 0091     		str	r1, [sp, #0]
1421:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1422:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1423:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_IRDA_MODE(USART_IrDAMode));
1424:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1425:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_IRLP);
 1684              		.loc 1 1425 0
 1685 0812 019B     		ldr	r3, [sp, #4]
 1686 0814 9B68     		ldr	r3, [r3, #8]
 1687 0816 23F00402 		bic	r2, r3, #4
 1688 081a 019B     		ldr	r3, [sp, #4]
 1689 081c 9A60     		str	r2, [r3, #8]
1426:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 |= USART_IrDAMode;
 1690              		.loc 1 1426 0
 1691 081e 019B     		ldr	r3, [sp, #4]
 1692 0820 9A68     		ldr	r2, [r3, #8]
 1693 0822 009B     		ldr	r3, [sp, #0]
 1694 0824 1A43     		orrs	r2, r2, r3
 1695 0826 019B     		ldr	r3, [sp, #4]
 1696 0828 9A60     		str	r2, [r3, #8]
1427:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1697              		.loc 1 1427 0
 1698 082a 02B0     		add	sp, sp, #8
 1699 082c 7047     		bx	lr
 1700              		.cfi_endproc
 1701              	.LFE145:
 1703 082e 00BF     		.align	2
 1704              		.global	USART_IrDACmd
 1705              		.thumb
 1706              		.thumb_func
 1708              	USART_IrDACmd:
 1709              	.LFB146:
1428:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1429:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1430:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's IrDA interface. 
1431:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1432:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1433:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the IrDA mode.
1434:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
1435:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1436:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1437:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_IrDACmd(USART_TypeDef* USARTx, FunctionalState NewState)
1438:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1710              		.loc 1 1438 0
 1711              		.cfi_startproc
 1712              		@ args = 0, pretend = 0, frame = 8
 1713              		@ frame_needed = 0, uses_anonymous_args = 0
 1714              		@ link register save eliminated.
 1715 0830 82B0     		sub	sp, sp, #8
 1716              	.LCFI37:
 1717              		.cfi_def_cfa_offset 8
 1718 0832 0190     		str	r0, [sp, #4]
 1719 0834 0B46     		mov	r3, r1
 1720 0836 8DF80330 		strb	r3, [sp, #3]
1439:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1440:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1441:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1442:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1443:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 1721              		.loc 1 1443 0
 1722 083a 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 1723 083e 002B     		cmp	r3, #0
 1724 0840 06D0     		beq	.L83
1444:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1445:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the IrDA mode by setting the IREN bit in the CR3 register */
1446:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 |= USART_CR3_IREN;
 1725              		.loc 1 1446 0
 1726 0842 019B     		ldr	r3, [sp, #4]
 1727 0844 9B68     		ldr	r3, [r3, #8]
 1728 0846 43F00202 		orr	r2, r3, #2
 1729 084a 019B     		ldr	r3, [sp, #4]
 1730 084c 9A60     		str	r2, [r3, #8]
 1731 084e 05E0     		b	.L82
 1732              	.L83:
1447:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1448:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1449:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1450:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the IrDA mode by clearing the IREN bit in the CR3 register */
1451:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_IREN);
 1733              		.loc 1 1451 0
 1734 0850 019B     		ldr	r3, [sp, #4]
 1735 0852 9B68     		ldr	r3, [r3, #8]
 1736 0854 23F00202 		bic	r2, r3, #2
 1737 0858 019B     		ldr	r3, [sp, #4]
 1738 085a 9A60     		str	r2, [r3, #8]
 1739              	.L82:
1452:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1453:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1740              		.loc 1 1453 0
 1741 085c 02B0     		add	sp, sp, #8
 1742 085e 7047     		bx	lr
 1743              		.cfi_endproc
 1744              	.LFE146:
 1746              		.align	2
 1747              		.global	USART_DECmd
 1748              		.thumb
 1749              		.thumb_func
 1751              	USART_DECmd:
 1752              	.LFB147:
1454:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1455:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
1456:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1457:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1458:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group10 RS485 mode function
1459:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   RS485 mode function 
1460:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
1461:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim  
1462:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1463:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                         ##### RS485 mode functions #####
1464:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1465:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This subsection provides a set of functions allowing to manage the USART
1466:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          RS485 flow control.
1467:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] RS485 flow control (Driver enable feature) handling is possible through
1468:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          the following procedure:
1469:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Program the Baud rate, Word length = 8 bits, Stop bits, Parity, 
1470:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              Transmitter/Receiver modes and hardware flow control values using 
1471:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              the USART_Init() function.
1472:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the Driver Enable using the USART_DECmd() function.
1473:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Configures the Driver Enable polarity using the USART_DEPolarityConfig()
1474:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              function.
1475:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Configures the Driver Enable assertion time using USART_SetDEAssertionTime() 
1476:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              function and deassertion time using the USART_SetDEDeassertionTime()
1477:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              function.    
1478:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the USART using the USART_Cmd() function.
1479:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****       [..]  
1480:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        (@) The assertion and dessertion times are expressed in sample time units (1/8 or 
1481:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             1/16 bit time, depending on the oversampling rate).
1482:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        
1483:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
1484:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
1485:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1486:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1487:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1488:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's DE functionality.
1489:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1490:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1491:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the driver enable mode.
1492:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.      
1493:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1494:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1495:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_DECmd(USART_TypeDef* USARTx, FunctionalState NewState)
1496:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1753              		.loc 1 1496 0
 1754              		.cfi_startproc
 1755              		@ args = 0, pretend = 0, frame = 8
 1756              		@ frame_needed = 0, uses_anonymous_args = 0
 1757              		@ link register save eliminated.
 1758 0860 82B0     		sub	sp, sp, #8
 1759              	.LCFI38:
 1760              		.cfi_def_cfa_offset 8
 1761 0862 0190     		str	r0, [sp, #4]
 1762 0864 0B46     		mov	r3, r1
 1763 0866 8DF80330 		strb	r3, [sp, #3]
1497:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1498:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1499:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1500:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 1764              		.loc 1 1500 0
 1765 086a 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 1766 086e 002B     		cmp	r3, #0
 1767 0870 06D0     		beq	.L86
1501:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1502:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the DE functionality by setting the DEM bit in the CR3 register */
1503:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 |= USART_CR3_DEM;
 1768              		.loc 1 1503 0
 1769 0872 019B     		ldr	r3, [sp, #4]
 1770 0874 9B68     		ldr	r3, [r3, #8]
 1771 0876 43F48042 		orr	r2, r3, #16384
 1772 087a 019B     		ldr	r3, [sp, #4]
 1773 087c 9A60     		str	r2, [r3, #8]
 1774 087e 05E0     		b	.L85
 1775              	.L86:
1504:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1505:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1506:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1507:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the DE functionality by clearing the DEM bit in the CR3 register */
1508:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_DEM);
 1776              		.loc 1 1508 0
 1777 0880 019B     		ldr	r3, [sp, #4]
 1778 0882 9B68     		ldr	r3, [r3, #8]
 1779 0884 23F48042 		bic	r2, r3, #16384
 1780 0888 019B     		ldr	r3, [sp, #4]
 1781 088a 9A60     		str	r2, [r3, #8]
 1782              	.L85:
1509:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1510:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1783              		.loc 1 1510 0
 1784 088c 02B0     		add	sp, sp, #8
 1785 088e 7047     		bx	lr
 1786              		.cfi_endproc
 1787              	.LFE147:
 1789              		.align	2
 1790              		.global	USART_DEPolarityConfig
 1791              		.thumb
 1792              		.thumb_func
 1794              	USART_DEPolarityConfig:
 1795              	.LFB148:
1511:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1512:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1513:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Configures the USART's DE polarity
1514:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1515:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1516:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_DEPolarity: specifies the DE polarity.
1517:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
1518:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_DEPolarity_Low
1519:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_DEPolarity_High
1520:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1521:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1522:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_DEPolarityConfig(USART_TypeDef* USARTx, uint32_t USART_DEPolarity)
1523:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1796              		.loc 1 1523 0
 1797              		.cfi_startproc
 1798              		@ args = 0, pretend = 0, frame = 8
 1799              		@ frame_needed = 0, uses_anonymous_args = 0
 1800              		@ link register save eliminated.
 1801 0890 82B0     		sub	sp, sp, #8
 1802              	.LCFI39:
 1803              		.cfi_def_cfa_offset 8
 1804 0892 0190     		str	r0, [sp, #4]
 1805 0894 0091     		str	r1, [sp, #0]
1524:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1525:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1526:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_DE_POLARITY(USART_DEPolarity));
1527:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1528:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_DEP);
 1806              		.loc 1 1528 0
 1807 0896 019B     		ldr	r3, [sp, #4]
 1808 0898 9B68     		ldr	r3, [r3, #8]
 1809 089a 23F40042 		bic	r2, r3, #32768
 1810 089e 019B     		ldr	r3, [sp, #4]
 1811 08a0 9A60     		str	r2, [r3, #8]
1529:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 |= USART_DEPolarity;
 1812              		.loc 1 1529 0
 1813 08a2 019B     		ldr	r3, [sp, #4]
 1814 08a4 9A68     		ldr	r2, [r3, #8]
 1815 08a6 009B     		ldr	r3, [sp, #0]
 1816 08a8 1A43     		orrs	r2, r2, r3
 1817 08aa 019B     		ldr	r3, [sp, #4]
 1818 08ac 9A60     		str	r2, [r3, #8]
1530:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1819              		.loc 1 1530 0
 1820 08ae 02B0     		add	sp, sp, #8
 1821 08b0 7047     		bx	lr
 1822              		.cfi_endproc
 1823              	.LFE148:
 1825 08b2 00BF     		.align	2
 1826              		.global	USART_SetDEAssertionTime
 1827              		.thumb
 1828              		.thumb_func
 1830              	USART_SetDEAssertionTime:
 1831              	.LFB149:
1531:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1532:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1533:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Sets the specified RS485 DE assertion time
1534:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1535:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1536:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_AssertionTime: specifies the time between the activation of the DE
1537:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *          signal and the beginning of the start bit
1538:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1539:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1540:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SetDEAssertionTime(USART_TypeDef* USARTx, uint32_t USART_DEAssertionTime)
1541:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1832              		.loc 1 1541 0
 1833              		.cfi_startproc
 1834              		@ args = 0, pretend = 0, frame = 8
 1835              		@ frame_needed = 0, uses_anonymous_args = 0
 1836              		@ link register save eliminated.
 1837 08b4 82B0     		sub	sp, sp, #8
 1838              	.LCFI40:
 1839              		.cfi_def_cfa_offset 8
 1840 08b6 0190     		str	r0, [sp, #4]
 1841 08b8 0091     		str	r1, [sp, #0]
1542:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1543:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1544:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_DE_ASSERTION_DEASSERTION_TIME(USART_DEAssertionTime)); 
1545:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1546:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear the DE assertion time */
1547:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR1 &= (uint32_t)~((uint32_t)USART_CR1_DEAT);
 1842              		.loc 1 1547 0
 1843 08ba 019B     		ldr	r3, [sp, #4]
 1844 08bc 1B68     		ldr	r3, [r3, #0]
 1845 08be 23F07872 		bic	r2, r3, #65011712
 1846 08c2 019B     		ldr	r3, [sp, #4]
 1847 08c4 1A60     		str	r2, [r3, #0]
1548:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the new value for the DE assertion time */
1549:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR1 |=((uint32_t)USART_DEAssertionTime << (uint32_t)0x15);
 1848              		.loc 1 1549 0
 1849 08c6 019B     		ldr	r3, [sp, #4]
 1850 08c8 1A68     		ldr	r2, [r3, #0]
 1851 08ca 009B     		ldr	r3, [sp, #0]
 1852 08cc 4FEA4353 		lsl	r3, r3, #21
 1853 08d0 1A43     		orrs	r2, r2, r3
 1854 08d2 019B     		ldr	r3, [sp, #4]
 1855 08d4 1A60     		str	r2, [r3, #0]
1550:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1856              		.loc 1 1550 0
 1857 08d6 02B0     		add	sp, sp, #8
 1858 08d8 7047     		bx	lr
 1859              		.cfi_endproc
 1860              	.LFE149:
 1862 08da 00BF     		.align	2
 1863              		.global	USART_SetDEDeassertionTime
 1864              		.thumb
 1865              		.thumb_func
 1867              	USART_SetDEDeassertionTime:
 1868              	.LFB150:
1551:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1552:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1553:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Sets the specified RS485 DE deassertion time
1554:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1555:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1556:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_DeassertionTime: specifies the time between the middle of the last 
1557:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         stop bit in a transmitted message and the de-activation of the DE signal
1558:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1559:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1560:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SetDEDeassertionTime(USART_TypeDef* USARTx, uint32_t USART_DEDeassertionTime)
1561:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1869              		.loc 1 1561 0
 1870              		.cfi_startproc
 1871              		@ args = 0, pretend = 0, frame = 8
 1872              		@ frame_needed = 0, uses_anonymous_args = 0
 1873              		@ link register save eliminated.
 1874 08dc 82B0     		sub	sp, sp, #8
 1875              	.LCFI41:
 1876              		.cfi_def_cfa_offset 8
 1877 08de 0190     		str	r0, [sp, #4]
 1878 08e0 0091     		str	r1, [sp, #0]
1562:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1563:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1564:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_DE_ASSERTION_DEASSERTION_TIME(USART_DEDeassertionTime)); 
1565:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1566:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear the DE deassertion time */
1567:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR1 &= (uint32_t)~((uint32_t)USART_CR1_DEDT);
 1879              		.loc 1 1567 0
 1880 08e2 019B     		ldr	r3, [sp, #4]
 1881 08e4 1B68     		ldr	r3, [r3, #0]
 1882 08e6 23F4F812 		bic	r2, r3, #2031616
 1883 08ea 019B     		ldr	r3, [sp, #4]
 1884 08ec 1A60     		str	r2, [r3, #0]
1568:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the new value for the DE deassertion time */
1569:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR1 |=((uint32_t)USART_DEDeassertionTime << (uint32_t)0x10);
 1885              		.loc 1 1569 0
 1886 08ee 019B     		ldr	r3, [sp, #4]
 1887 08f0 1A68     		ldr	r2, [r3, #0]
 1888 08f2 009B     		ldr	r3, [sp, #0]
 1889 08f4 4FEA0343 		lsl	r3, r3, #16
 1890 08f8 1A43     		orrs	r2, r2, r3
 1891 08fa 019B     		ldr	r3, [sp, #4]
 1892 08fc 1A60     		str	r2, [r3, #0]
1570:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1893              		.loc 1 1570 0
 1894 08fe 02B0     		add	sp, sp, #8
 1895 0900 7047     		bx	lr
 1896              		.cfi_endproc
 1897              	.LFE150:
 1899 0902 00BF     		.align	2
 1900              		.global	USART_DMACmd
 1901              		.thumb
 1902              		.thumb_func
 1904              	USART_DMACmd:
 1905              	.LFB151:
1571:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1572:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1573:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
1574:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1575:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1576:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group11 DMA transfers management functions
1577:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   DMA transfers management functions
1578:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
1579:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim   
1580:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1581:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                ##### DMA transfers management functions #####
1582:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1583:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This section provides two functions that can be used only in DMA mode.
1584:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] In DMA Mode, the USART communication can be managed by 2 DMA Channel 
1585:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          requests:
1586:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_DMAReq_Tx: specifies the Tx buffer DMA transfer request.
1587:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_DMAReq_Rx: specifies the Rx buffer DMA transfer request.
1588:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] In this Mode it is advised to use the following function:
1589:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (+) void USART_DMACmd(USART_TypeDef* USARTx, uint16_t USART_DMAReq, 
1590:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              FunctionalState NewState).
1591:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
1592:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
1593:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1594:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1595:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1596:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's DMA interface.
1597:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1598:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4.
1599:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_DMAReq: specifies the DMA request.
1600:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be any combination of the following values:
1601:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_DMAReq_Tx: USART DMA transmit request
1602:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_DMAReq_Rx: USART DMA receive request
1603:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the DMA Request sources.
1604:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.  
1605:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1606:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1607:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_DMACmd(USART_TypeDef* USARTx, uint32_t USART_DMAReq, FunctionalState NewState)
1608:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1906              		.loc 1 1608 0
 1907              		.cfi_startproc
 1908              		@ args = 0, pretend = 0, frame = 16
 1909              		@ frame_needed = 0, uses_anonymous_args = 0
 1910              		@ link register save eliminated.
 1911 0904 84B0     		sub	sp, sp, #16
 1912              	.LCFI42:
 1913              		.cfi_def_cfa_offset 16
 1914 0906 0390     		str	r0, [sp, #12]
 1915 0908 0291     		str	r1, [sp, #8]
 1916 090a 1346     		mov	r3, r2
 1917 090c 8DF80730 		strb	r3, [sp, #7]
1609:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1610:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_1234_PERIPH(USARTx));
1611:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_DMAREQ(USART_DMAReq));  
1612:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState)); 
1613:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1614:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 1918              		.loc 1 1614 0
 1919 0910 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1920 0914 002B     		cmp	r3, #0
 1921 0916 06D0     		beq	.L92
1615:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1616:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the DMA transfer for selected requests by setting the DMAT and/or
1617:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        DMAR bits in the USART CR3 register */
1618:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 |= USART_DMAReq;
 1922              		.loc 1 1618 0
 1923 0918 039B     		ldr	r3, [sp, #12]
 1924 091a 9A68     		ldr	r2, [r3, #8]
 1925 091c 029B     		ldr	r3, [sp, #8]
 1926 091e 1A43     		orrs	r2, r2, r3
 1927 0920 039B     		ldr	r3, [sp, #12]
 1928 0922 9A60     		str	r2, [r3, #8]
 1929 0924 07E0     		b	.L91
 1930              	.L92:
1619:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1620:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1621:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1622:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the DMA transfer for selected requests by clearing the DMAT and/or
1623:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        DMAR bits in the USART CR3 register */
1624:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 &= (uint32_t)~USART_DMAReq;
 1931              		.loc 1 1624 0
 1932 0926 039B     		ldr	r3, [sp, #12]
 1933 0928 9A68     		ldr	r2, [r3, #8]
 1934 092a 029B     		ldr	r3, [sp, #8]
 1935 092c 6FEA0303 		mvn	r3, r3
 1936 0930 1A40     		ands	r2, r2, r3
 1937 0932 039B     		ldr	r3, [sp, #12]
 1938 0934 9A60     		str	r2, [r3, #8]
 1939              	.L91:
1625:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1626:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1940              		.loc 1 1626 0
 1941 0936 04B0     		add	sp, sp, #16
 1942 0938 7047     		bx	lr
 1943              		.cfi_endproc
 1944              	.LFE151:
 1946 093a 00BF     		.align	2
 1947              		.global	USART_DMAReceptionErrorConfig
 1948              		.thumb
 1949              		.thumb_func
 1951              	USART_DMAReceptionErrorConfig:
 1952              	.LFB152:
1627:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1628:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1629:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's DMA interface when reception error occurs.
1630:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1631:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4.
1632:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_DMAOnError: specifies the DMA status in case of reception error.
1633:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be any combination of the following values:
1634:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_DMAOnError_Enable: DMA receive request enabled when the USART DMA  
1635:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *          reception error is asserted.
1636:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_DMAOnError_Disable: DMA receive request disabled when the USART DMA 
1637:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *          reception error is asserted.
1638:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1639:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1640:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_DMAReceptionErrorConfig(USART_TypeDef* USARTx, uint32_t USART_DMAOnError)
1641:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1953              		.loc 1 1641 0
 1954              		.cfi_startproc
 1955              		@ args = 0, pretend = 0, frame = 8
 1956              		@ frame_needed = 0, uses_anonymous_args = 0
 1957              		@ link register save eliminated.
 1958 093c 82B0     		sub	sp, sp, #8
 1959              	.LCFI43:
 1960              		.cfi_def_cfa_offset 8
 1961 093e 0190     		str	r0, [sp, #4]
 1962 0940 0091     		str	r1, [sp, #0]
1642:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1643:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_1234_PERIPH(USARTx));
1644:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_DMAONERROR(USART_DMAOnError)); 
1645:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
1646:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear the DMA Reception error detection bit */
1647:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_DDRE);
 1963              		.loc 1 1647 0
 1964 0942 019B     		ldr	r3, [sp, #4]
 1965 0944 9B68     		ldr	r3, [r3, #8]
 1966 0946 23F40052 		bic	r2, r3, #8192
 1967 094a 019B     		ldr	r3, [sp, #4]
 1968 094c 9A60     		str	r2, [r3, #8]
1648:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the new value for the DMA Reception error detection bit */
1649:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 |= USART_DMAOnError;
 1969              		.loc 1 1649 0
 1970 094e 019B     		ldr	r3, [sp, #4]
 1971 0950 9A68     		ldr	r2, [r3, #8]
 1972 0952 009B     		ldr	r3, [sp, #0]
 1973 0954 1A43     		orrs	r2, r2, r3
 1974 0956 019B     		ldr	r3, [sp, #4]
 1975 0958 9A60     		str	r2, [r3, #8]
1650:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1976              		.loc 1 1650 0
 1977 095a 02B0     		add	sp, sp, #8
 1978 095c 7047     		bx	lr
 1979              		.cfi_endproc
 1980              	.LFE152:
 1982 095e 00BF     		.align	2
 1983              		.global	USART_ITConfig
 1984              		.thumb
 1985              		.thumb_func
 1987              	USART_ITConfig:
 1988              	.LFB153:
1651:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1652:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1653:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
1654:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1655:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
1656:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group12 Interrupts and flags management functions
1657:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   Interrupts and flags management functions 
1658:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
1659:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim   
1660:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1661:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             ##### Interrupts and flags management functions #####
1662:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1663:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This subsection provides a set of functions allowing to configure the 
1664:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          USART Interrupts sources, Requests and check or clear the flags or pending bits status. 
1665:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          The user should identify which mode will be used in his application to 
1666:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          manage the communication: Polling mode, Interrupt mode.
1667:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          
1668:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *** Polling Mode ***
1669:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ====================
1670:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] In Polling Mode, the SPI communication can be managed by these flags:
1671:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_REACK: to indicate the status of the Receive Enable 
1672:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              acknowledge flag
1673:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_TEACK: to indicate the status of the Transmit Enable 
1674:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              acknowledge flag.
1675:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_WUF: to indicate the status of the Wake up flag.
1676:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_RWU: to indicate the status of the Receive Wake up flag.
1677:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_SBK: to indicate the status of the Send Break flag.
1678:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_CMF: to indicate the status of the Character match flag.
1679:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_BUSY: to indicate the status of the Busy flag.
1680:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_ABRF: to indicate the status of the Auto baud rate flag.
1681:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_ABRE: to indicate the status of the Auto baud rate error flag.
1682:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_EOBF: to indicate the status of the End of block flag.
1683:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_RTOF: to indicate the status of the Receive time out flag.
1684:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_nCTSS: to indicate the status of the Inverted nCTS input 
1685:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              bit status.
1686:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_TXE: to indicate the status of the transmit buffer register.
1687:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_RXNE: to indicate the status of the receive buffer register.
1688:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_TC: to indicate the status of the transmit operation.
1689:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_IDLE: to indicate the status of the Idle Line.
1690:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_CTS: to indicate the status of the nCTS input.
1691:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_LBD: to indicate the status of the LIN break detection.
1692:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_NE: to indicate if a noise error occur.
1693:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_FE: to indicate if a frame error occur.
1694:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_PE: to indicate if a parity error occur.
1695:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_ORE: to indicate if an Overrun error occur.
1696:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] In this Mode it is advised to use the following functions:
1697:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (+) FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG).
1698:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (+) void USART_ClearFlag(USART_TypeDef* USARTx, uint16_t USART_FLAG).
1699:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                
1700:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *** Interrupt Mode ***
1701:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ======================
1702:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] In Interrupt Mode, the USART communication can be managed by 8 interrupt 
1703:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          sources and 10 pending bits:
1704:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (+) Pending Bits:
1705:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_WU: to indicate the status of the Wake up interrupt.
1706:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_CM: to indicate the status of Character match interrupt.
1707:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_EOB: to indicate the status of End of block interrupt.
1708:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_RTO: to indicate the status of Receive time out interrupt.
1709:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_CTS: to indicate the status of CTS change interrupt.
1710:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_LBD: to indicate the status of LIN Break detection interrupt.
1711:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_TC: to indicate the status of Transmission complete interrupt.
1712:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_IDLE: to indicate the status of IDLE line detected interrupt.
1713:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_ORE: to indicate the status of OverRun Error interrupt.
1714:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_NE: to indicate the status of Noise Error interrupt.
1715:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_FE: to indicate the status of Framing Error interrupt.
1716:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_PE: to indicate the status of Parity Error interrupt.  
1717:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               
1718:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (+) Interrupt Source:
1719:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_WU: specifies the interrupt source for Wake up interrupt.
1720:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_CM: specifies the interrupt source for Character match 
1721:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                   interrupt.
1722:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_EOB: specifies the interrupt source for End of block
1723:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                   interrupt.
1724:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_RTO: specifies the interrupt source for Receive time-out
1725:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                   interrupt.
1726:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_CTS: specifies the interrupt source for CTS change interrupt.
1727:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_LBD: specifies the interrupt source for LIN Break 
1728:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                   detection interrupt.
1729:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_TXE: specifies the interrupt source for Tansmit Data 
1730:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                   Register empty interrupt.
1731:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_TC: specifies the interrupt source for Transmission 
1732:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                   complete interrupt.
1733:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_RXNE: specifies the interrupt source for Receive Data 
1734:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                   register not empty interrupt.
1735:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_IDLE: specifies the interrupt source for Idle line 
1736:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                   detection interrupt.
1737:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_PE: specifies the interrupt source for Parity Error interrupt.
1738:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_ERR: specifies the interrupt source for Error interrupt
1739:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                   (Frame error, noise error, overrun error)
1740:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              -@@- Some parameters are coded in order to use them as interrupt 
1741:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                  source or as pending bits.
1742:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] In this Mode it is advised to use the following functions:
1743:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (+) void USART_ITConfig(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState
1744:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (+) ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint16_t USART_IT).
1745:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (+) void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint16_t USART_IT).
1746:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1747:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
1748:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
1749:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1750:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1751:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1752:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the specified USART interrupts.
1753:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1754:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1755:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_IT: specifies the USART interrupt sources to be enabled or disabled.
1756:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
1757:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_WU:  Wake up interrupt.
1758:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_CM:  Character match interrupt.
1759:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_EOB:  End of block interrupt.
1760:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_RTO:  Receive time out interrupt.
1761:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_CTS:  CTS change interrupt.
1762:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_LBD:  LIN Break detection interrupt.
1763:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_TXE:  Tansmit Data Register empty interrupt.
1764:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_TC:  Transmission complete interrupt.
1765:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_RXNE:  Receive Data register not empty interrupt.
1766:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_IDLE:  Idle line detection interrupt.
1767:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_PE:  Parity Error interrupt.
1768:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_ERR:  Error interrupt(Frame error, noise error, overrun error)
1769:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the specified USARTx interrupts.
1770:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
1771:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1772:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1773:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_ITConfig(USART_TypeDef* USARTx, uint32_t USART_IT, FunctionalState NewState)
1774:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1989              		.loc 1 1774 0
 1990              		.cfi_startproc
 1991              		@ args = 0, pretend = 0, frame = 32
 1992              		@ frame_needed = 0, uses_anonymous_args = 0
 1993              		@ link register save eliminated.
 1994 0960 88B0     		sub	sp, sp, #32
 1995              	.LCFI44:
 1996              		.cfi_def_cfa_offset 32
 1997 0962 0390     		str	r0, [sp, #12]
 1998 0964 0291     		str	r1, [sp, #8]
 1999 0966 1346     		mov	r3, r2
 2000 0968 8DF80730 		strb	r3, [sp, #7]
1775:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   uint32_t usartreg = 0, itpos = 0, itmask = 0;
 2001              		.loc 1 1775 0
 2002 096c 4FF00003 		mov	r3, #0
 2003 0970 0693     		str	r3, [sp, #24]
 2004 0972 4FF00003 		mov	r3, #0
 2005 0976 0593     		str	r3, [sp, #20]
 2006 0978 4FF00003 		mov	r3, #0
 2007 097c 0493     		str	r3, [sp, #16]
1776:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   uint32_t usartxbase = 0;
 2008              		.loc 1 1776 0
 2009 097e 4FF00003 		mov	r3, #0
 2010 0982 0793     		str	r3, [sp, #28]
1777:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1778:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1779:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_CONFIG_IT(USART_IT));
1780:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1781:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
1782:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   usartxbase = (uint32_t)USARTx;
 2011              		.loc 1 1782 0
 2012 0984 039B     		ldr	r3, [sp, #12]
 2013 0986 0793     		str	r3, [sp, #28]
1783:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1784:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Get the USART register index */
1785:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   usartreg = (((uint16_t)USART_IT) >> 0x08);
 2014              		.loc 1 1785 0
 2015 0988 029B     		ldr	r3, [sp, #8]
 2016 098a 9BB2     		uxth	r3, r3
 2017 098c 4FEA1323 		lsr	r3, r3, #8
 2018 0990 9BB2     		uxth	r3, r3
 2019 0992 0693     		str	r3, [sp, #24]
1786:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1787:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Get the interrupt position */
1788:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   itpos = USART_IT & IT_MASK;
 2020              		.loc 1 1788 0
 2021 0994 029B     		ldr	r3, [sp, #8]
 2022 0996 DBB2     		uxtb	r3, r3
 2023 0998 0593     		str	r3, [sp, #20]
1789:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   itmask = (((uint32_t)0x01) << itpos);
 2024              		.loc 1 1789 0
 2025 099a 059B     		ldr	r3, [sp, #20]
 2026 099c 4FF00102 		mov	r2, #1
 2027 09a0 02FA03F3 		lsl	r3, r2, r3
 2028 09a4 0493     		str	r3, [sp, #16]
1790:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1791:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (usartreg == 0x02) /* The IT is in CR2 register */
 2029              		.loc 1 1791 0
 2030 09a6 069B     		ldr	r3, [sp, #24]
 2031 09a8 022B     		cmp	r3, #2
 2032 09aa 04D1     		bne	.L96
1792:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1793:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     usartxbase += 0x04;
 2033              		.loc 1 1793 0
 2034 09ac 079B     		ldr	r3, [sp, #28]
 2035 09ae 03F10403 		add	r3, r3, #4
 2036 09b2 0793     		str	r3, [sp, #28]
 2037 09b4 06E0     		b	.L97
 2038              	.L96:
1794:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1795:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else if (usartreg == 0x03) /* The IT is in CR3 register */
 2039              		.loc 1 1795 0
 2040 09b6 069B     		ldr	r3, [sp, #24]
 2041 09b8 032B     		cmp	r3, #3
 2042 09ba 03D1     		bne	.L97
1796:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1797:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     usartxbase += 0x08;
 2043              		.loc 1 1797 0
 2044 09bc 079B     		ldr	r3, [sp, #28]
 2045 09be 03F10803 		add	r3, r3, #8
 2046 09c2 0793     		str	r3, [sp, #28]
 2047              	.L97:
1798:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1799:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else /* The IT is in CR1 register */
1800:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1801:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1802:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 2048              		.loc 1 1802 0
 2049 09c4 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 2050 09c8 002B     		cmp	r3, #0
 2051 09ca 06D0     		beq	.L98
1803:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1804:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     *(__IO uint32_t*)usartxbase  |= itmask;
 2052              		.loc 1 1804 0
 2053 09cc 079B     		ldr	r3, [sp, #28]
 2054 09ce 079A     		ldr	r2, [sp, #28]
 2055 09d0 1168     		ldr	r1, [r2, #0]
 2056 09d2 049A     		ldr	r2, [sp, #16]
 2057 09d4 0A43     		orrs	r2, r2, r1
 2058 09d6 1A60     		str	r2, [r3, #0]
 2059 09d8 07E0     		b	.L95
 2060              	.L98:
1805:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1806:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1807:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1808:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     *(__IO uint32_t*)usartxbase &= ~itmask;
 2061              		.loc 1 1808 0
 2062 09da 079B     		ldr	r3, [sp, #28]
 2063 09dc 079A     		ldr	r2, [sp, #28]
 2064 09de 1168     		ldr	r1, [r2, #0]
 2065 09e0 049A     		ldr	r2, [sp, #16]
 2066 09e2 6FEA0202 		mvn	r2, r2
 2067 09e6 0A40     		ands	r2, r2, r1
 2068 09e8 1A60     		str	r2, [r3, #0]
 2069              	.L95:
1809:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1810:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 2070              		.loc 1 1810 0
 2071 09ea 08B0     		add	sp, sp, #32
 2072 09ec 7047     		bx	lr
 2073              		.cfi_endproc
 2074              	.LFE153:
 2076 09ee 00BF     		.align	2
 2077              		.global	USART_RequestCmd
 2078              		.thumb
 2079              		.thumb_func
 2081              	USART_RequestCmd:
 2082              	.LFB154:
1811:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1812:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1813:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables the specified USART's Request.
1814:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1815:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1816:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_Request: specifies the USART request.
1817:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be any combination of the following values:
1818:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_Request_TXFRQ: Transmit data flush ReQuest
1819:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_Request_RXFRQ: Receive data flush ReQuest
1820:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_Request_MMRQ: Mute Mode ReQuest
1821:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_Request_SBKRQ: Send Break ReQuest
1822:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_Request_ABRRQ: Auto Baud Rate ReQuest
1823:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the DMA interface when reception error occurs.
1824:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.  
1825:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1826:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1827:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_RequestCmd(USART_TypeDef* USARTx, uint32_t USART_Request, FunctionalState NewState)
1828:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 2083              		.loc 1 1828 0
 2084              		.cfi_startproc
 2085              		@ args = 0, pretend = 0, frame = 16
 2086              		@ frame_needed = 0, uses_anonymous_args = 0
 2087              		@ link register save eliminated.
 2088 09f0 84B0     		sub	sp, sp, #16
 2089              	.LCFI45:
 2090              		.cfi_def_cfa_offset 16
 2091 09f2 0390     		str	r0, [sp, #12]
 2092 09f4 0291     		str	r1, [sp, #8]
 2093 09f6 1346     		mov	r3, r2
 2094 09f8 8DF80730 		strb	r3, [sp, #7]
1829:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1830:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1831:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_REQUEST(USART_Request));
1832:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState)); 
1833:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1834:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 2095              		.loc 1 1834 0
 2096 09fc 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 2097 0a00 002B     		cmp	r3, #0
 2098 0a02 09D0     		beq	.L101
1835:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1836:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the USART ReQuest by setting the dedicated request bit in the RQR
1837:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        register.*/
1838:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->RQR |= USART_Request;
 2099              		.loc 1 1838 0
 2100 0a04 039B     		ldr	r3, [sp, #12]
 2101 0a06 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2102 0a08 9AB2     		uxth	r2, r3
 2103 0a0a 029B     		ldr	r3, [sp, #8]
 2104 0a0c 9BB2     		uxth	r3, r3
 2105 0a0e 1343     		orrs	r3, r3, r2
 2106 0a10 9AB2     		uxth	r2, r3
 2107 0a12 039B     		ldr	r3, [sp, #12]
 2108 0a14 1A83     		strh	r2, [r3, #24]	@ movhi
 2109 0a16 0BE0     		b	.L100
 2110              	.L101:
1839:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1840:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1841:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1842:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the USART ReQuest by clearing the dedicated request bit in the RQR
1843:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        register.*/
1844:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->RQR &= (uint32_t)~USART_Request;
 2111              		.loc 1 1844 0
 2112 0a18 039B     		ldr	r3, [sp, #12]
 2113 0a1a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2114 0a1c 9AB2     		uxth	r2, r3
 2115 0a1e 029B     		ldr	r3, [sp, #8]
 2116 0a20 9BB2     		uxth	r3, r3
 2117 0a22 6FEA0303 		mvn	r3, r3
 2118 0a26 9BB2     		uxth	r3, r3
 2119 0a28 1340     		ands	r3, r3, r2
 2120 0a2a 9AB2     		uxth	r2, r3
 2121 0a2c 039B     		ldr	r3, [sp, #12]
 2122 0a2e 1A83     		strh	r2, [r3, #24]	@ movhi
 2123              	.L100:
1845:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1846:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 2124              		.loc 1 1846 0
 2125 0a30 04B0     		add	sp, sp, #16
 2126 0a32 7047     		bx	lr
 2127              		.cfi_endproc
 2128              	.LFE154:
 2130              		.align	2
 2131              		.global	USART_OverrunDetectionConfig
 2132              		.thumb
 2133              		.thumb_func
 2135              	USART_OverrunDetectionConfig:
 2136              	.LFB155:
1847:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1848:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1849:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's Overrun detection.
1850:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1851:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1852:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_OVRDetection: specifies the OVR detection status in case of OVR error.
1853:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be any combination of the following values:
1854:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_OVRDetection_Enable: OVR error detection enabled when the USART OVR error 
1855:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *          is asserted.
1856:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_OVRDetection_Disable: OVR error detection disabled when the USART OVR error 
1857:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *          is asserted.
1858:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1859:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1860:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_OverrunDetectionConfig(USART_TypeDef* USARTx, uint32_t USART_OVRDetection)
1861:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 2137              		.loc 1 1861 0
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 8
 2140              		@ frame_needed = 0, uses_anonymous_args = 0
 2141              		@ link register save eliminated.
 2142 0a34 82B0     		sub	sp, sp, #8
 2143              	.LCFI46:
 2144              		.cfi_def_cfa_offset 8
 2145 0a36 0190     		str	r0, [sp, #4]
 2146 0a38 0091     		str	r1, [sp, #0]
1862:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1863:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1864:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_OVRDETECTION(USART_OVRDetection));
1865:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
1866:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear the OVR detection bit */
1867:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_OVRDIS);
 2147              		.loc 1 1867 0
 2148 0a3a 019B     		ldr	r3, [sp, #4]
 2149 0a3c 9B68     		ldr	r3, [r3, #8]
 2150 0a3e 23F48052 		bic	r2, r3, #4096
 2151 0a42 019B     		ldr	r3, [sp, #4]
 2152 0a44 9A60     		str	r2, [r3, #8]
1868:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the new value for the OVR detection bit */
1869:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 |= USART_OVRDetection;
 2153              		.loc 1 1869 0
 2154 0a46 019B     		ldr	r3, [sp, #4]
 2155 0a48 9A68     		ldr	r2, [r3, #8]
 2156 0a4a 009B     		ldr	r3, [sp, #0]
 2157 0a4c 1A43     		orrs	r2, r2, r3
 2158 0a4e 019B     		ldr	r3, [sp, #4]
 2159 0a50 9A60     		str	r2, [r3, #8]
1870:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 2160              		.loc 1 1870 0
 2161 0a52 02B0     		add	sp, sp, #8
 2162 0a54 7047     		bx	lr
 2163              		.cfi_endproc
 2164              	.LFE155:
 2166 0a56 00BF     		.align	2
 2167              		.global	USART_GetFlagStatus
 2168              		.thumb
 2169              		.thumb_func
 2171              	USART_GetFlagStatus:
 2172              	.LFB156:
1871:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1872:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1873:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Checks whether the specified USART flag is set or not.
1874:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1875:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1876:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_FLAG: specifies the flag to check.
1877:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
1878:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_REACK:  Receive Enable acknowledge flag.
1879:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_TEACK:  Transmit Enable acknowledge flag.
1880:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_WUF:  Wake up flag.
1881:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_RWU:  Receive Wake up flag.
1882:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_SBK:  Send Break flag.
1883:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_CMF:  Character match flag.
1884:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_BUSY:  Busy flag.
1885:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_ABRF:  Auto baud rate flag.
1886:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_ABRE:  Auto baud rate error flag.
1887:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_EOBF:  End of block flag.
1888:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_RTOF:  Receive time out flag.
1889:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_nCTSS:  Inverted nCTS input bit status.
1890:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_CTS:  CTS Change flag.
1891:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_LBD:  LIN Break detection flag.
1892:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_TXE:  Transmit data register empty flag.
1893:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_TC:  Transmission Complete flag.
1894:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_RXNE:  Receive data register not empty flag.
1895:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_IDLE:  Idle Line detection flag.
1896:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_ORE:  OverRun Error flag.
1897:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_NE:  Noise Error flag.
1898:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_FE:  Framing Error flag.
1899:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_PE:  Parity Error flag.
1900:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval The new state of USART_FLAG (SET or RESET).
1901:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1902:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint32_t USART_FLAG)
1903:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 2173              		.loc 1 1903 0
 2174              		.cfi_startproc
 2175              		@ args = 0, pretend = 0, frame = 16
 2176              		@ frame_needed = 0, uses_anonymous_args = 0
 2177              		@ link register save eliminated.
 2178 0a58 84B0     		sub	sp, sp, #16
 2179              	.LCFI47:
 2180              		.cfi_def_cfa_offset 16
 2181 0a5a 0190     		str	r0, [sp, #4]
 2182 0a5c 0091     		str	r1, [sp, #0]
1904:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   FlagStatus bitstatus = RESET;
 2183              		.loc 1 1904 0
 2184 0a5e 4FF00003 		mov	r3, #0
 2185 0a62 8DF80F30 		strb	r3, [sp, #15]
1905:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1906:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1907:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_FLAG(USART_FLAG));
1908:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
1909:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if ((USARTx->ISR & USART_FLAG) != (uint16_t)RESET)
 2186              		.loc 1 1909 0
 2187 0a66 019B     		ldr	r3, [sp, #4]
 2188 0a68 DA69     		ldr	r2, [r3, #28]
 2189 0a6a 009B     		ldr	r3, [sp, #0]
 2190 0a6c 1340     		ands	r3, r3, r2
 2191 0a6e 002B     		cmp	r3, #0
 2192 0a70 04D0     		beq	.L105
1910:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1911:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     bitstatus = SET;
 2193              		.loc 1 1911 0
 2194 0a72 4FF00103 		mov	r3, #1
 2195 0a76 8DF80F30 		strb	r3, [sp, #15]
 2196 0a7a 03E0     		b	.L106
 2197              	.L105:
1912:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1913:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1914:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1915:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     bitstatus = RESET;
 2198              		.loc 1 1915 0
 2199 0a7c 4FF00003 		mov	r3, #0
 2200 0a80 8DF80F30 		strb	r3, [sp, #15]
 2201              	.L106:
1916:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1917:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   return bitstatus;
 2202              		.loc 1 1917 0
 2203 0a84 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
1918:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 2204              		.loc 1 1918 0
 2205 0a88 1846     		mov	r0, r3
 2206 0a8a 04B0     		add	sp, sp, #16
 2207 0a8c 7047     		bx	lr
 2208              		.cfi_endproc
 2209              	.LFE156:
 2211 0a8e 00BF     		.align	2
 2212              		.global	USART_ClearFlag
 2213              		.thumb
 2214              		.thumb_func
 2216              	USART_ClearFlag:
 2217              	.LFB157:
1919:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1920:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1921:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Clears the USARTx's pending flags.
1922:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1923:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1924:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_FLAG: specifies the flag to clear.
1925:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be any combination of the following values:
1926:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_WUF:  Wake up flag.
1927:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_CMF:  Character match flag.
1928:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_EOBF:  End of block flag.
1929:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_RTOF:  Receive time out flag.
1930:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_CTS:  CTS Change flag.
1931:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_LBD:  LIN Break detection flag.
1932:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_TC:  Transmission Complete flag.
1933:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_IDLE:  IDLE line detected flag.
1934:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_ORE:  OverRun Error flag.
1935:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_NE: Noise Error flag.
1936:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_FE: Framing Error flag.
1937:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_PE:   Parity Errorflag.
1938:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *
1939:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
1940:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   - RXNE pending bit is cleared by a read to the USART_RDR register 
1941:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     (USART_ReceiveData()) or by writing 1 to the RXFRQ in the register USART_RQR
1942:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     (USART_RequestCmd()).
1943:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   - TC flag can be also cleared by software sequence: a read operation to 
1944:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     USART_SR register (USART_GetFlagStatus()) followed by a write operation
1945:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     to USART_TDR register (USART_SendData()).
1946:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   - TXE flag is cleared by a write to the USART_TDR register 
1947:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     (USART_SendData()) or by writing 1 to the TXFRQ in the register USART_RQR
1948:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     (USART_RequestCmd()).
1949:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   - SBKF flag is cleared by 1 to the SBKRQ in the register USART_RQR
1950:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     (USART_RequestCmd()).
1951:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1952:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1953:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_ClearFlag(USART_TypeDef* USARTx, uint32_t USART_FLAG)
1954:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 2218              		.loc 1 1954 0
 2219              		.cfi_startproc
 2220              		@ args = 0, pretend = 0, frame = 8
 2221              		@ frame_needed = 0, uses_anonymous_args = 0
 2222              		@ link register save eliminated.
 2223 0a90 82B0     		sub	sp, sp, #8
 2224              	.LCFI48:
 2225              		.cfi_def_cfa_offset 8
 2226 0a92 0190     		str	r0, [sp, #4]
 2227 0a94 0091     		str	r1, [sp, #0]
1955:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1956:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1957:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_CLEAR_FLAG(USART_FLAG));
1958:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****      
1959:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->ICR = USART_FLAG;
 2228              		.loc 1 1959 0
 2229 0a96 019B     		ldr	r3, [sp, #4]
 2230 0a98 009A     		ldr	r2, [sp, #0]
 2231 0a9a 1A62     		str	r2, [r3, #32]
1960:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 2232              		.loc 1 1960 0
 2233 0a9c 02B0     		add	sp, sp, #8
 2234 0a9e 7047     		bx	lr
 2235              		.cfi_endproc
 2236              	.LFE157:
 2238              		.align	2
 2239              		.global	USART_GetITStatus
 2240              		.thumb
 2241              		.thumb_func
 2243              	USART_GetITStatus:
 2244              	.LFB158:
1961:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1962:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1963:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Checks whether the specified USART interrupt has occurred or not.
1964:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1965:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1966:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_IT: specifies the USART interrupt source to check.
1967:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
1968:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_WU:  Wake up interrupt.
1969:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_CM:  Character match interrupt.
1970:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_EOB:  End of block interrupt.
1971:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_RTO:  Receive time out interrupt.
1972:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_CTS:  CTS change interrupt.
1973:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_LBD:  LIN Break detection interrupt.
1974:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_TXE:  Tansmit Data Register empty interrupt.
1975:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_TC:  Transmission complete interrupt.
1976:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_RXNE:  Receive Data register not empty interrupt.
1977:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_IDLE:  Idle line detection interrupt.
1978:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_ORE:  OverRun Error interrupt.
1979:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_NE:  Noise Error interrupt.
1980:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_FE:  Framing Error interrupt.
1981:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_PE:  Parity Error interrupt.
1982:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval The new state of USART_IT (SET or RESET).
1983:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1984:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint32_t USART_IT)
1985:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 2245              		.loc 1 1985 0
 2246              		.cfi_startproc
 2247              		@ args = 0, pretend = 0, frame = 24
 2248              		@ frame_needed = 0, uses_anonymous_args = 0
 2249              		@ link register save eliminated.
 2250 0aa0 86B0     		sub	sp, sp, #24
 2251              	.LCFI49:
 2252              		.cfi_def_cfa_offset 24
 2253 0aa2 0190     		str	r0, [sp, #4]
 2254 0aa4 0091     		str	r1, [sp, #0]
1986:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   uint32_t bitpos = 0, itmask = 0, usartreg = 0;
 2255              		.loc 1 1986 0
 2256 0aa6 4FF00003 		mov	r3, #0
 2257 0aaa 0393     		str	r3, [sp, #12]
 2258 0aac 4FF00003 		mov	r3, #0
 2259 0ab0 0593     		str	r3, [sp, #20]
 2260 0ab2 4FF00003 		mov	r3, #0
 2261 0ab6 0293     		str	r3, [sp, #8]
1987:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   ITStatus bitstatus = RESET;
 2262              		.loc 1 1987 0
 2263 0ab8 4FF00003 		mov	r3, #0
 2264 0abc 8DF81330 		strb	r3, [sp, #19]
1988:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1989:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1990:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_GET_IT(USART_IT)); 
1991:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
1992:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Get the USART register index */
1993:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   usartreg = (((uint16_t)USART_IT) >> 0x08);
 2265              		.loc 1 1993 0
 2266 0ac0 009B     		ldr	r3, [sp, #0]
 2267 0ac2 9BB2     		uxth	r3, r3
 2268 0ac4 4FEA1323 		lsr	r3, r3, #8
 2269 0ac8 9BB2     		uxth	r3, r3
 2270 0aca 0293     		str	r3, [sp, #8]
1994:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Get the interrupt position */
1995:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   itmask = USART_IT & IT_MASK;
 2271              		.loc 1 1995 0
 2272 0acc 009B     		ldr	r3, [sp, #0]
 2273 0ace DBB2     		uxtb	r3, r3
 2274 0ad0 0593     		str	r3, [sp, #20]
1996:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   itmask = (uint32_t)0x01 << itmask;
 2275              		.loc 1 1996 0
 2276 0ad2 059B     		ldr	r3, [sp, #20]
 2277 0ad4 4FF00102 		mov	r2, #1
 2278 0ad8 02FA03F3 		lsl	r3, r2, r3
 2279 0adc 0593     		str	r3, [sp, #20]
1997:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
1998:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (usartreg == 0x01) /* The IT  is in CR1 register */
 2280              		.loc 1 1998 0
 2281 0ade 029B     		ldr	r3, [sp, #8]
 2282 0ae0 012B     		cmp	r3, #1
 2283 0ae2 05D1     		bne	.L109
1999:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
2000:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     itmask &= USARTx->CR1;
 2284              		.loc 1 2000 0
 2285 0ae4 019B     		ldr	r3, [sp, #4]
 2286 0ae6 1B68     		ldr	r3, [r3, #0]
 2287 0ae8 059A     		ldr	r2, [sp, #20]
 2288 0aea 1340     		ands	r3, r3, r2
 2289 0aec 0593     		str	r3, [sp, #20]
 2290 0aee 0DE0     		b	.L110
 2291              	.L109:
2001:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
2002:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else if (usartreg == 0x02) /* The IT  is in CR2 register */
 2292              		.loc 1 2002 0
 2293 0af0 029B     		ldr	r3, [sp, #8]
 2294 0af2 022B     		cmp	r3, #2
 2295 0af4 05D1     		bne	.L111
2003:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
2004:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     itmask &= USARTx->CR2;
 2296              		.loc 1 2004 0
 2297 0af6 019B     		ldr	r3, [sp, #4]
 2298 0af8 5B68     		ldr	r3, [r3, #4]
 2299 0afa 059A     		ldr	r2, [sp, #20]
 2300 0afc 1340     		ands	r3, r3, r2
 2301 0afe 0593     		str	r3, [sp, #20]
 2302 0b00 04E0     		b	.L110
 2303              	.L111:
2005:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
2006:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else /* The IT  is in CR3 register */
2007:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
2008:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     itmask &= USARTx->CR3;
 2304              		.loc 1 2008 0
 2305 0b02 019B     		ldr	r3, [sp, #4]
 2306 0b04 9B68     		ldr	r3, [r3, #8]
 2307 0b06 059A     		ldr	r2, [sp, #20]
 2308 0b08 1340     		ands	r3, r3, r2
 2309 0b0a 0593     		str	r3, [sp, #20]
 2310              	.L110:
2009:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
2010:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
2011:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   bitpos = USART_IT >> 0x10;
 2311              		.loc 1 2011 0
 2312 0b0c 009B     		ldr	r3, [sp, #0]
 2313 0b0e 4FEA1343 		lsr	r3, r3, #16
 2314 0b12 0393     		str	r3, [sp, #12]
2012:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   bitpos = (uint32_t)0x01 << bitpos;
 2315              		.loc 1 2012 0
 2316 0b14 039B     		ldr	r3, [sp, #12]
 2317 0b16 4FF00102 		mov	r2, #1
 2318 0b1a 02FA03F3 		lsl	r3, r2, r3
 2319 0b1e 0393     		str	r3, [sp, #12]
2013:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   bitpos &= USARTx->ISR;
 2320              		.loc 1 2013 0
 2321 0b20 019B     		ldr	r3, [sp, #4]
 2322 0b22 DB69     		ldr	r3, [r3, #28]
 2323 0b24 039A     		ldr	r2, [sp, #12]
 2324 0b26 1340     		ands	r3, r3, r2
 2325 0b28 0393     		str	r3, [sp, #12]
2014:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if ((itmask != (uint16_t)RESET)&&(bitpos != (uint16_t)RESET))
 2326              		.loc 1 2014 0
 2327 0b2a 059B     		ldr	r3, [sp, #20]
 2328 0b2c 002B     		cmp	r3, #0
 2329 0b2e 07D0     		beq	.L112
 2330              		.loc 1 2014 0 is_stmt 0 discriminator 1
 2331 0b30 039B     		ldr	r3, [sp, #12]
 2332 0b32 002B     		cmp	r3, #0
 2333 0b34 04D0     		beq	.L112
2015:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
2016:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     bitstatus = SET;
 2334              		.loc 1 2016 0 is_stmt 1
 2335 0b36 4FF00103 		mov	r3, #1
 2336 0b3a 8DF81330 		strb	r3, [sp, #19]
 2337 0b3e 03E0     		b	.L113
 2338              	.L112:
2017:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
2018:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
2019:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
2020:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     bitstatus = RESET;
 2339              		.loc 1 2020 0
 2340 0b40 4FF00003 		mov	r3, #0
 2341 0b44 8DF81330 		strb	r3, [sp, #19]
 2342              	.L113:
2021:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
2022:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
2023:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   return bitstatus;  
 2343              		.loc 1 2023 0
 2344 0b48 9DF81330 		ldrb	r3, [sp, #19]	@ zero_extendqisi2
2024:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 2345              		.loc 1 2024 0
 2346 0b4c 1846     		mov	r0, r3
 2347 0b4e 06B0     		add	sp, sp, #24
 2348 0b50 7047     		bx	lr
 2349              		.cfi_endproc
 2350              	.LFE158:
 2352 0b52 00BF     		.align	2
 2353              		.global	USART_ClearITPendingBit
 2354              		.thumb
 2355              		.thumb_func
 2357              	USART_ClearITPendingBit:
 2358              	.LFB159:
2025:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
2026:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
2027:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Clears the USARTx's interrupt pending bits.
2028:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
2029:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
2030:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_IT: specifies the interrupt pending bit to clear.
2031:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
2032:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_WU:  Wake up interrupt.
2033:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_CM:  Character match interrupt.
2034:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_EOB:  End of block interrupt.
2035:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_RTO:  Receive time out interrupt.
2036:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_CTS:  CTS change interrupt.
2037:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_LBD:  LIN Break detection interrupt.
2038:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_TC:  Transmission complete interrupt.
2039:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_IDLE:  IDLE line detected interrupt.
2040:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_ORE:  OverRun Error interrupt.
2041:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_NE:  Noise Error interrupt.
2042:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_FE:  Framing Error interrupt.
2043:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_PE:  Parity Error interrupt.
2044:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
2045:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   - RXNE pending bit is cleared by a read to the USART_RDR register 
2046:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     (USART_ReceiveData()) or by writing 1 to the RXFRQ in the register USART_RQR
2047:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     (USART_RequestCmd()).
2048:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   - TC pending bit can be also cleared by software sequence: a read 
2049:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     operation to USART_SR register (USART_GetITStatus()) followed by a write 
2050:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     operation to USART_TDR register (USART_SendData()).
2051:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   - TXE pending bit is cleared by a write to the USART_TDR register 
2052:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     (USART_SendData()) or by writing 1 to the TXFRQ in the register USART_RQR
2053:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     (USART_RequestCmd()).
2054:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
2055:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
2056:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint32_t USART_IT)
2057:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 2359              		.loc 1 2057 0
 2360              		.cfi_startproc
 2361              		@ args = 0, pretend = 0, frame = 16
 2362              		@ frame_needed = 0, uses_anonymous_args = 0
 2363              		@ link register save eliminated.
 2364 0b54 84B0     		sub	sp, sp, #16
 2365              	.LCFI50:
 2366              		.cfi_def_cfa_offset 16
 2367 0b56 0190     		str	r0, [sp, #4]
 2368 0b58 0091     		str	r1, [sp, #0]
2058:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   uint32_t bitpos = 0, itmask = 0;
 2369              		.loc 1 2058 0
 2370 0b5a 4FF00003 		mov	r3, #0
 2371 0b5e 0393     		str	r3, [sp, #12]
 2372 0b60 4FF00003 		mov	r3, #0
 2373 0b64 0293     		str	r3, [sp, #8]
2059:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
2060:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
2061:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_CLEAR_IT(USART_IT)); 
2062:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
2063:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   bitpos = USART_IT >> 0x10;
 2374              		.loc 1 2063 0
 2375 0b66 009B     		ldr	r3, [sp, #0]
 2376 0b68 4FEA1343 		lsr	r3, r3, #16
 2377 0b6c 0393     		str	r3, [sp, #12]
2064:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   itmask = ((uint32_t)0x01 << (uint32_t)bitpos);
 2378              		.loc 1 2064 0
 2379 0b6e 039B     		ldr	r3, [sp, #12]
 2380 0b70 4FF00102 		mov	r2, #1
 2381 0b74 02FA03F3 		lsl	r3, r2, r3
 2382 0b78 0293     		str	r3, [sp, #8]
2065:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->ICR = (uint32_t)itmask;
 2383              		.loc 1 2065 0
 2384 0b7a 019B     		ldr	r3, [sp, #4]
 2385 0b7c 029A     		ldr	r2, [sp, #8]
 2386 0b7e 1A62     		str	r2, [r3, #32]
2066:../Libraries/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 2387              		.loc 1 2066 0
 2388 0b80 04B0     		add	sp, sp, #16
 2389 0b82 7047     		bx	lr
 2390              		.cfi_endproc
 2391              	.LFE159:
 2393              	.Letext0:
 2394              		.file 2 "c:\\program files\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/gcc/ar
 2395              		.file 3 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\Device\\
 2396              		.file 4 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\STM32F30
 2397              		.file 5 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\STM32F30
 2398              		.file 6 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\CMSIS\\I
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f30x_usart.c
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:19     .text:00000000 $t
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:24     .text:00000000 USART_DeInit
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:129    .text:000000d0 USART_Init
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:358    .text:00000258 USART_StructInit
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:404    .text:00000290 USART_ClockInit
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:461    .text:000002d0 USART_ClockStructInit
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:499    .text:000002f8 USART_Cmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:542    .text:00000328 USART_DirectionModeCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:589    .text:00000360 USART_OverSampling8Cmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:632    .text:00000390 USART_OneBitMethodCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:675    .text:000003c0 USART_MSBFirstCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:718    .text:000003f0 USART_DataInvCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:761    .text:00000420 USART_InvPinCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:808    .text:00000458 USART_SWAPPinCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:851    .text:00000488 USART_ReceiverTimeOutCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:894    .text:000004b8 USART_SetReceiverTimeOut
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:930    .text:000004dc USART_SetPrescaler
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:972    .text:00000510 USART_STOPModeCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1015   .text:00000540 USART_StopModeWakeUpSourceConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1051   .text:00000564 USART_AutoBaudRateCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1094   .text:00000594 USART_AutoBaudRateConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1130   .text:000005b8 USART_SendData
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1161   .text:000005d8 USART_ReceiveData
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1191   .text:000005f4 USART_SetAddress
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1229   .text:00000620 USART_MuteModeCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1272   .text:00000650 USART_MuteModeWakeUpConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1308   .text:00000674 USART_AddressDetectionConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1344   .text:00000698 USART_LINBreakDetectLengthConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1380   .text:000006bc USART_LINCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1423   .text:000006ec USART_HalfDuplexCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1466   .text:0000071c USART_SetGuardTime
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1510   .text:00000754 USART_SmartCardCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1553   .text:00000784 USART_SmartCardNACKCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1596   .text:000007b4 USART_SetAutoRetryCount
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1634   .text:000007e0 USART_SetBlockLength
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1672   .text:0000080c USART_IrDAConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1708   .text:00000830 USART_IrDACmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1751   .text:00000860 USART_DECmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1794   .text:00000890 USART_DEPolarityConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1830   .text:000008b4 USART_SetDEAssertionTime
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1867   .text:000008dc USART_SetDEDeassertionTime
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1904   .text:00000904 USART_DMACmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1951   .text:0000093c USART_DMAReceptionErrorConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:1987   .text:00000960 USART_ITConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:2081   .text:000009f0 USART_RequestCmd
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:2135   .text:00000a34 USART_OverrunDetectionConfig
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:2171   .text:00000a58 USART_GetFlagStatus
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:2216   .text:00000a90 USART_ClearFlag
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:2243   .text:00000aa0 USART_GetITStatus
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccyiYNcN.s:2357   .text:00000b54 USART_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq

   1              	# 1 "../src/startup/startup_stm32f30x.S"
   1              	/**
   0              	
   0              	
   0              	
   2              	  ******************************************************************************
   3              	  * @file      startup_stm32f30x.s
   4              	  * @author    MCD Application Team
   5              	  * @version   V1.0.0
   6              	  * @date      04-September-2012
   7              	  * @brief     stm32f30x vector table for Atollic TrueSTUDIO toolchain.
   8              	  *            This module performs:
   9              	  *                - Set the initial SP
  10              	  *                - Set the initial PC == Reset_Handler,
  11              	  *                - Set the vector table entries with the exceptions ISR address,
  12              	  *                - Configure the clock system  
  13              	  *                - Branches to main in the C library (which eventually
  14              	  *                  calls main()).
  15              	  *            After Reset the Cortex-M4 processor is in Thread mode,
  16              	  *            priority is Privileged, and the Stack is set to Main.
  17              	  ******************************************************************************
  18              	  * @attention
  19              	  *
  20              	  * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  21              	  *
  22              	  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  23              	  * You may not use this file except in compliance with the License.
  24              	  * You may obtain a copy of the License at:
  25              	  *
  26              	  *        http://www.st.com/software_license_agreement_liberty_v2
  27              	  *
  28              	  * Unless required by applicable law or agreed to in writing, software 
  29              	  * distributed under the License is distributed on an "AS IS" BASIS, 
  30              	  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  31              	  * See the License for the specific language governing permissions and
  32              	  * limitations under the License.
  33              	  *
  34              	  ******************************************************************************
  35              	  */
  36              	
  37              	  .syntax unified
  38              		.cpu cortex-m4
  39              		.fpu softvfp
  40              		.thumb
  41              	
  42              	.global	g_pfnVectors
  43              	.global	Default_Handler
  44              	
  45              	/* start address for the initialization values of the .data section.
  46              	defined in linker script */
  47 0000 00000000 	.word	_sidata
  48              	/* start address for the .data section. defined in linker script */
  49 0004 00000000 	.word	_sdata
  50              	/* end address for the .data section. defined in linker script */
  51 0008 00000000 	.word	_edata
  52              	/* start address for the .bss section. defined in linker script */
  53 000c 00000000 	.word	_sbss
  54              	/* end address for the .bss section. defined in linker script */
  55 0010 00000000 	.word	_ebss
  56              	
  57              	.equ  BootRAM,        0xF1E0F85F
  58              	/**
  59              	 * @brief  This is the code that gets called when the processor first
  60              	 *          starts execution following a reset event. Only the absolutely
  61              	 *          necessary set is performed, after which the application
  62              	 *          supplied main() routine is called.
  63              	 * @param  None
  64              	 * @retval : None
  65              	*/
  66              	
  67              	    .section	.text.Reset_Handler
  68              		.weak	Reset_Handler
  70              	Reset_Handler:
  71 0000 1C48     	 	ldr	r0, =0x20009FFC         // HJI 11/9/2012
  72 0002 1D49     		ldr	r1, =0xDEADBEEF         // HJI 11/9/2012
  73 0004 0268     		ldr	r2, [r0, #0]            // HJI 11/9/2012
  74 0006 0060     		str	r0, [r0, #0]            // HJI 11/9/2012
  75 0008 8A42     		cmp	r2, r1                  // HJI 11/9/2012
  76 000a 00F01F80 		beq	Reboot_Loader           // HJI 11/9/2012
  77              	
  78              	/* Copy the data segment initializers from flash to SRAM */
  79 000e 0021     	  movs	r1, #0
  80 0010 00F004B8 	  b	LoopCopyDataInit
  81              	
  82              	CopyDataInit:
  83 0014 194B     		ldr	r3, =_sidata
  84 0016 5B58     		ldr	r3, [r3, r1]
  85 0018 4350     		str	r3, [r0, r1]
  86 001a 0431     		adds	r1, r1, #4
  87              	
  88              	LoopCopyDataInit:
  89 001c 1848     		ldr	r0, =_sdata
  90 001e 194B     		ldr	r3, =_edata
  91 0020 4218     		adds	r2, r0, r1
  92 0022 9A42     		cmp	r2, r3
  93 0024 FFF4F6AF 		bcc	CopyDataInit
  94 0028 174A     		ldr	r2, =_sbss
  95 002a 00F003B8 		b	LoopFillZerobss
  96              	/* Zero fill the bss segment. */
  97              	FillZerobss:
  98 002e 0023     		movs	r3, #0
  99 0030 42F8043B 		str	r3, [r2], #4
 100              	
 101              	LoopFillZerobss:
 102 0034 154B     		ldr	r3, = _ebss
 103 0036 9A42     		cmp	r2, r3
 104 0038 FFF4F9AF 		bcc	FillZerobss
 105              	
 106              	/* Call the clock system intitialization function.*/
 107 003c FFF7FEFF 	    bl  SystemInit
 108              	/* Call static constructors */
 109 0040 FFF7FEFF 	    bl __libc_init_array
 110              	/* Call the application's entry point.*/
 111 0044 FFF7FEFF 		bl	main
 112              	
 113              	LoopForever:
 114 0048 FFF7FEBF 	    b LoopForever
 115              	    
 116              	.equ	RCC_AHBENR,	    0x40021014  // HJI 11/9/2012
 117              	.equ	GPIOE_CLK_MASK,	    0x00200000  // HJI 11/9/2012
 118              	
 119              	.equ    GPIOE_MODER,        0x48001000  // HJI 11/9/2012
 120              	.equ    GPIOE_MODE_MASK,    0x11110000  // HJI 11/9/2012
 121              	
 122              	.equ    GPIOE_OTYPER,       0x48001004  // HJI 11/9/2012
 123              	.equ    GPIOE_OTYPE_MASK,   0x00000000  // HJI 11/9/2012
 124              	
 125              	.equ    GPIOE_OSPEEDR,      0x48001008  // HJI 11/9/2012
 126              	.equ    GPIOE_OSPEED_MASK,  0x00000000  // HJI 11/9/2012
 127              	
 128              	.equ    GPIOE_ODR,          0x48001014  // HJI 11/9/2012
 129              	.equ    GPIOE_OD_MASK,      0x00005500  // HJI 11/9/2012
 130              	
 131              	Reboot_Loader:                          // HJI 11/9/2012
 132              	
 133              	        // RCC Enable GPIOE Clock       // HJI 11/9/2012
 134 004c 104E     	        ldr     r6, =RCC_AHBENR         // HJI 11/9/2012
 135 004e 1148     	        ldr     r0, =GPIOE_CLK_MASK     // HJI 11/9/2012
 136 0050 3060     	        str     r0, [r6];               // HJI 11/9/2012
 137              	        
 138              	        // Set GPIOE 8-15 as Outputs    // HJI 11/9/2012
 139 0052 114E     	        ldr     r6, =GPIOE_MODER        // HJI 11/9/2012
 140 0054 1148     	        ldr     r0, =GPIOE_MODE_MASK    // HJI 11/9/2012
 141 0056 3060     	        str     r0, [r6]                // HJI 11/9/2012
 142              	        
 143              	        // Set GPIOE 8-15 as Push-Pull  // HJI 11/9/2012
 144 0058 114E     	        ldr     r6, =GPIOE_OTYPER       // HJI 11/9/2012
 145 005a 1248     	        ldr     r0, =GPIOE_OTYPE_MASK   // HJI 11/9/2012
 146 005c 3060     	        str     r0, [r6]                // HJI 11/9/2012
 147              	        
 148              	        // Set GPIOE 8-15 at 2 MHz      // HJI 11/9/2012
 149 005e 124E     	        ldr     r6, =GPIOE_OSPEEDR      // HJI 11/9/2012
 150 0060 1048     	        ldr     r0, =GPIOE_OSPEED_MASK  // HJI 11/9/2012
 151 0062 3060     	        str     r0, [r6]                // HJI 11/9/2012
 152              	        
 153              	        // Set GPIOE 8-15 High          // HJI 11/9/2012
 154 0064 114E     	        ldr     r6, =GPIOE_ODR          // HJI 11/9/2012
 155 0066 1248     	        ldr     r0, =GPIOE_OD_MASK      // HJI 11/9/2012
 156 0068 3060     	        str     r0, [r6]                // HJI 11/9/2012
 157              	        
 158              	        // Reboot to ROM                // HJI 11/9/2012
 159 006a 1248     	        ldr     r0, =0x1FFF0000         // HJI 11/9/2012
 160 006c D0F800D0 	        ldr     sp,[r0, #0]             // HJI 11/9/2012
 161 0070 4068     	        ldr     r0,[r0, #4]             // HJI 11/9/2012
 162 0072 0047     	        bx      r0                      // HJI 11/9/2012
 163              	
 165              	
 166              	/**
 167              	 * @brief  This is the code that gets called when the processor receives an
 168              	 *         unexpected interrupt.  This simply enters an infinite loop, preserving
 169              	 *         the system state for examination by a debugger.
 170              	 *
 171              	 * @param  None
 172              	 * @retval : None
 173              	*/
 174              	    .section	.text.Default_Handler,"ax",%progbits
 175              	Default_Handler:
 176              	Infinite_Loop:
 177 0000 FFF7FEBF 		b	Infinite_Loop
 179              	/******************************************************************************
 180              	*
 181              	* The minimal vector table for a Cortex-M4.  Note that the proper constructs
 182              	* must be placed on this to ensure that it ends up at physical address
 183              	* 0x0000.0000.
 184              	*
 185              	******************************************************************************/
 186              	 	.section	.isr_vector,"a",%progbits
 189              	
 190              	
 191              	g_pfnVectors:
 192 0000 00000000 		.word	_estack
 193 0004 00000000 		.word	Reset_Handler
 194 0008 00000000 		.word	NMI_Handler
 195 000c 00000000 		.word	HardFault_Handler
 196 0010 00000000 		.word	MemManage_Handler
 197 0014 00000000 		.word	BusFault_Handler
 198 0018 00000000 		.word	UsageFault_Handler
 199 001c 00000000 		.word	0
 200 0020 00000000 		.word	0
 201 0024 00000000 		.word	0
 202 0028 00000000 		.word	0
 203 002c 00000000 		.word	SVC_Handler
 204 0030 00000000 		.word	DebugMon_Handler
 205 0034 00000000 		.word	0
 206 0038 00000000 		.word	PendSV_Handler
 207 003c 00000000 		.word	SysTick_Handler
 208 0040 00000000 		.word	WWDG_IRQHandler
 209 0044 00000000 		.word	PVD_IRQHandler
 210 0048 00000000 		.word	TAMPER_STAMP_IRQHandler
 211 004c 00000000 		.word	RTC_WKUP_IRQHandler
 212 0050 00000000 		.word	FLASH_IRQHandler
 213 0054 00000000 		.word	RCC_IRQHandler
 214 0058 00000000 		.word	EXTI0_IRQHandler
 215 005c 00000000 		.word	EXTI1_IRQHandler
 216 0060 00000000 		.word	EXTI2_TS_IRQHandler
 217 0064 00000000 		.word	EXTI3_IRQHandler
 218 0068 00000000 		.word	EXTI4_IRQHandler
 219 006c 00000000 		.word	DMA1_Channel1_IRQHandler
 220 0070 00000000 		.word	DMA1_Channel2_IRQHandler
 221 0074 00000000 		.word	DMA1_Channel3_IRQHandler
 222 0078 00000000 		.word	DMA1_Channel4_IRQHandler
 223 007c 00000000 		.word	DMA1_Channel5_IRQHandler
 224 0080 00000000 		.word	DMA1_Channel6_IRQHandler
 225 0084 00000000 		.word	DMA1_Channel7_IRQHandler
 226 0088 00000000 		.word	ADC1_2_IRQHandler
 227 008c 00000000 		.word	USB_HP_CAN1_TX_IRQHandler
 228 0090 00000000 		.word	USB_LP_CAN1_RX0_IRQHandler
 229 0094 00000000 		.word	CAN1_RX1_IRQHandler
 230 0098 00000000 		.word	CAN1_SCE_IRQHandler
 231 009c 00000000 		.word	EXTI9_5_IRQHandler
 232 00a0 00000000 		.word	TIM1_BRK_TIM15_IRQHandler
 233 00a4 00000000 		.word	TIM1_UP_TIM16_IRQHandler
 234 00a8 00000000 		.word	TIM1_TRG_COM_TIM17_IRQHandler
 235 00ac 00000000 		.word	TIM1_CC_IRQHandler
 236 00b0 00000000 		.word	TIM2_IRQHandler
 237 00b4 00000000 		.word	TIM3_IRQHandler
 238 00b8 00000000 		.word	TIM4_IRQHandler
 239 00bc 00000000 		.word	I2C1_EV_IRQHandler
 240 00c0 00000000 		.word	I2C1_ER_IRQHandler
 241 00c4 00000000 		.word	I2C2_EV_IRQHandler
 242 00c8 00000000 		.word	I2C2_ER_IRQHandler
 243 00cc 00000000 		.word	SPI1_IRQHandler
 244 00d0 00000000 		.word	SPI2_IRQHandler
 245 00d4 00000000 		.word	USART1_IRQHandler
 246 00d8 00000000 		.word	USART2_IRQHandler
 247 00dc 00000000 		.word	USART3_IRQHandler
 248 00e0 00000000 		.word	EXTI15_10_IRQHandler
 249 00e4 00000000 		.word	RTC_Alarm_IRQHandler
 250 00e8 00000000 		.word	USBWakeUp_IRQHandler
 251 00ec 00000000 		.word	TIM8_BRK_IRQHandler
 252 00f0 00000000 		.word	TIM8_UP_IRQHandler
 253 00f4 00000000 		.word	TIM8_TRG_COM_IRQHandler
 254 00f8 00000000 		.word	TIM8_CC_IRQHandler
 255 00fc 00000000 		.word	ADC3_IRQHandler
 256 0100 00000000 		.word	0
 257 0104 00000000 		.word	0
 258 0108 00000000 		.word	0
 259 010c 00000000 		.word	SPI3_IRQHandler
 260 0110 00000000 		.word	UART4_IRQHandler
 261 0114 00000000 		.word	UART5_IRQHandler
 262 0118 00000000 		.word	TIM6_DAC_IRQHandler
 263 011c 00000000 		.word	TIM7_IRQHandler
 264 0120 00000000 		.word	DMA2_Channel1_IRQHandler
 265 0124 00000000 		.word	DMA2_Channel2_IRQHandler
 266 0128 00000000 		.word	DMA2_Channel3_IRQHandler
 267 012c 00000000 		.word	DMA2_Channel4_IRQHandler
 268 0130 00000000 		.word	DMA2_Channel5_IRQHandler
 269 0134 00000000 		.word	ADC4_IRQHandler
 270 0138 00000000 		.word	0
 271 013c 00000000 		.word	0
 272 0140 00000000 		.word	COMP1_2_3_IRQHandler
 273 0144 00000000 		.word	COMP4_5_6_IRQHandler
 274 0148 00000000 		.word	COMP7_IRQHandler
 275 014c 00000000 		.word	0
 276 0150 00000000 		.word	0
 277 0154 00000000 		.word	0
 278 0158 00000000 		.word	0
 279 015c 00000000 		.word	0
 280 0160 00000000 		.word	0
 281 0164 00000000 		.word	0
 282 0168 00000000 		.word	USB_HP_IRQHandler
 283 016c 00000000 		.word	USB_LP_IRQHandler
 284 0170 00000000 		.word	USBWakeUp_RMP_IRQHandler
 285 0174 00000000 		.word	0
 286 0178 00000000 		.word	0
 287 017c 00000000 		.word	0
 288 0180 00000000 		.word	0
 289 0184 00000000 		.word	FPU_IRQHandler
 290              	
 291              	/*******************************************************************************
 292              	*
 293              	* Provide weak aliases for each Exception handler to the Default_Handler.
 294              	* As they are weak aliases, any function with the same name will override
 295              	* this definition.
 296              	*
 297              	*******************************************************************************/
 298              	
 299              	  .weak	NMI_Handler
 300              		.thumb_set NMI_Handler,Default_Handler
 301              	
 302              	  .weak	HardFault_Handler
 303              		.thumb_set HardFault_Handler,Default_Handler
 304              	
 305              	  .weak	MemManage_Handler
 306              		.thumb_set MemManage_Handler,Default_Handler
 307              	
 308              	  .weak	BusFault_Handler
 309              		.thumb_set BusFault_Handler,Default_Handler
 310              	
 311              		.weak	UsageFault_Handler
 312              		.thumb_set UsageFault_Handler,Default_Handler
 313              	
 314              		.weak	SVC_Handler
 315              		.thumb_set SVC_Handler,Default_Handler
 316              	
 317              		.weak	DebugMon_Handler
 318              		.thumb_set DebugMon_Handler,Default_Handler
 319              	
 320              		.weak	PendSV_Handler
 321              		.thumb_set PendSV_Handler,Default_Handler
 322              	
 323              		.weak	SysTick_Handler
 324              		.thumb_set SysTick_Handler,Default_Handler
 325              	
 326              		.weak	WWDG_IRQHandler
 327              		.thumb_set WWDG_IRQHandler,Default_Handler
 328              	
 329              		.weak	PVD_IRQHandler
 330              		.thumb_set PVD_IRQHandler,Default_Handler
 331              	
 332              		.weak	TAMPER_STAMP_IRQHandler
 333              		.thumb_set TAMPER_STAMP_IRQHandler,Default_Handler
 334              	
 335              		.weak	RTC_WKUP_IRQHandler
 336              		.thumb_set RTC_WKUP_IRQHandler,Default_Handler
 337              	
 338              		.weak	FLASH_IRQHandler
 339              		.thumb_set FLASH_IRQHandler,Default_Handler
 340              	
 341              		.weak	RCC_IRQHandler
 342              		.thumb_set RCC_IRQHandler,Default_Handler
 343              	
 344              		.weak	EXTI0_IRQHandler
 345              		.thumb_set EXTI0_IRQHandler,Default_Handler
 346              	
 347              		.weak	EXTI1_IRQHandler
 348              		.thumb_set EXTI1_IRQHandler,Default_Handler
 349              	
 350              		.weak	EXTI2_TS_IRQHandler
 351              		.thumb_set EXTI2_TS_IRQHandler,Default_Handler
 352              	
 353              		.weak	EXTI3_IRQHandler
 354              		.thumb_set EXTI3_IRQHandler,Default_Handler
 355              	
 356              		.weak	EXTI4_IRQHandler
 357              		.thumb_set EXTI4_IRQHandler,Default_Handler
 358              	
 359              		.weak	DMA1_Channel1_IRQHandler
 360              		.thumb_set DMA1_Channel1_IRQHandler,Default_Handler
 361              	
 362              		.weak	DMA1_Channel2_IRQHandler
 363              		.thumb_set DMA1_Channel2_IRQHandler,Default_Handler
 364              	
 365              		.weak	DMA1_Channel3_IRQHandler
 366              		.thumb_set DMA1_Channel3_IRQHandler,Default_Handler
 367              	
 368              		.weak	DMA1_Channel4_IRQHandler
 369              		.thumb_set DMA1_Channel4_IRQHandler,Default_Handler
 370              	
 371              		.weak	DMA1_Channel5_IRQHandler
 372              		.thumb_set DMA1_Channel5_IRQHandler,Default_Handler
 373              	
 374              		.weak	DMA1_Channel6_IRQHandler
 375              		.thumb_set DMA1_Channel6_IRQHandler,Default_Handler
 376              	
 377              		.weak	DMA1_Channel7_IRQHandler
 378              		.thumb_set DMA1_Channel7_IRQHandler,Default_Handler
 379              	
 380              		.weak	ADC1_2_IRQHandler
 381              		.thumb_set ADC1_2_IRQHandler,Default_Handler
 382              	
 383              		.weak	USB_HP_CAN1_TX_IRQHandler
 384              		.thumb_set USB_HP_CAN1_TX_IRQHandler,Default_Handler
 385              	
 386              		.weak	USB_LP_CAN1_RX0_IRQHandler
 387              		.thumb_set USB_LP_CAN1_RX0_IRQHandler,Default_Handler
 388              	
 389              		.weak	CAN1_RX1_IRQHandler
 390              		.thumb_set CAN1_RX1_IRQHandler,Default_Handler
 391              	
 392              		.weak	CAN1_SCE_IRQHandler
 393              		.thumb_set CAN1_SCE_IRQHandler,Default_Handler
 394              	
 395              		.weak	EXTI9_5_IRQHandler
 396              		.thumb_set EXTI9_5_IRQHandler,Default_Handler
 397              	
 398              		.weak	TIM1_BRK_TIM15_IRQHandler
 399              		.thumb_set TIM1_BRK_TIM15_IRQHandler,Default_Handler
 400              	
 401              		.weak	TIM1_UP_TIM16_IRQHandler
 402              		.thumb_set TIM1_UP_TIM16_IRQHandler,Default_Handler
 403              	
 404              		.weak	TIM1_TRG_COM_TIM17_IRQHandler
 405              		.thumb_set TIM1_TRG_COM_TIM17_IRQHandler,Default_Handler
 406              	
 407              		.weak	TIM1_CC_IRQHandler
 408              		.thumb_set TIM1_CC_IRQHandler,Default_Handler
 409              	
 410              		.weak	TIM2_IRQHandler
 411              		.thumb_set TIM2_IRQHandler,Default_Handler
 412              	
 413              		.weak	TIM3_IRQHandler
 414              		.thumb_set TIM3_IRQHandler,Default_Handler
 415              	
 416              		.weak	TIM4_IRQHandler
 417              		.thumb_set TIM4_IRQHandler,Default_Handler
 418              	
 419              		.weak	I2C1_EV_IRQHandler
 420              		.thumb_set I2C1_EV_IRQHandler,Default_Handler
 421              	
 422              		.weak	I2C1_ER_IRQHandler
 423              		.thumb_set I2C1_ER_IRQHandler,Default_Handler
 424              	
 425              		.weak	I2C2_EV_IRQHandler
 426              		.thumb_set I2C2_EV_IRQHandler,Default_Handler
 427              	
 428              		.weak	I2C2_ER_IRQHandler
 429              		.thumb_set I2C2_ER_IRQHandler,Default_Handler
 430              	
 431              		.weak	SPI1_IRQHandler
 432              		.thumb_set SPI1_IRQHandler,Default_Handler
 433              	
 434              		.weak	SPI2_IRQHandler
 435              		.thumb_set SPI2_IRQHandler,Default_Handler
 436              	
 437              		.weak	USART1_IRQHandler
 438              		.thumb_set USART1_IRQHandler,Default_Handler
 439              	
 440              		.weak	USART2_IRQHandler
 441              		.thumb_set USART2_IRQHandler,Default_Handler
 442              	
 443              		.weak	USART3_IRQHandler
 444              		.thumb_set USART3_IRQHandler,Default_Handler
 445              	
 446              		.weak	EXTI15_10_IRQHandler
 447              		.thumb_set EXTI15_10_IRQHandler,Default_Handler
 448              	
 449              		.weak	RTC_Alarm_IRQHandler
 450              		.thumb_set RTC_Alarm_IRQHandler,Default_Handler
 451              	
 452              		.weak	USBWakeUp_IRQHandler
 453              		.thumb_set USBWakeUp_IRQHandler,Default_Handler
 454              	
 455              		.weak	TIM8_BRK_IRQHandler
 456              		.thumb_set TIM8_BRK_IRQHandler,Default_Handler
 457              	
 458              		.weak	TIM8_UP_IRQHandler
 459              		.thumb_set TIM8_UP_IRQHandler,Default_Handler
 460              	
 461              		.weak	TIM8_TRG_COM_IRQHandler
 462              		.thumb_set TIM8_TRG_COM_IRQHandler,Default_Handler
 463              	
 464              		.weak	TIM8_CC_IRQHandler
 465              		.thumb_set TIM8_CC_IRQHandler,Default_Handler
 466              	
 467              		.weak	ADC3_IRQHandler
 468              		.thumb_set ADC3_IRQHandler,Default_Handler
 469              	
 470              		.weak	SPI3_IRQHandler
 471              		.thumb_set SPI3_IRQHandler,Default_Handler
 472              	
 473              		.weak	UART4_IRQHandler
 474              		.thumb_set UART4_IRQHandler,Default_Handler
 475              	
 476              		.weak	UART5_IRQHandler
 477              		.thumb_set UART5_IRQHandler,Default_Handler
 478              	
 479              		.weak	TIM6_DAC_IRQHandler
 480              		.thumb_set TIM6_DAC_IRQHandler,Default_Handler
 481              	
 482              		.weak	TIM7_IRQHandler
 483              		.thumb_set TIM7_IRQHandler,Default_Handler
 484              	
 485              		.weak	DMA2_Channel1_IRQHandler
 486              		.thumb_set DMA2_Channel1_IRQHandler,Default_Handler
 487              	
 488              		.weak	DMA2_Channel2_IRQHandler
 489              		.thumb_set DMA2_Channel2_IRQHandler,Default_Handler
 490              	
 491              		.weak	DMA2_Channel3_IRQHandler
 492              		.thumb_set DMA2_Channel3_IRQHandler,Default_Handler
 493              	
 494              		.weak	DMA2_Channel4_IRQHandler
 495              		.thumb_set DMA2_Channel4_IRQHandler,Default_Handler
 496              	
 497              		.weak	DMA2_Channel5_IRQHandler
 498              		.thumb_set DMA2_Channel5_IRQHandler,Default_Handler
 499              	
 500              		.weak	ADC4_IRQHandler
 501              		.thumb_set ADC4_IRQHandler,Default_Handler	
 502              		
 503              		.weak	COMP1_2_3_IRQHandler
 504              		.thumb_set COMP1_2_3_IRQHandler,Default_Handler
 505              		
 506              		.weak	COMP4_5_6_IRQHandler
 507              		.thumb_set COMP4_5_6_IRQHandler,Default_Handler
 508              		
 509              		.weak	COMP7_IRQHandler
 510              		.thumb_set COMP7_IRQHandler,Default_Handler	
 511              		
 512              		.weak	USB_HP_IRQHandler
 513              		.thumb_set USB_HP_IRQHandler,Default_Handler
 514              		
 515              		.weak	USB_LP_IRQHandler
 516              		.thumb_set USB_LP_IRQHandler,Default_Handler
 517              		
 518              		.weak	USBWakeUp_RMP_IRQHandler
 519              		.thumb_set USBWakeUp_RMP_IRQHandler,Default_Handler
 520              		
 521              		.weak	FPU_IRQHandler
 522              		.thumb_set FPU_IRQHandler,Default_Handler
DEFINED SYMBOLS
../src/startup/startup_stm32f30x.S:191    .isr_vector:00000000 g_pfnVectors
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 Default_Handler
../src/startup/startup_stm32f30x.S:57     *ABS*:f1e0f85f BootRAM
../src/startup/startup_stm32f30x.S:70     .text.Reset_Handler:00000000 Reset_Handler
../src/startup/startup_stm32f30x.S:71     .text.Reset_Handler:00000000 $t
../src/startup/startup_stm32f30x.S:131    .text.Reset_Handler:0000004c Reboot_Loader
../src/startup/startup_stm32f30x.S:88     .text.Reset_Handler:0000001c LoopCopyDataInit
../src/startup/startup_stm32f30x.S:82     .text.Reset_Handler:00000014 CopyDataInit
../src/startup/startup_stm32f30x.S:101    .text.Reset_Handler:00000034 LoopFillZerobss
../src/startup/startup_stm32f30x.S:97     .text.Reset_Handler:0000002e FillZerobss
../src/startup/startup_stm32f30x.S:113    .text.Reset_Handler:00000048 LoopForever
../src/startup/startup_stm32f30x.S:116    *ABS*:40021014 RCC_AHBENR
../src/startup/startup_stm32f30x.S:117    *ABS*:00200000 GPIOE_CLK_MASK
../src/startup/startup_stm32f30x.S:119    *ABS*:48001000 GPIOE_MODER
../src/startup/startup_stm32f30x.S:120    *ABS*:11110000 GPIOE_MODE_MASK
../src/startup/startup_stm32f30x.S:122    *ABS*:48001004 GPIOE_OTYPER
../src/startup/startup_stm32f30x.S:123    *ABS*:00000000 GPIOE_OTYPE_MASK
../src/startup/startup_stm32f30x.S:125    *ABS*:48001008 GPIOE_OSPEEDR
../src/startup/startup_stm32f30x.S:126    *ABS*:00000000 GPIOE_OSPEED_MASK
../src/startup/startup_stm32f30x.S:128    *ABS*:48001014 GPIOE_ODR
../src/startup/startup_stm32f30x.S:129    *ABS*:00005500 GPIOE_OD_MASK
../src/startup/startup_stm32f30x.S:176    .text.Default_Handler:00000000 Infinite_Loop
../src/startup/startup_stm32f30x.S:177    .text.Default_Handler:00000000 $t
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 NMI_Handler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 HardFault_Handler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 MemManage_Handler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 BusFault_Handler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 UsageFault_Handler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 SVC_Handler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 DebugMon_Handler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 PendSV_Handler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 SysTick_Handler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 WWDG_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 PVD_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 TAMPER_STAMP_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 RTC_WKUP_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 FLASH_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 RCC_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 EXTI0_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 EXTI1_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 EXTI2_TS_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 EXTI3_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 EXTI4_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 DMA1_Channel1_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 DMA1_Channel2_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 DMA1_Channel3_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 DMA1_Channel4_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 DMA1_Channel5_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 DMA1_Channel6_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 DMA1_Channel7_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 ADC1_2_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 USB_HP_CAN1_TX_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 USB_LP_CAN1_RX0_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 CAN1_RX1_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 CAN1_SCE_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 EXTI9_5_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 TIM1_BRK_TIM15_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 TIM1_UP_TIM16_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 TIM1_TRG_COM_TIM17_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 TIM1_CC_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 TIM2_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 TIM3_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 TIM4_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 I2C1_EV_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 I2C1_ER_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 I2C2_EV_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 I2C2_ER_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 SPI1_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 SPI2_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 USART1_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 USART2_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 USART3_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 EXTI15_10_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 RTC_Alarm_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 USBWakeUp_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 TIM8_BRK_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 TIM8_UP_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 TIM8_TRG_COM_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 TIM8_CC_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 ADC3_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 SPI3_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 UART4_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 UART5_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 TIM6_DAC_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 TIM7_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 DMA2_Channel1_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 DMA2_Channel2_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 DMA2_Channel3_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 DMA2_Channel4_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 DMA2_Channel5_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 ADC4_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 COMP1_2_3_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 COMP4_5_6_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 COMP7_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 USB_HP_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 USB_LP_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 USBWakeUp_RMP_IRQHandler
../src/startup/startup_stm32f30x.S:175    .text.Default_Handler:00000000 FPU_IRQHandler
../src/startup/startup_stm32f30x.S:174    .text.Reset_Handler:00000074 $d
                   .debug_aranges:0000000c $d

UNDEFINED SYMBOLS
_sidata
_sdata
_edata
_sbss
_ebss
SystemInit
__libc_init_array
main
_estack

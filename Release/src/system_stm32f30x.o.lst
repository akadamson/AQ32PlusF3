   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"system_stm32f30x.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	SystemCoreClock
  20              		.data
  21              		.align	2
  24              	SystemCoreClock:
  25 0000 00A24A04 		.word	72000000
  26              		.global	AHBPrescTable
  27              		.align	2
  30              	AHBPrescTable:
  31 0004 00       		.byte	0
  32 0005 00       		.byte	0
  33 0006 00       		.byte	0
  34 0007 00       		.byte	0
  35 0008 00       		.byte	0
  36 0009 00       		.byte	0
  37 000a 00       		.byte	0
  38 000b 00       		.byte	0
  39 000c 01       		.byte	1
  40 000d 02       		.byte	2
  41 000e 03       		.byte	3
  42 000f 04       		.byte	4
  43 0010 06       		.byte	6
  44 0011 07       		.byte	7
  45 0012 08       		.byte	8
  46 0013 09       		.byte	9
  47              		.text
  48              		.align	2
  49              		.global	SystemInit
  50              		.thumb
  51              		.thumb_func
  53              	SystemInit:
  54              	.LFB111:
  55              		.file 1 "../src/system_stm32f30x.c"
   1:../src/system_stm32f30x.c **** /**
   2:../src/system_stm32f30x.c ****   ******************************************************************************
   3:../src/system_stm32f30x.c ****   * @file    system_stm32f30x.c
   4:../src/system_stm32f30x.c ****   * @author  MCD Application Team
   5:../src/system_stm32f30x.c ****   * @version V1.0.0
   6:../src/system_stm32f30x.c ****   * @date    13-November-2012
   7:../src/system_stm32f30x.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   8:../src/system_stm32f30x.c ****   *          This file contains the system clock configuration for STM32F30x devices,
   9:../src/system_stm32f30x.c ****   *          and is generated by the clock configuration tool
  10:../src/system_stm32f30x.c ****   *          stm32f30x_Clock_Configuration_V1.0.0.xls
  11:../src/system_stm32f30x.c ****   *
  12:../src/system_stm32f30x.c ****   * 1.  This file provides two functions and one global variable to be called from
  13:../src/system_stm32f30x.c ****   *     user application:
  14:../src/system_stm32f30x.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  15:../src/system_stm32f30x.c ****   *                      and Divider factors, AHB/APBx prescalers and Flash settings),
  16:../src/system_stm32f30x.c ****   *                      depending on the configuration made in the clock xls tool.
  17:../src/system_stm32f30x.c ****   *                      This function is called at startup just after reset and
  18:../src/system_stm32f30x.c ****   *                      before branch to main program. This call is made inside
  19:../src/system_stm32f30x.c ****   *                      the "startup_stm32f30x.s" file.
  20:../src/system_stm32f30x.c ****   *
  21:../src/system_stm32f30x.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  22:../src/system_stm32f30x.c ****   *                                  by the user application to setup the SysTick
  23:../src/system_stm32f30x.c ****   *                                  timer or configure other parameters.
  24:../src/system_stm32f30x.c ****   *
  25:../src/system_stm32f30x.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  26:../src/system_stm32f30x.c ****   *                                 be called whenever the core clock is changed
  27:../src/system_stm32f30x.c ****   *                                 during program execution.
  28:../src/system_stm32f30x.c ****   *
  29:../src/system_stm32f30x.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  30:../src/system_stm32f30x.c ****   *    Then SystemInit() function is called, in "startup_stm32f30x.s" file, to
  31:../src/system_stm32f30x.c ****   *    configure the system clock before to branch to main program.
  32:../src/system_stm32f30x.c ****   *
  33:../src/system_stm32f30x.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  34:../src/system_stm32f30x.c ****   *    function will do nothing and HSI still used as system clock source. User can
  35:../src/system_stm32f30x.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  36:../src/system_stm32f30x.c ****   *
  37:../src/system_stm32f30x.c ****   * 4. The default value of HSE crystal is set to 8MHz, refer to "HSE_VALUE" define
  38:../src/system_stm32f30x.c ****   *    in "stm32f30x.h" file. When HSE is used as system clock source, directly or
  39:../src/system_stm32f30x.c ****   *    through PLL, and you are using different crystal you have to adapt the HSE
  40:../src/system_stm32f30x.c ****   *    value to your own configuration.
  41:../src/system_stm32f30x.c ****   *
  42:../src/system_stm32f30x.c ****   * 5. This file configures the system clock as follows:
  43:../src/system_stm32f30x.c ****   *=============================================================================
  44:../src/system_stm32f30x.c ****   *                         Supported STM32F30x device
  45:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  46:../src/system_stm32f30x.c ****   *        System Clock source                    | PLL (HSE)
  47:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  48:../src/system_stm32f30x.c ****   *        SYSCLK(Hz)                             | 72000000
  49:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  50:../src/system_stm32f30x.c ****   *        HCLK(Hz)                               | 72000000
  51:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  52:../src/system_stm32f30x.c ****   *        AHB Prescaler                          | 1
  53:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  54:../src/system_stm32f30x.c ****   *        APB2 Prescaler                         | 2
  55:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  56:../src/system_stm32f30x.c ****   *        APB1 Prescaler                         | 2
  57:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  58:../src/system_stm32f30x.c ****   *        HSE Frequency(Hz)                      | 8000000
  59:../src/system_stm32f30x.c ****   *----------------------------------------------------------------------------
  60:../src/system_stm32f30x.c ****   *        PLLMUL                                 | 9
  61:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  62:../src/system_stm32f30x.c ****   *        PREDIV                                 | 1
  63:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  64:../src/system_stm32f30x.c ****   *        USB Clock                              | ENABLE
  65:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  66:../src/system_stm32f30x.c ****   *        Flash Latency(WS)                      | 2
  67:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  68:../src/system_stm32f30x.c ****   *        Prefetch Buffer                        | OFF
  69:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  70:../src/system_stm32f30x.c ****   *=============================================================================
  71:../src/system_stm32f30x.c ****   ******************************************************************************
  72:../src/system_stm32f30x.c ****   * @attention
  73:../src/system_stm32f30x.c ****   *
  74:../src/system_stm32f30x.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  75:../src/system_stm32f30x.c ****   *
  76:../src/system_stm32f30x.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  77:../src/system_stm32f30x.c ****   * You may not use this file except in compliance with the License.
  78:../src/system_stm32f30x.c ****   * You may obtain a copy of the License at:
  79:../src/system_stm32f30x.c ****   *
  80:../src/system_stm32f30x.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  81:../src/system_stm32f30x.c ****   *
  82:../src/system_stm32f30x.c ****   * Unless required by applicable law or agreed to in writing, software
  83:../src/system_stm32f30x.c ****   * distributed under the License is distributed on an "AS IS" BASIS,
  84:../src/system_stm32f30x.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  85:../src/system_stm32f30x.c ****   * See the License for the specific language governing permissions and
  86:../src/system_stm32f30x.c ****   * limitations under the License.
  87:../src/system_stm32f30x.c ****   *
  88:../src/system_stm32f30x.c ****   ******************************************************************************
  89:../src/system_stm32f30x.c ****   */
  90:../src/system_stm32f30x.c **** /** @addtogroup CMSIS
  91:../src/system_stm32f30x.c ****   * @{
  92:../src/system_stm32f30x.c ****   */
  93:../src/system_stm32f30x.c **** 
  94:../src/system_stm32f30x.c **** /** @addtogroup stm32f30x_system
  95:../src/system_stm32f30x.c ****   * @{
  96:../src/system_stm32f30x.c ****   */
  97:../src/system_stm32f30x.c **** 
  98:../src/system_stm32f30x.c **** /** @addtogroup STM32F30x_System_Private_Includes
  99:../src/system_stm32f30x.c ****   * @{
 100:../src/system_stm32f30x.c ****   */
 101:../src/system_stm32f30x.c **** 
 102:../src/system_stm32f30x.c **** #include "stm32f30x.h"
 103:../src/system_stm32f30x.c **** 
 104:../src/system_stm32f30x.c **** /**
 105:../src/system_stm32f30x.c ****   * @}
 106:../src/system_stm32f30x.c ****   */
 107:../src/system_stm32f30x.c **** 
 108:../src/system_stm32f30x.c **** /** @addtogroup STM32F30x_System_Private_TypesDefinitions
 109:../src/system_stm32f30x.c ****   * @{
 110:../src/system_stm32f30x.c ****   */
 111:../src/system_stm32f30x.c **** 
 112:../src/system_stm32f30x.c **** /**
 113:../src/system_stm32f30x.c ****   * @}
 114:../src/system_stm32f30x.c ****   */
 115:../src/system_stm32f30x.c **** 
 116:../src/system_stm32f30x.c **** /** @addtogroup STM32F30x_System_Private_Defines
 117:../src/system_stm32f30x.c ****   * @{
 118:../src/system_stm32f30x.c ****   */
 119:../src/system_stm32f30x.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 120:../src/system_stm32f30x.c ****      Internal SRAM. */
 121:../src/system_stm32f30x.c **** /* #define VECT_TAB_SRAM */
 122:../src/system_stm32f30x.c **** #define VECT_TAB_OFFSET  0x0 /*!< Vector Table base offset field.
 123:../src/system_stm32f30x.c ****                                   This value must be a multiple of 0x200. */
 124:../src/system_stm32f30x.c **** /**
 125:../src/system_stm32f30x.c ****   * @}
 126:../src/system_stm32f30x.c ****   */
 127:../src/system_stm32f30x.c **** 
 128:../src/system_stm32f30x.c **** /** @addtogroup STM32F30x_System_Private_Macros
 129:../src/system_stm32f30x.c ****   * @{
 130:../src/system_stm32f30x.c ****   */
 131:../src/system_stm32f30x.c **** 
 132:../src/system_stm32f30x.c **** /**
 133:../src/system_stm32f30x.c ****   * @}
 134:../src/system_stm32f30x.c ****   */
 135:../src/system_stm32f30x.c **** 
 136:../src/system_stm32f30x.c **** /** @addtogroup STM32F30x_System_Private_Variables
 137:../src/system_stm32f30x.c ****   * @{
 138:../src/system_stm32f30x.c ****   */
 139:../src/system_stm32f30x.c **** 
 140:../src/system_stm32f30x.c ****   uint32_t SystemCoreClock = 72000000;
 141:../src/system_stm32f30x.c **** 
 142:../src/system_stm32f30x.c ****   __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 143:../src/system_stm32f30x.c **** 
 144:../src/system_stm32f30x.c **** /**
 145:../src/system_stm32f30x.c ****   * @}
 146:../src/system_stm32f30x.c ****   */
 147:../src/system_stm32f30x.c **** 
 148:../src/system_stm32f30x.c **** /** @addtogroup STM32F30x_System_Private_FunctionPrototypes
 149:../src/system_stm32f30x.c ****   * @{
 150:../src/system_stm32f30x.c ****   */
 151:../src/system_stm32f30x.c **** 
 152:../src/system_stm32f30x.c **** static void SetSysClock(void);
 153:../src/system_stm32f30x.c **** 
 154:../src/system_stm32f30x.c **** /**
 155:../src/system_stm32f30x.c ****   * @}
 156:../src/system_stm32f30x.c ****   */
 157:../src/system_stm32f30x.c **** 
 158:../src/system_stm32f30x.c **** /** @addtogroup STM32F30x_System_Private_Functions
 159:../src/system_stm32f30x.c ****   * @{
 160:../src/system_stm32f30x.c ****   */
 161:../src/system_stm32f30x.c **** 
 162:../src/system_stm32f30x.c **** /**
 163:../src/system_stm32f30x.c ****   * @brief  Setup the microcontroller system
 164:../src/system_stm32f30x.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the
 165:../src/system_stm32f30x.c ****   *         SystemFrequency variable.
 166:../src/system_stm32f30x.c ****   * @param  None
 167:../src/system_stm32f30x.c ****   * @retval None
 168:../src/system_stm32f30x.c ****   */
 169:../src/system_stm32f30x.c **** void SystemInit(void)
 170:../src/system_stm32f30x.c **** {
  56              		.loc 1 170 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60 0000 08B5     		push	{r3, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 14, -4
  64              		.cfi_offset 3, -8
 171:../src/system_stm32f30x.c ****   /* FPU settings ------------------------------------------------------------*/
 172:../src/system_stm32f30x.c ****   // HJI #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 173:../src/system_stm32f30x.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  65              		.loc 1 173 0
  66 0002 4FF46D43 		mov	r3, #60672
  67 0006 CEF20003 		movt	r3, 57344
  68 000a 4FF46D42 		mov	r2, #60672
  69 000e CEF20002 		movt	r2, 57344
  70 0012 D2F88820 		ldr	r2, [r2, #136]
  71 0016 42F47002 		orr	r2, r2, #15728640
  72 001a C3F88820 		str	r2, [r3, #136]
 174:../src/system_stm32f30x.c ****   // HJI #endif
 175:../src/system_stm32f30x.c **** 
 176:../src/system_stm32f30x.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 177:../src/system_stm32f30x.c ****   /* Set HSION bit */
 178:../src/system_stm32f30x.c ****   RCC->CR |= (uint32_t)0x00000001;
  73              		.loc 1 178 0
  74 001e 4FF48053 		mov	r3, #4096
  75 0022 C4F20203 		movt	r3, 16386
  76 0026 4FF48052 		mov	r2, #4096
  77 002a C4F20202 		movt	r2, 16386
  78 002e 1268     		ldr	r2, [r2, #0]
  79 0030 42F00102 		orr	r2, r2, #1
  80 0034 1A60     		str	r2, [r3, #0]
 179:../src/system_stm32f30x.c **** 
 180:../src/system_stm32f30x.c ****   /* Reset CFGR register */
 181:../src/system_stm32f30x.c ****   RCC->CFGR &= 0xF87FC00C;
  81              		.loc 1 181 0
  82 0036 4FF48052 		mov	r2, #4096
  83 003a C4F20202 		movt	r2, 16386
  84 003e 4FF48053 		mov	r3, #4096
  85 0042 C4F20203 		movt	r3, 16386
  86 0046 5968     		ldr	r1, [r3, #4]
  87 0048 4CF20C03 		movw	r3, #49164
  88 004c CFF67F03 		movt	r3, 63615
  89 0050 0B40     		ands	r3, r3, r1
  90 0052 5360     		str	r3, [r2, #4]
 182:../src/system_stm32f30x.c **** 
 183:../src/system_stm32f30x.c ****   /* Reset HSEON, CSSON and PLLON bits */
 184:../src/system_stm32f30x.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  91              		.loc 1 184 0
  92 0054 4FF48053 		mov	r3, #4096
  93 0058 C4F20203 		movt	r3, 16386
  94 005c 4FF48052 		mov	r2, #4096
  95 0060 C4F20202 		movt	r2, 16386
  96 0064 1268     		ldr	r2, [r2, #0]
  97 0066 22F08472 		bic	r2, r2, #17301504
  98 006a 22F48032 		bic	r2, r2, #65536
  99 006e 1A60     		str	r2, [r3, #0]
 185:../src/system_stm32f30x.c **** 
 186:../src/system_stm32f30x.c ****   /* Reset HSEBYP bit */
 187:../src/system_stm32f30x.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 100              		.loc 1 187 0
 101 0070 4FF48053 		mov	r3, #4096
 102 0074 C4F20203 		movt	r3, 16386
 103 0078 4FF48052 		mov	r2, #4096
 104 007c C4F20202 		movt	r2, 16386
 105 0080 1268     		ldr	r2, [r2, #0]
 106 0082 22F48022 		bic	r2, r2, #262144
 107 0086 1A60     		str	r2, [r3, #0]
 188:../src/system_stm32f30x.c **** 
 189:../src/system_stm32f30x.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE bits */
 190:../src/system_stm32f30x.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
 108              		.loc 1 190 0
 109 0088 4FF48053 		mov	r3, #4096
 110 008c C4F20203 		movt	r3, 16386
 111 0090 4FF48052 		mov	r2, #4096
 112 0094 C4F20202 		movt	r2, 16386
 113 0098 5268     		ldr	r2, [r2, #4]
 114 009a 22F4FE02 		bic	r2, r2, #8323072
 115 009e 5A60     		str	r2, [r3, #4]
 191:../src/system_stm32f30x.c **** 
 192:../src/system_stm32f30x.c ****   /* Reset PREDIV1[3:0] bits */
 193:../src/system_stm32f30x.c ****   RCC->CFGR2 &= (uint32_t)0xFFFFFFF0;
 116              		.loc 1 193 0
 117 00a0 4FF48053 		mov	r3, #4096
 118 00a4 C4F20203 		movt	r3, 16386
 119 00a8 4FF48052 		mov	r2, #4096
 120 00ac C4F20202 		movt	r2, 16386
 121 00b0 D26A     		ldr	r2, [r2, #44]
 122 00b2 22F00F02 		bic	r2, r2, #15
 123 00b6 DA62     		str	r2, [r3, #44]
 194:../src/system_stm32f30x.c **** 
 195:../src/system_stm32f30x.c ****   /* Reset USARTSW[1:0], I2CSW and TIMs bits */
 196:../src/system_stm32f30x.c ****   RCC->CFGR3 &= (uint32_t)0xFF00FCCC;
 124              		.loc 1 196 0
 125 00b8 4FF48052 		mov	r2, #4096
 126 00bc C4F20202 		movt	r2, 16386
 127 00c0 4FF48053 		mov	r3, #4096
 128 00c4 C4F20203 		movt	r3, 16386
 129 00c8 196B     		ldr	r1, [r3, #48]
 130 00ca 4FF6CC43 		movw	r3, #64716
 131 00ce CFF60073 		movt	r3, 65280
 132 00d2 0B40     		ands	r3, r3, r1
 133 00d4 1363     		str	r3, [r2, #48]
 197:../src/system_stm32f30x.c **** 
 198:../src/system_stm32f30x.c ****   /* Disable all interrupts */
 199:../src/system_stm32f30x.c ****   RCC->CIR = 0x00000000;
 134              		.loc 1 199 0
 135 00d6 4FF48053 		mov	r3, #4096
 136 00da C4F20203 		movt	r3, 16386
 137 00de 4FF00002 		mov	r2, #0
 138 00e2 9A60     		str	r2, [r3, #8]
 200:../src/system_stm32f30x.c **** 
 201:../src/system_stm32f30x.c ****   /* Configure the System clock source, PLL Multiplier and Divider factors,
 202:../src/system_stm32f30x.c ****      AHB/APBx prescalers and Flash settings ----------------------------------*/
 203:../src/system_stm32f30x.c ****   SetSysClock();
 139              		.loc 1 203 0
 140 00e4 00F0A2F8 		bl	SetSysClock
 204:../src/system_stm32f30x.c **** 
 205:../src/system_stm32f30x.c **** #ifdef VECT_TAB_SRAM
 206:../src/system_stm32f30x.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
 207:../src/system_stm32f30x.c **** #else
 208:../src/system_stm32f30x.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 141              		.loc 1 208 0
 142 00e8 4FF46D43 		mov	r3, #60672
 143 00ec CEF20003 		movt	r3, 57344
 144 00f0 4FF00062 		mov	r2, #134217728
 145 00f4 9A60     		str	r2, [r3, #8]
 209:../src/system_stm32f30x.c **** #endif
 210:../src/system_stm32f30x.c **** }
 146              		.loc 1 210 0
 147 00f6 08BD     		pop	{r3, pc}
 148              		.cfi_endproc
 149              	.LFE111:
 151              		.align	2
 152              		.global	SystemCoreClockUpdate
 153              		.thumb
 154              		.thumb_func
 156              	SystemCoreClockUpdate:
 157              	.LFB112:
 211:../src/system_stm32f30x.c **** 
 212:../src/system_stm32f30x.c **** /**
 213:../src/system_stm32f30x.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 214:../src/system_stm32f30x.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 215:../src/system_stm32f30x.c ****   *         be used by the user application to setup the SysTick timer or configure
 216:../src/system_stm32f30x.c ****   *         other parameters.
 217:../src/system_stm32f30x.c ****   *
 218:../src/system_stm32f30x.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 219:../src/system_stm32f30x.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 220:../src/system_stm32f30x.c ****   *         based on this variable will be incorrect.
 221:../src/system_stm32f30x.c ****   *
 222:../src/system_stm32f30x.c ****   * @note   - The system frequency computed by this function is not the real
 223:../src/system_stm32f30x.c ****   *           frequency in the chip. It is calculated based on the predefined
 224:../src/system_stm32f30x.c ****   *           constant and the selected clock source:
 225:../src/system_stm32f30x.c ****   *
 226:../src/system_stm32f30x.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 227:../src/system_stm32f30x.c ****   *
 228:../src/system_stm32f30x.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 229:../src/system_stm32f30x.c ****   *
 230:../src/system_stm32f30x.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**)
 231:../src/system_stm32f30x.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 232:../src/system_stm32f30x.c ****   *
 233:../src/system_stm32f30x.c ****   *         (*) HSI_VALUE is a constant defined in stm32f30x.h file (default value
 234:../src/system_stm32f30x.c ****   *             8 MHz) but the real value may vary depending on the variations
 235:../src/system_stm32f30x.c ****   *             in voltage and temperature.
 236:../src/system_stm32f30x.c ****   *
 237:../src/system_stm32f30x.c ****   *         (**) HSE_VALUE is a constant defined in stm32f30x.h file (default value
 238:../src/system_stm32f30x.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 239:../src/system_stm32f30x.c ****   *              frequency of the crystal used. Otherwise, this function may
 240:../src/system_stm32f30x.c ****   *              have wrong result.
 241:../src/system_stm32f30x.c ****   *
 242:../src/system_stm32f30x.c ****   *         - The result of this function could be not correct when using fractional
 243:../src/system_stm32f30x.c ****   *           value for HSE crystal.
 244:../src/system_stm32f30x.c ****   *
 245:../src/system_stm32f30x.c ****   * @param  None
 246:../src/system_stm32f30x.c ****   * @retval None
 247:../src/system_stm32f30x.c ****   */
 248:../src/system_stm32f30x.c **** void SystemCoreClockUpdate (void)
 249:../src/system_stm32f30x.c **** {
 158              		.loc 1 249 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 16
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 163 00f8 84B0     		sub	sp, sp, #16
 164              	.LCFI1:
 165              		.cfi_def_cfa_offset 16
 250:../src/system_stm32f30x.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, prediv1factor = 0;
 166              		.loc 1 250 0
 167 00fa 4FF00003 		mov	r3, #0
 168 00fe 0393     		str	r3, [sp, #12]
 169 0100 4FF00003 		mov	r3, #0
 170 0104 0293     		str	r3, [sp, #8]
 171 0106 4FF00003 		mov	r3, #0
 172 010a 0193     		str	r3, [sp, #4]
 173 010c 4FF00003 		mov	r3, #0
 174 0110 0093     		str	r3, [sp, #0]
 251:../src/system_stm32f30x.c **** 
 252:../src/system_stm32f30x.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 253:../src/system_stm32f30x.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 175              		.loc 1 253 0
 176 0112 4FF48053 		mov	r3, #4096
 177 0116 C4F20203 		movt	r3, 16386
 178 011a 5B68     		ldr	r3, [r3, #4]
 179 011c 03F00C03 		and	r3, r3, #12
 180 0120 0393     		str	r3, [sp, #12]
 254:../src/system_stm32f30x.c **** 
 255:../src/system_stm32f30x.c ****   switch (tmp)
 181              		.loc 1 255 0
 182 0122 039B     		ldr	r3, [sp, #12]
 183 0124 042B     		cmp	r3, #4
 184 0126 0DD0     		beq	.L5
 185 0128 082B     		cmp	r3, #8
 186 012a 15D0     		beq	.L6
 187 012c 002B     		cmp	r3, #0
 188 012e 53D1     		bne	.L10
 189              	.L4:
 256:../src/system_stm32f30x.c ****   {
 257:../src/system_stm32f30x.c ****     case 0x00:  /* HSI used as system clock */
 258:../src/system_stm32f30x.c ****       SystemCoreClock = HSI_VALUE;
 190              		.loc 1 258 0
 191 0130 40F20003 		movw	r3, #:lower16:SystemCoreClock
 192 0134 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 193 0138 4FF49052 		mov	r2, #4608
 194 013c C0F27A02 		movt	r2, 122
 195 0140 1A60     		str	r2, [r3, #0]
 259:../src/system_stm32f30x.c ****       break;
 196              		.loc 1 259 0
 197 0142 53E0     		b	.L7
 198              	.L5:
 260:../src/system_stm32f30x.c ****     case 0x04:  /* HSE used as system clock */
 261:../src/system_stm32f30x.c ****       SystemCoreClock = HSE_VALUE;
 199              		.loc 1 261 0
 200 0144 40F20003 		movw	r3, #:lower16:SystemCoreClock
 201 0148 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 202 014c 4FF49052 		mov	r2, #4608
 203 0150 C0F27A02 		movt	r2, 122
 204 0154 1A60     		str	r2, [r3, #0]
 262:../src/system_stm32f30x.c ****       break;
 205              		.loc 1 262 0
 206 0156 49E0     		b	.L7
 207              	.L6:
 263:../src/system_stm32f30x.c ****     case 0x08:  /* PLL used as system clock */
 264:../src/system_stm32f30x.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 265:../src/system_stm32f30x.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 208              		.loc 1 265 0
 209 0158 4FF48053 		mov	r3, #4096
 210 015c C4F20203 		movt	r3, 16386
 211 0160 5B68     		ldr	r3, [r3, #4]
 212 0162 03F47013 		and	r3, r3, #3932160
 213 0166 0293     		str	r3, [sp, #8]
 266:../src/system_stm32f30x.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 214              		.loc 1 266 0
 215 0168 4FF48053 		mov	r3, #4096
 216 016c C4F20203 		movt	r3, 16386
 217 0170 5B68     		ldr	r3, [r3, #4]
 218 0172 03F48033 		and	r3, r3, #65536
 219 0176 0193     		str	r3, [sp, #4]
 267:../src/system_stm32f30x.c ****       pllmull = ( pllmull >> 18) + 2;
 220              		.loc 1 267 0
 221 0178 029B     		ldr	r3, [sp, #8]
 222 017a 4FEA9343 		lsr	r3, r3, #18
 223 017e 03F10203 		add	r3, r3, #2
 224 0182 0293     		str	r3, [sp, #8]
 268:../src/system_stm32f30x.c **** 
 269:../src/system_stm32f30x.c ****       if (pllsource == 0x00)
 225              		.loc 1 269 0
 226 0184 019B     		ldr	r3, [sp, #4]
 227 0186 002B     		cmp	r3, #0
 228 0188 0CD1     		bne	.L8
 270:../src/system_stm32f30x.c ****       {
 271:../src/system_stm32f30x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 272:../src/system_stm32f30x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 229              		.loc 1 272 0
 230 018a 029A     		ldr	r2, [sp, #8]
 231 018c 4FF41063 		mov	r3, #2304
 232 0190 C0F23D03 		movt	r3, 61
 233 0194 03FB02F2 		mul	r2, r3, r2
 234 0198 40F20003 		movw	r3, #:lower16:SystemCoreClock
 235 019c C0F20003 		movt	r3, #:upper16:SystemCoreClock
 236 01a0 1A60     		str	r2, [r3, #0]
 273:../src/system_stm32f30x.c ****       }
 274:../src/system_stm32f30x.c ****       else
 275:../src/system_stm32f30x.c ****       {
 276:../src/system_stm32f30x.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 277:../src/system_stm32f30x.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 278:../src/system_stm32f30x.c ****         SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;
 279:../src/system_stm32f30x.c ****       }
 280:../src/system_stm32f30x.c ****       break;
 237              		.loc 1 280 0
 238 01a2 23E0     		b	.L7
 239              	.L8:
 276:../src/system_stm32f30x.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 240              		.loc 1 276 0
 241 01a4 4FF48053 		mov	r3, #4096
 242 01a8 C4F20203 		movt	r3, 16386
 243 01ac DB6A     		ldr	r3, [r3, #44]
 244 01ae 03F00F03 		and	r3, r3, #15
 245 01b2 03F10103 		add	r3, r3, #1
 246 01b6 0093     		str	r3, [sp, #0]
 278:../src/system_stm32f30x.c ****         SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;
 247              		.loc 1 278 0
 248 01b8 4FF49053 		mov	r3, #4608
 249 01bc C0F27A03 		movt	r3, 122
 250 01c0 009A     		ldr	r2, [sp, #0]
 251 01c2 B3FBF2F3 		udiv	r3, r3, r2
 252 01c6 029A     		ldr	r2, [sp, #8]
 253 01c8 02FB03F2 		mul	r2, r2, r3
 254 01cc 40F20003 		movw	r3, #:lower16:SystemCoreClock
 255 01d0 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 256 01d4 1A60     		str	r2, [r3, #0]
 257              		.loc 1 280 0
 258 01d6 09E0     		b	.L7
 259              	.L10:
 281:../src/system_stm32f30x.c ****     default: /* HSI used as system clock */
 282:../src/system_stm32f30x.c ****       SystemCoreClock = HSI_VALUE;
 260              		.loc 1 282 0
 261 01d8 40F20003 		movw	r3, #:lower16:SystemCoreClock
 262 01dc C0F20003 		movt	r3, #:upper16:SystemCoreClock
 263 01e0 4FF49052 		mov	r2, #4608
 264 01e4 C0F27A02 		movt	r2, 122
 265 01e8 1A60     		str	r2, [r3, #0]
 283:../src/system_stm32f30x.c ****       break;
 266              		.loc 1 283 0
 267 01ea 00BF     		nop
 268              	.L7:
 284:../src/system_stm32f30x.c ****   }
 285:../src/system_stm32f30x.c ****   /* Compute HCLK clock frequency ----------------*/
 286:../src/system_stm32f30x.c ****   /* Get HCLK prescaler */
 287:../src/system_stm32f30x.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 269              		.loc 1 287 0
 270 01ec 4FF48053 		mov	r3, #4096
 271 01f0 C4F20203 		movt	r3, 16386
 272 01f4 5B68     		ldr	r3, [r3, #4]
 273 01f6 03F0F003 		and	r3, r3, #240
 274 01fa 4FEA1312 		lsr	r2, r3, #4
 275 01fe 40F20003 		movw	r3, #:lower16:AHBPrescTable
 276 0202 C0F20003 		movt	r3, #:upper16:AHBPrescTable
 277 0206 9B5C     		ldrb	r3, [r3, r2]
 278 0208 DBB2     		uxtb	r3, r3
 279 020a 0393     		str	r3, [sp, #12]
 288:../src/system_stm32f30x.c ****   /* HCLK clock frequency */
 289:../src/system_stm32f30x.c ****   SystemCoreClock >>= tmp;
 280              		.loc 1 289 0
 281 020c 40F20003 		movw	r3, #:lower16:SystemCoreClock
 282 0210 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 283 0214 1A68     		ldr	r2, [r3, #0]
 284 0216 039B     		ldr	r3, [sp, #12]
 285 0218 22FA03F2 		lsr	r2, r2, r3
 286 021c 40F20003 		movw	r3, #:lower16:SystemCoreClock
 287 0220 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 288 0224 1A60     		str	r2, [r3, #0]
 290:../src/system_stm32f30x.c **** }
 289              		.loc 1 290 0
 290 0226 04B0     		add	sp, sp, #16
 291 0228 7047     		bx	lr
 292              		.cfi_endproc
 293              	.LFE112:
 295 022a 00BF     		.align	2
 296              		.thumb
 297              		.thumb_func
 299              	SetSysClock:
 300              	.LFB113:
 291:../src/system_stm32f30x.c **** 
 292:../src/system_stm32f30x.c **** /**
 293:../src/system_stm32f30x.c ****   * @brief  Configures the System clock source, PLL Multiplier and Divider factors,
 294:../src/system_stm32f30x.c ****   *               AHB/APBx prescalers and Flash settings
 295:../src/system_stm32f30x.c ****   * @note   This function should be called only once the RCC clock configuration
 296:../src/system_stm32f30x.c ****   *         is reset to the default reset state (done in SystemInit() function).
 297:../src/system_stm32f30x.c ****   * @param  None
 298:../src/system_stm32f30x.c ****   * @retval None
 299:../src/system_stm32f30x.c ****   */
 300:../src/system_stm32f30x.c **** static void SetSysClock(void)
 301:../src/system_stm32f30x.c **** {
 301              		.loc 1 301 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 8
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              		@ link register save eliminated.
 306 022c 82B0     		sub	sp, sp, #8
 307              	.LCFI2:
 308              		.cfi_def_cfa_offset 8
 302:../src/system_stm32f30x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 309              		.loc 1 302 0
 310 022e 4FF00003 		mov	r3, #0
 311 0232 0193     		str	r3, [sp, #4]
 312 0234 4FF00003 		mov	r3, #0
 313 0238 0093     		str	r3, [sp, #0]
 303:../src/system_stm32f30x.c **** 
 304:../src/system_stm32f30x.c **** /******************************************************************************/
 305:../src/system_stm32f30x.c **** /*            PLL (clocked by HSE) used as System clock source                */
 306:../src/system_stm32f30x.c **** /******************************************************************************/
 307:../src/system_stm32f30x.c **** 
 308:../src/system_stm32f30x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration -----------*/
 309:../src/system_stm32f30x.c ****   /* Enable HSE */
 310:../src/system_stm32f30x.c ****   RCC->CR |= (uint32_t)(RCC_CR_HSEON | RCC_CR_HSEBYP);
 314              		.loc 1 310 0
 315 023a 4FF48053 		mov	r3, #4096
 316 023e C4F20203 		movt	r3, 16386
 317 0242 4FF48052 		mov	r2, #4096
 318 0246 C4F20202 		movt	r2, 16386
 319 024a 1268     		ldr	r2, [r2, #0]
 320 024c 42F4A022 		orr	r2, r2, #327680
 321 0250 1A60     		str	r2, [r3, #0]
 322              	.L13:
 311:../src/system_stm32f30x.c **** 
 312:../src/system_stm32f30x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 313:../src/system_stm32f30x.c ****   do
 314:../src/system_stm32f30x.c ****   {
 315:../src/system_stm32f30x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 323              		.loc 1 315 0 discriminator 1
 324 0252 4FF48053 		mov	r3, #4096
 325 0256 C4F20203 		movt	r3, 16386
 326 025a 1B68     		ldr	r3, [r3, #0]
 327 025c 03F40033 		and	r3, r3, #131072
 328 0260 0093     		str	r3, [sp, #0]
 316:../src/system_stm32f30x.c ****     StartUpCounter++;
 329              		.loc 1 316 0 discriminator 1
 330 0262 019B     		ldr	r3, [sp, #4]
 331 0264 03F10103 		add	r3, r3, #1
 332 0268 0193     		str	r3, [sp, #4]
 317:../src/system_stm32f30x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 333              		.loc 1 317 0 discriminator 1
 334 026a 009B     		ldr	r3, [sp, #0]
 335 026c 002B     		cmp	r3, #0
 336 026e 03D1     		bne	.L12
 337 0270 019B     		ldr	r3, [sp, #4]
 338 0272 B3F5A06F 		cmp	r3, #1280
 339 0276 ECD1     		bne	.L13
 340              	.L12:
 318:../src/system_stm32f30x.c **** 
 319:../src/system_stm32f30x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 341              		.loc 1 319 0
 342 0278 4FF48053 		mov	r3, #4096
 343 027c C4F20203 		movt	r3, 16386
 344 0280 1B68     		ldr	r3, [r3, #0]
 345 0282 03F40033 		and	r3, r3, #131072
 346 0286 002B     		cmp	r3, #0
 347 0288 03D0     		beq	.L14
 320:../src/system_stm32f30x.c ****   {
 321:../src/system_stm32f30x.c ****     HSEStatus = (uint32_t)0x01;
 348              		.loc 1 321 0
 349 028a 4FF00103 		mov	r3, #1
 350 028e 0093     		str	r3, [sp, #0]
 351 0290 02E0     		b	.L15
 352              	.L14:
 322:../src/system_stm32f30x.c ****   }
 323:../src/system_stm32f30x.c ****   else
 324:../src/system_stm32f30x.c ****   {
 325:../src/system_stm32f30x.c ****     HSEStatus = (uint32_t)0x00;
 353              		.loc 1 325 0
 354 0292 4FF00003 		mov	r3, #0
 355 0296 0093     		str	r3, [sp, #0]
 356              	.L15:
 326:../src/system_stm32f30x.c ****   }
 327:../src/system_stm32f30x.c **** 
 328:../src/system_stm32f30x.c ****   if (HSEStatus == (uint32_t)0x01)
 357              		.loc 1 328 0
 358 0298 009B     		ldr	r3, [sp, #0]
 359 029a 012B     		cmp	r3, #1
 360 029c 78D1     		bne	.L11
 329:../src/system_stm32f30x.c ****   {
 330:../src/system_stm32f30x.c ****     /* Disable Prefetch Buffer and set Flash Latency */
 331:../src/system_stm32f30x.c ****     FLASH->ACR = (uint32_t)FLASH_ACR_LATENCY_1;
 361              		.loc 1 331 0
 362 029e 4FF40053 		mov	r3, #8192
 363 02a2 C4F20203 		movt	r3, 16386
 364 02a6 4FF00202 		mov	r2, #2
 365 02aa 1A60     		str	r2, [r3, #0]
 332:../src/system_stm32f30x.c **** 
 333:../src/system_stm32f30x.c ****      /* HCLK = SYSCLK / 1 */
 334:../src/system_stm32f30x.c ****      RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 366              		.loc 1 334 0
 367 02ac 4FF48053 		mov	r3, #4096
 368 02b0 C4F20203 		movt	r3, 16386
 369 02b4 4FF48052 		mov	r2, #4096
 370 02b8 C4F20202 		movt	r2, 16386
 371 02bc 5268     		ldr	r2, [r2, #4]
 372 02be 5A60     		str	r2, [r3, #4]
 335:../src/system_stm32f30x.c **** 
 336:../src/system_stm32f30x.c ****      /* PCLK2 = HCLK / 2 */
 337:../src/system_stm32f30x.c ****      RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV2;
 373              		.loc 1 337 0
 374 02c0 4FF48053 		mov	r3, #4096
 375 02c4 C4F20203 		movt	r3, 16386
 376 02c8 4FF48052 		mov	r2, #4096
 377 02cc C4F20202 		movt	r2, 16386
 378 02d0 5268     		ldr	r2, [r2, #4]
 379 02d2 42F40052 		orr	r2, r2, #8192
 380 02d6 5A60     		str	r2, [r3, #4]
 338:../src/system_stm32f30x.c **** 
 339:../src/system_stm32f30x.c ****      /* PCLK1 = HCLK / 2 */
 340:../src/system_stm32f30x.c ****      RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 381              		.loc 1 340 0
 382 02d8 4FF48053 		mov	r3, #4096
 383 02dc C4F20203 		movt	r3, 16386
 384 02e0 4FF48052 		mov	r2, #4096
 385 02e4 C4F20202 		movt	r2, 16386
 386 02e8 5268     		ldr	r2, [r2, #4]
 387 02ea 42F48062 		orr	r2, r2, #1024
 388 02ee 5A60     		str	r2, [r3, #4]
 341:../src/system_stm32f30x.c **** 
 342:../src/system_stm32f30x.c ****     /* PLL configuration */
 343:../src/system_stm32f30x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 389              		.loc 1 343 0
 390 02f0 4FF48053 		mov	r3, #4096
 391 02f4 C4F20203 		movt	r3, 16386
 392 02f8 4FF48052 		mov	r2, #4096
 393 02fc C4F20202 		movt	r2, 16386
 394 0300 5268     		ldr	r2, [r2, #4]
 395 0302 22F47C12 		bic	r2, r2, #4128768
 396 0306 5A60     		str	r2, [r3, #4]
 344:../src/system_stm32f30x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_PREDIV1 | RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLMULL9
 397              		.loc 1 344 0
 398 0308 4FF48053 		mov	r3, #4096
 399 030c C4F20203 		movt	r3, 16386
 400 0310 4FF48052 		mov	r2, #4096
 401 0314 C4F20202 		movt	r2, 16386
 402 0318 5268     		ldr	r2, [r2, #4]
 403 031a 42F4E812 		orr	r2, r2, #1900544
 404 031e 5A60     		str	r2, [r3, #4]
 345:../src/system_stm32f30x.c **** 
 346:../src/system_stm32f30x.c ****     /* Enable PLL */
 347:../src/system_stm32f30x.c ****     RCC->CR |= RCC_CR_PLLON;
 405              		.loc 1 347 0
 406 0320 4FF48053 		mov	r3, #4096
 407 0324 C4F20203 		movt	r3, 16386
 408 0328 4FF48052 		mov	r2, #4096
 409 032c C4F20202 		movt	r2, 16386
 410 0330 1268     		ldr	r2, [r2, #0]
 411 0332 42F08072 		orr	r2, r2, #16777216
 412 0336 1A60     		str	r2, [r3, #0]
 348:../src/system_stm32f30x.c **** 
 349:../src/system_stm32f30x.c ****     /* Wait till PLL is ready */
 350:../src/system_stm32f30x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 413              		.loc 1 350 0
 414 0338 00BF     		nop
 415              	.L17:
 416              		.loc 1 350 0 is_stmt 0 discriminator 1
 417 033a 4FF48053 		mov	r3, #4096
 418 033e C4F20203 		movt	r3, 16386
 419 0342 1B68     		ldr	r3, [r3, #0]
 420 0344 03F00073 		and	r3, r3, #33554432
 421 0348 002B     		cmp	r3, #0
 422 034a F6D0     		beq	.L17
 351:../src/system_stm32f30x.c ****     {
 352:../src/system_stm32f30x.c ****     }
 353:../src/system_stm32f30x.c **** 
 354:../src/system_stm32f30x.c ****     /* Select PLL as system clock source */
 355:../src/system_stm32f30x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 423              		.loc 1 355 0 is_stmt 1
 424 034c 4FF48053 		mov	r3, #4096
 425 0350 C4F20203 		movt	r3, 16386
 426 0354 4FF48052 		mov	r2, #4096
 427 0358 C4F20202 		movt	r2, 16386
 428 035c 5268     		ldr	r2, [r2, #4]
 429 035e 22F00302 		bic	r2, r2, #3
 430 0362 5A60     		str	r2, [r3, #4]
 356:../src/system_stm32f30x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;
 431              		.loc 1 356 0
 432 0364 4FF48053 		mov	r3, #4096
 433 0368 C4F20203 		movt	r3, 16386
 434 036c 4FF48052 		mov	r2, #4096
 435 0370 C4F20202 		movt	r2, 16386
 436 0374 5268     		ldr	r2, [r2, #4]
 437 0376 42F00202 		orr	r2, r2, #2
 438 037a 5A60     		str	r2, [r3, #4]
 357:../src/system_stm32f30x.c **** 
 358:../src/system_stm32f30x.c ****     /* Wait till PLL is used as system clock source */
 359:../src/system_stm32f30x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)RCC_CFGR_SWS_PLL)
 439              		.loc 1 359 0
 440 037c 00BF     		nop
 441              	.L18:
 442              		.loc 1 359 0 is_stmt 0 discriminator 1
 443 037e 4FF48053 		mov	r3, #4096
 444 0382 C4F20203 		movt	r3, 16386
 445 0386 5B68     		ldr	r3, [r3, #4]
 446 0388 03F00C03 		and	r3, r3, #12
 447 038c 082B     		cmp	r3, #8
 448 038e F6D1     		bne	.L18
 449              	.L11:
 360:../src/system_stm32f30x.c ****     {
 361:../src/system_stm32f30x.c ****     }
 362:../src/system_stm32f30x.c ****   }
 363:../src/system_stm32f30x.c ****   else
 364:../src/system_stm32f30x.c ****   { /* If HSE fails to start-up, the application will have wrong clock
 365:../src/system_stm32f30x.c ****          configuration. User can add here some code to deal with this error */
 366:../src/system_stm32f30x.c ****   }
 367:../src/system_stm32f30x.c **** }
 450              		.loc 1 367 0 is_stmt 1
 451 0390 02B0     		add	sp, sp, #8
 452 0392 7047     		bx	lr
 453              		.cfi_endproc
 454              	.LFE113:
 456              	.Letext0:
 457              		.file 2 "c:\\program files\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/gcc/ar
 458              		.file 3 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\CMSIS\\I
 459              		.file 4 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\Device\\
DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f30x.c
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccrDyjUZ.s:24     .data:00000000 SystemCoreClock
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccrDyjUZ.s:21     .data:00000000 $d
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccrDyjUZ.s:30     .data:00000004 AHBPrescTable
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccrDyjUZ.s:48     .text:00000000 $t
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccrDyjUZ.s:53     .text:00000000 SystemInit
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccrDyjUZ.s:299    .text:0000022c SetSysClock
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccrDyjUZ.s:156    .text:000000f8 SystemCoreClockUpdate
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS

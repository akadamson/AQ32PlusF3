   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"drv_uart4.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	mtk19ProcessDataState,1,1
  20              		.comm	nmeaProcessDataState,1,1
  21              		.comm	ubloxProcessDataState,1,1
  22              		.comm	rx4Buffer,2048,4
  23              		.global	rx4DMAPos
  24              		.bss
  25              		.align	2
  28              	rx4DMAPos:
  29 0000 00000000 		.space	4
  30              		.comm	tx4Buffer,2048,4
  31              		.global	tx4BufferTail
  32              		.align	1
  35              	tx4BufferTail:
  36 0004 0000     		.space	2
  37              		.global	tx4BufferHead
  38              		.align	1
  41              	tx4BufferHead:
  42 0006 0000     		.space	2
  43              		.text
  44              		.align	2
  45              		.thumb
  46              		.thumb_func
  48              	uart4TxDMA:
  49              	.LFB111:
  50              		.file 1 "../src/drv/drv_uart4.c"
   1:../src/drv/drv_uart4.c **** /*
   2:../src/drv/drv_uart4.c ****   December 2012
   3:../src/drv/drv_uart4.c **** 
   4:../src/drv/drv_uart4.c ****   aq32Plus_F3 Rev -
   5:../src/drv/drv_uart4.c **** 
   6:../src/drv/drv_uart4.c ****   Copyright (c) 2012 John Ihlein.  All rights reserved.
   7:../src/drv/drv_uart4.c **** 
   8:../src/drv/drv_uart4.c ****   Open Source STM32 Based Multicopter Controller Software
   9:../src/drv/drv_uart4.c **** 
  10:../src/drv/drv_uart4.c ****   Includes code and/or ideas from:
  11:../src/drv/drv_uart4.c **** 
  12:../src/drv/drv_uart4.c ****   1)AeroQuad
  13:../src/drv/drv_uart4.c ****   2)BaseFlight
  14:../src/drv/drv_uart4.c ****   3)CH Robotics
  15:../src/drv/drv_uart4.c ****   4)MultiWii
  16:../src/drv/drv_uart4.c ****   5)S.O.H. Madgwick
  17:../src/drv/drv_uart4.c ****   6)UAVX
  18:../src/drv/drv_uart4.c ****   7)STM DiscoveryF3 demonstration software
  19:../src/drv/drv_uart4.c **** 
  20:../src/drv/drv_uart4.c ****   Designed to run on the DiscoveryF3 board
  21:../src/drv/drv_uart4.c **** 
  22:../src/drv/drv_uart4.c ****   This program is free software: you can redistribute it and/or modify
  23:../src/drv/drv_uart4.c ****   it under the terms of the GNU General Public License as published by
  24:../src/drv/drv_uart4.c ****   the Free Software Foundation, either version 3 of the License, or
  25:../src/drv/drv_uart4.c ****   (at your option) any later version.
  26:../src/drv/drv_uart4.c **** 
  27:../src/drv/drv_uart4.c ****   This program is distributed in the hope that it will be useful,
  28:../src/drv/drv_uart4.c ****   but WITHOUT ANY WARRANTY; without even the implied warranty of
  29:../src/drv/drv_uart4.c ****   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  30:../src/drv/drv_uart4.c ****   GNU General Public License for more details.
  31:../src/drv/drv_uart4.c **** 
  32:../src/drv/drv_uart4.c ****   You should have received a copy of the GNU General Public License
  33:../src/drv/drv_uart4.c ****   along with this program. If not, see <http://www.gnu.org/licenses/>.
  34:../src/drv/drv_uart4.c **** */
  35:../src/drv/drv_uart4.c **** 
  36:../src/drv/drv_uart4.c **** ///////////////////////////////////////////////////////////////////////////////
  37:../src/drv/drv_uart4.c **** 
  38:../src/drv/drv_uart4.c **** #include "board.h"
  39:../src/drv/drv_uart4.c **** 
  40:../src/drv/drv_uart4.c **** ///////////////////////////////////////////////////////////////////////////////
  41:../src/drv/drv_uart4.c **** 
  42:../src/drv/drv_uart4.c **** /*
  43:../src/drv/drv_uart4.c ****     DMA UART routines idea lifted from AutoQuad
  44:../src/drv/drv_uart4.c ****     Copyright © 2011  Bill Nesbitt
  45:../src/drv/drv_uart4.c **** */
  46:../src/drv/drv_uart4.c **** 
  47:../src/drv/drv_uart4.c **** ///////////////////////////////////////////////////////////////////////////////
  48:../src/drv/drv_uart4.c **** // UART4 Defines and Variables
  49:../src/drv/drv_uart4.c **** ///////////////////////////////////////////////////////////////////////////////
  50:../src/drv/drv_uart4.c **** 
  51:../src/drv/drv_uart4.c **** #define UART4_TX_PIN        GPIO_Pin_10
  52:../src/drv/drv_uart4.c **** #define UART4_RX_PIN        GPIO_Pin_11
  53:../src/drv/drv_uart4.c **** #define UART4_GPIO          GPIOC
  54:../src/drv/drv_uart4.c **** #define UART4_TX_PINSOURCE  GPIO_PinSource10
  55:../src/drv/drv_uart4.c **** #define UART4_RX_PINSOURCE  GPIO_PinSource11
  56:../src/drv/drv_uart4.c **** 
  57:../src/drv/drv_uart4.c **** #define UART4_BUFFER_SIZE    2048
  58:../src/drv/drv_uart4.c **** 
  59:../src/drv/drv_uart4.c **** // Receive buffer, circular DMA
  60:../src/drv/drv_uart4.c **** volatile uint8_t rx4Buffer[UART4_BUFFER_SIZE];
  61:../src/drv/drv_uart4.c **** uint32_t rx4DMAPos = 0;
  62:../src/drv/drv_uart4.c **** 
  63:../src/drv/drv_uart4.c **** volatile uint8_t tx4Buffer[UART4_BUFFER_SIZE];
  64:../src/drv/drv_uart4.c **** uint16_t tx4BufferTail = 0;
  65:../src/drv/drv_uart4.c **** uint16_t tx4BufferHead = 0;
  66:../src/drv/drv_uart4.c **** 
  67:../src/drv/drv_uart4.c **** ///////////////////////////////////////////////////////////////////////////////
  68:../src/drv/drv_uart4.c **** // UART4 Transmit via DMA
  69:../src/drv/drv_uart4.c **** ///////////////////////////////////////////////////////////////////////////////
  70:../src/drv/drv_uart4.c **** 
  71:../src/drv/drv_uart4.c **** static void uart4TxDMA(void)
  72:../src/drv/drv_uart4.c **** {
  51              		.loc 1 72 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55 0000 08B5     		push	{r3, lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 14, -4
  59              		.cfi_offset 3, -8
  73:../src/drv/drv_uart4.c ****     DMA2_Channel5->CMAR = (uint32_t)&tx4Buffer[tx4BufferTail];
  60              		.loc 1 73 0
  61 0002 4FF48B63 		mov	r3, #1112
  62 0006 C4F20203 		movt	r3, 16386
  63 000a 40F20002 		movw	r2, #:lower16:tx4BufferTail
  64 000e C0F20002 		movt	r2, #:upper16:tx4BufferTail
  65 0012 1288     		ldrh	r2, [r2, #0]
  66 0014 1146     		mov	r1, r2
  67 0016 40F20002 		movw	r2, #:lower16:tx4Buffer
  68 001a C0F20002 		movt	r2, #:upper16:tx4Buffer
  69 001e 8A18     		adds	r2, r1, r2
  70 0020 DA60     		str	r2, [r3, #12]
  74:../src/drv/drv_uart4.c ****     if (tx4BufferHead > tx4BufferTail)
  71              		.loc 1 74 0
  72 0022 40F20003 		movw	r3, #:lower16:tx4BufferHead
  73 0026 C0F20003 		movt	r3, #:upper16:tx4BufferHead
  74 002a 1A88     		ldrh	r2, [r3, #0]
  75 002c 40F20003 		movw	r3, #:lower16:tx4BufferTail
  76 0030 C0F20003 		movt	r3, #:upper16:tx4BufferTail
  77 0034 1B88     		ldrh	r3, [r3, #0]
  78 0036 9A42     		cmp	r2, r3
  79 0038 1BD9     		bls	.L2
  75:../src/drv/drv_uart4.c ****     {
  76:../src/drv/drv_uart4.c ****     	DMA2_Channel5->CNDTR = tx4BufferHead - tx4BufferTail;
  80              		.loc 1 76 0
  81 003a 4FF48B63 		mov	r3, #1112
  82 003e C4F20203 		movt	r3, 16386
  83 0042 40F20002 		movw	r2, #:lower16:tx4BufferHead
  84 0046 C0F20002 		movt	r2, #:upper16:tx4BufferHead
  85 004a 1288     		ldrh	r2, [r2, #0]
  86 004c 1146     		mov	r1, r2
  87 004e 40F20002 		movw	r2, #:lower16:tx4BufferTail
  88 0052 C0F20002 		movt	r2, #:upper16:tx4BufferTail
  89 0056 1288     		ldrh	r2, [r2, #0]
  90 0058 8A1A     		subs	r2, r1, r2
  91 005a 5A60     		str	r2, [r3, #4]
  77:../src/drv/drv_uart4.c **** 	    tx4BufferTail = tx4BufferHead;
  92              		.loc 1 77 0
  93 005c 40F20003 		movw	r3, #:lower16:tx4BufferHead
  94 0060 C0F20003 		movt	r3, #:upper16:tx4BufferHead
  95 0064 1A88     		ldrh	r2, [r3, #0]
  96 0066 40F20003 		movw	r3, #:lower16:tx4BufferTail
  97 006a C0F20003 		movt	r3, #:upper16:tx4BufferTail
  98 006e 1A80     		strh	r2, [r3, #0]	@ movhi
  99 0070 12E0     		b	.L3
 100              	.L2:
  78:../src/drv/drv_uart4.c ****     }
  79:../src/drv/drv_uart4.c ****     else
  80:../src/drv/drv_uart4.c ****     {
  81:../src/drv/drv_uart4.c ****     	DMA2_Channel5->CNDTR = UART4_BUFFER_SIZE - tx4BufferTail;
 101              		.loc 1 81 0
 102 0072 4FF48B63 		mov	r3, #1112
 103 0076 C4F20203 		movt	r3, 16386
 104 007a 40F20002 		movw	r2, #:lower16:tx4BufferTail
 105 007e C0F20002 		movt	r2, #:upper16:tx4BufferTail
 106 0082 1288     		ldrh	r2, [r2, #0]
 107 0084 C2F50062 		rsb	r2, r2, #2048
 108 0088 5A60     		str	r2, [r3, #4]
  82:../src/drv/drv_uart4.c **** 	    tx4BufferTail = 0;
 109              		.loc 1 82 0
 110 008a 40F20003 		movw	r3, #:lower16:tx4BufferTail
 111 008e C0F20003 		movt	r3, #:upper16:tx4BufferTail
 112 0092 4FF00002 		mov	r2, #0
 113 0096 1A80     		strh	r2, [r3, #0]	@ movhi
 114              	.L3:
  83:../src/drv/drv_uart4.c ****     }
  84:../src/drv/drv_uart4.c **** 
  85:../src/drv/drv_uart4.c ****     DMA_Cmd(DMA2_Channel5, ENABLE);
 115              		.loc 1 85 0
 116 0098 4FF48B60 		mov	r0, #1112
 117 009c C4F20200 		movt	r0, 16386
 118 00a0 4FF00101 		mov	r1, #1
 119 00a4 FFF7FEFF 		bl	DMA_Cmd
  86:../src/drv/drv_uart4.c **** }
 120              		.loc 1 86 0
 121 00a8 08BD     		pop	{r3, pc}
 122              		.cfi_endproc
 123              	.LFE111:
 125 00aa 00BF     		.align	2
 126              		.global	DMA2_Channel5_IRQHandler
 127              		.thumb
 128              		.thumb_func
 130              	DMA2_Channel5_IRQHandler:
 131              	.LFB112:
  87:../src/drv/drv_uart4.c **** 
  88:../src/drv/drv_uart4.c **** ///////////////////////////////////////////////////////////////////////////////
  89:../src/drv/drv_uart4.c **** // UART4 TX Complete Interrupt Handler
  90:../src/drv/drv_uart4.c **** ///////////////////////////////////////////////////////////////////////////////
  91:../src/drv/drv_uart4.c **** 
  92:../src/drv/drv_uart4.c **** void DMA2_Channel5_IRQHandler(void)
  93:../src/drv/drv_uart4.c **** {
 132              		.loc 1 93 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136 00ac 08B5     		push	{r3, lr}
 137              	.LCFI1:
 138              		.cfi_def_cfa_offset 8
 139              		.cfi_offset 14, -4
 140              		.cfi_offset 3, -8
  94:../src/drv/drv_uart4.c **** 	DMA_ClearITPendingBit(DMA2_IT_TC5);
 141              		.loc 1 94 0
 142 00ae 4FF00000 		mov	r0, #0
 143 00b2 C1F20200 		movt	r0, 4098
 144 00b6 FFF7FEFF 		bl	DMA_ClearITPendingBit
  95:../src/drv/drv_uart4.c ****     DMA_Cmd(DMA2_Channel5, DISABLE);
 145              		.loc 1 95 0
 146 00ba 4FF48B60 		mov	r0, #1112
 147 00be C4F20200 		movt	r0, 16386
 148 00c2 4FF00001 		mov	r1, #0
 149 00c6 FFF7FEFF 		bl	DMA_Cmd
  96:../src/drv/drv_uart4.c **** 
  97:../src/drv/drv_uart4.c ****     if (tx4BufferHead != tx4BufferTail)
 150              		.loc 1 97 0
 151 00ca 40F20003 		movw	r3, #:lower16:tx4BufferHead
 152 00ce C0F20003 		movt	r3, #:upper16:tx4BufferHead
 153 00d2 1A88     		ldrh	r2, [r3, #0]
 154 00d4 40F20003 		movw	r3, #:lower16:tx4BufferTail
 155 00d8 C0F20003 		movt	r3, #:upper16:tx4BufferTail
 156 00dc 1B88     		ldrh	r3, [r3, #0]
 157 00de 9A42     		cmp	r2, r3
 158 00e0 01D0     		beq	.L4
  98:../src/drv/drv_uart4.c **** 	    uart4TxDMA();
 159              		.loc 1 98 0
 160 00e2 FFF78DFF 		bl	uart4TxDMA
 161              	.L4:
  99:../src/drv/drv_uart4.c **** }
 162              		.loc 1 99 0
 163 00e6 08BD     		pop	{r3, pc}
 164              		.cfi_endproc
 165              	.LFE112:
 167              		.align	2
 168              		.global	uart4Init
 169              		.thumb
 170              		.thumb_func
 172              	uart4Init:
 173              	.LFB113:
 100:../src/drv/drv_uart4.c **** 
 101:../src/drv/drv_uart4.c **** ///////////////////////////////////////////////////////////////////////////////
 102:../src/drv/drv_uart4.c **** // UART4 Initialization
 103:../src/drv/drv_uart4.c **** ///////////////////////////////////////////////////////////////////////////////
 104:../src/drv/drv_uart4.c **** 
 105:../src/drv/drv_uart4.c **** void uart4Init(void)
 106:../src/drv/drv_uart4.c **** {
 174              		.loc 1 106 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 80
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178 00e8 00B5     		push	{lr}
 179              	.LCFI2:
 180              		.cfi_def_cfa_offset 4
 181              		.cfi_offset 14, -4
 182 00ea 95B0     		sub	sp, sp, #84
 183              	.LCFI3:
 184              		.cfi_def_cfa_offset 88
 107:../src/drv/drv_uart4.c ****     GPIO_InitTypeDef  GPIO_InitStructure;
 108:../src/drv/drv_uart4.c ****     USART_InitTypeDef USART_InitStructure;
 109:../src/drv/drv_uart4.c ****     DMA_InitTypeDef   DMA_InitStructure;
 110:../src/drv/drv_uart4.c ****     NVIC_InitTypeDef  NVIC_InitStructure;
 111:../src/drv/drv_uart4.c **** 
 112:../src/drv/drv_uart4.c ****     RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC,    ENABLE);
 185              		.loc 1 112 0
 186 00ec 4FF40020 		mov	r0, #524288
 187 00f0 4FF00101 		mov	r1, #1
 188 00f4 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 113:../src/drv/drv_uart4.c ****     RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA2,     ENABLE);
 189              		.loc 1 113 0
 190 00f8 4FF00200 		mov	r0, #2
 191 00fc 4FF00101 		mov	r1, #1
 192 0100 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 114:../src/drv/drv_uart4.c ****     RCC_APB1PeriphClockCmd(RCC_APB1Periph_UART4,  ENABLE);
 193              		.loc 1 114 0
 194 0104 4FF40020 		mov	r0, #524288
 195 0108 4FF00101 		mov	r1, #1
 196 010c FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 115:../src/drv/drv_uart4.c **** 
 116:../src/drv/drv_uart4.c ****     GPIO_InitStructure.GPIO_Pin   = UART4_TX_PIN | UART4_RX_PIN;
 197              		.loc 1 116 0
 198 0110 4FF44063 		mov	r3, #3072
 199 0114 1293     		str	r3, [sp, #72]
 117:../src/drv/drv_uart4.c ****     GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AF;
 200              		.loc 1 117 0
 201 0116 4FF00203 		mov	r3, #2
 202 011a 8DF84C30 		strb	r3, [sp, #76]
 118:../src/drv/drv_uart4.c ****     GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 203              		.loc 1 118 0
 204 011e 4FF00303 		mov	r3, #3
 205 0122 8DF84D30 		strb	r3, [sp, #77]
 119:../src/drv/drv_uart4.c ****     GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 206              		.loc 1 119 0
 207 0126 4FF00003 		mov	r3, #0
 208 012a 8DF84E30 		strb	r3, [sp, #78]
 120:../src/drv/drv_uart4.c ****     GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
 209              		.loc 1 120 0
 210 012e 4FF00103 		mov	r3, #1
 211 0132 8DF84F30 		strb	r3, [sp, #79]
 121:../src/drv/drv_uart4.c **** 
 122:../src/drv/drv_uart4.c ****     GPIO_PinAFConfig(UART4_GPIO, UART4_TX_PINSOURCE, GPIO_AF_5);
 212              		.loc 1 122 0
 213 0136 4FF40060 		mov	r0, #2048
 214 013a C4F60000 		movt	r0, 18432
 215 013e 4FF00A01 		mov	r1, #10
 216 0142 4FF00502 		mov	r2, #5
 217 0146 FFF7FEFF 		bl	GPIO_PinAFConfig
 123:../src/drv/drv_uart4.c ****     GPIO_PinAFConfig(UART4_GPIO, UART4_RX_PINSOURCE, GPIO_AF_5);
 218              		.loc 1 123 0
 219 014a 4FF40060 		mov	r0, #2048
 220 014e C4F60000 		movt	r0, 18432
 221 0152 4FF00B01 		mov	r1, #11
 222 0156 4FF00502 		mov	r2, #5
 223 015a FFF7FEFF 		bl	GPIO_PinAFConfig
 124:../src/drv/drv_uart4.c **** 
 125:../src/drv/drv_uart4.c ****     GPIO_Init(UART4_GPIO, &GPIO_InitStructure);
 224              		.loc 1 125 0
 225 015e 4FF40060 		mov	r0, #2048
 226 0162 C4F60000 		movt	r0, 18432
 227 0166 12AB     		add	r3, sp, #72
 228 0168 1946     		mov	r1, r3
 229 016a FFF7FEFF 		bl	GPIO_Init
 126:../src/drv/drv_uart4.c **** 
 127:../src/drv/drv_uart4.c ****     // DMA TX Interrupt
 128:../src/drv/drv_uart4.c ****     NVIC_InitStructure.NVIC_IRQChannel                   = DMA2_Channel5_IRQn;
 230              		.loc 1 128 0
 231 016e 4FF03C03 		mov	r3, #60
 232 0172 8DF80030 		strb	r3, [sp, #0]
 129:../src/drv/drv_uart4.c ****     NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
 233              		.loc 1 129 0
 234 0176 4FF00103 		mov	r3, #1
 235 017a 8DF80130 		strb	r3, [sp, #1]
 130:../src/drv/drv_uart4.c ****     NVIC_InitStructure.NVIC_IRQChannelSubPriority        = 0;
 236              		.loc 1 130 0
 237 017e 4FF00003 		mov	r3, #0
 238 0182 8DF80230 		strb	r3, [sp, #2]
 131:../src/drv/drv_uart4.c ****     NVIC_InitStructure.NVIC_IRQChannelCmd                = ENABLE;
 239              		.loc 1 131 0
 240 0186 4FF00103 		mov	r3, #1
 241 018a 8DF80330 		strb	r3, [sp, #3]
 132:../src/drv/drv_uart4.c **** 
 133:../src/drv/drv_uart4.c ****     NVIC_Init(&NVIC_InitStructure);
 242              		.loc 1 133 0
 243 018e 6B46     		mov	r3, sp
 244 0190 1846     		mov	r0, r3
 245 0192 FFF7FEFF 		bl	NVIC_Init
 134:../src/drv/drv_uart4.c **** 
 135:../src/drv/drv_uart4.c ****     USART_InitStructure.USART_BaudRate            = 115200;
 246              		.loc 1 135 0
 247 0196 4FF4E133 		mov	r3, #115200
 248 019a 0C93     		str	r3, [sp, #48]
 136:../src/drv/drv_uart4.c ****     USART_InitStructure.USART_WordLength          = USART_WordLength_8b;
 249              		.loc 1 136 0
 250 019c 4FF00003 		mov	r3, #0
 251 01a0 0D93     		str	r3, [sp, #52]
 137:../src/drv/drv_uart4.c ****     USART_InitStructure.USART_StopBits            = USART_StopBits_1;
 252              		.loc 1 137 0
 253 01a2 4FF00003 		mov	r3, #0
 254 01a6 0E93     		str	r3, [sp, #56]
 138:../src/drv/drv_uart4.c ****     USART_InitStructure.USART_Parity              = USART_Parity_No;
 255              		.loc 1 138 0
 256 01a8 4FF00003 		mov	r3, #0
 257 01ac 0F93     		str	r3, [sp, #60]
 139:../src/drv/drv_uart4.c ****     USART_InitStructure.USART_Mode                = USART_Mode_Rx | USART_Mode_Tx;
 258              		.loc 1 139 0
 259 01ae 4FF00C03 		mov	r3, #12
 260 01b2 1093     		str	r3, [sp, #64]
 140:../src/drv/drv_uart4.c ****     USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 261              		.loc 1 140 0
 262 01b4 4FF00003 		mov	r3, #0
 263 01b8 1193     		str	r3, [sp, #68]
 141:../src/drv/drv_uart4.c **** 
 142:../src/drv/drv_uart4.c ****     USART_Init(UART4, &USART_InitStructure);
 264              		.loc 1 142 0
 265 01ba 4FF49840 		mov	r0, #19456
 266 01be C4F20000 		movt	r0, 16384
 267 01c2 0CAB     		add	r3, sp, #48
 268 01c4 1946     		mov	r1, r3
 269 01c6 FFF7FEFF 		bl	USART_Init
 143:../src/drv/drv_uart4.c **** 
 144:../src/drv/drv_uart4.c ****     // Receive DMA into a circular buffer
 145:../src/drv/drv_uart4.c **** 
 146:../src/drv/drv_uart4.c ****     DMA_DeInit(DMA2_Channel3);
 270              		.loc 1 146 0
 271 01ca 4FF48660 		mov	r0, #1072
 272 01ce C4F20200 		movt	r0, 16386
 273 01d2 FFF7FEFF 		bl	DMA_DeInit
 147:../src/drv/drv_uart4.c **** 
 148:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_BufferSize         = UART4_BUFFER_SIZE;
 274              		.loc 1 148 0
 275 01d6 4FF40063 		mov	r3, #2048
 276 01da ADF81030 		strh	r3, [sp, #16]	@ movhi
 149:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_DIR                = DMA_DIR_PeripheralSRC;
 277              		.loc 1 149 0
 278 01de 4FF00003 		mov	r3, #0
 279 01e2 0393     		str	r3, [sp, #12]
 150:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_M2M                = DMA_M2M_Disable;
 280              		.loc 1 150 0
 281 01e4 4FF00003 		mov	r3, #0
 282 01e8 0B93     		str	r3, [sp, #44]
 151:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_MemoryBaseAddr     = (uint32_t)rx4Buffer;
 283              		.loc 1 151 0
 284 01ea 40F20003 		movw	r3, #:lower16:rx4Buffer
 285 01ee C0F20003 		movt	r3, #:upper16:rx4Buffer
 286 01f2 0293     		str	r3, [sp, #8]
 152:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_MemoryDataSize     = DMA_MemoryDataSize_Byte;
 287              		.loc 1 152 0
 288 01f4 4FF00003 		mov	r3, #0
 289 01f8 0893     		str	r3, [sp, #32]
 153:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_MemoryInc          = DMA_MemoryInc_Enable;
 290              		.loc 1 153 0
 291 01fa 4FF08003 		mov	r3, #128
 292 01fe 0693     		str	r3, [sp, #24]
 154:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_Mode               = DMA_Mode_Circular;
 293              		.loc 1 154 0
 294 0200 4FF02003 		mov	r3, #32
 295 0204 0993     		str	r3, [sp, #36]
 155:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)&UART4->RDR;
 296              		.loc 1 155 0
 297 0206 44F62443 		movw	r3, #19492
 298 020a C4F20003 		movt	r3, 16384
 299 020e 0193     		str	r3, [sp, #4]
 156:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
 300              		.loc 1 156 0
 301 0210 4FF00003 		mov	r3, #0
 302 0214 0793     		str	r3, [sp, #28]
 157:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_PeripheralInc      = DMA_PeripheralInc_Disable;
 303              		.loc 1 157 0
 304 0216 4FF00003 		mov	r3, #0
 305 021a 0593     		str	r3, [sp, #20]
 158:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_Priority           = DMA_Priority_Medium;
 306              		.loc 1 158 0
 307 021c 4FF48053 		mov	r3, #4096
 308 0220 0A93     		str	r3, [sp, #40]
 159:../src/drv/drv_uart4.c **** 
 160:../src/drv/drv_uart4.c ****     DMA_Init(DMA2_Channel3, &DMA_InitStructure);
 309              		.loc 1 160 0
 310 0222 4FF48660 		mov	r0, #1072
 311 0226 C4F20200 		movt	r0, 16386
 312 022a 01AB     		add	r3, sp, #4
 313 022c 1946     		mov	r1, r3
 314 022e FFF7FEFF 		bl	DMA_Init
 161:../src/drv/drv_uart4.c **** 
 162:../src/drv/drv_uart4.c ****     DMA_Cmd(DMA2_Channel3, ENABLE);
 315              		.loc 1 162 0
 316 0232 4FF48660 		mov	r0, #1072
 317 0236 C4F20200 		movt	r0, 16386
 318 023a 4FF00101 		mov	r1, #1
 319 023e FFF7FEFF 		bl	DMA_Cmd
 163:../src/drv/drv_uart4.c **** 
 164:../src/drv/drv_uart4.c ****     USART_DMACmd(UART4, USART_DMAReq_Rx, ENABLE);
 320              		.loc 1 164 0
 321 0242 4FF49840 		mov	r0, #19456
 322 0246 C4F20000 		movt	r0, 16384
 323 024a 4FF04001 		mov	r1, #64
 324 024e 4FF00102 		mov	r2, #1
 325 0252 FFF7FEFF 		bl	USART_DMACmd
 165:../src/drv/drv_uart4.c **** 
 166:../src/drv/drv_uart4.c ****     rx4DMAPos = DMA_GetCurrDataCounter(DMA2_Channel3);
 326              		.loc 1 166 0
 327 0256 4FF48660 		mov	r0, #1072
 328 025a C4F20200 		movt	r0, 16386
 329 025e FFF7FEFF 		bl	DMA_GetCurrDataCounter
 330 0262 0346     		mov	r3, r0
 331 0264 1A46     		mov	r2, r3
 332 0266 40F20003 		movw	r3, #:lower16:rx4DMAPos
 333 026a C0F20003 		movt	r3, #:upper16:rx4DMAPos
 334 026e 1A60     		str	r2, [r3, #0]
 167:../src/drv/drv_uart4.c **** 
 168:../src/drv/drv_uart4.c ****     // Transmit DMA
 169:../src/drv/drv_uart4.c ****     DMA_DeInit(DMA2_Channel5);
 335              		.loc 1 169 0
 336 0270 4FF48B60 		mov	r0, #1112
 337 0274 C4F20200 		movt	r0, 16386
 338 0278 FFF7FEFF 		bl	DMA_DeInit
 170:../src/drv/drv_uart4.c **** 
 171:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_BufferSize         = UART4_BUFFER_SIZE;
 339              		.loc 1 171 0
 340 027c 4FF40063 		mov	r3, #2048
 341 0280 ADF81030 		strh	r3, [sp, #16]	@ movhi
 172:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_DIR                = DMA_DIR_PeripheralDST;
 342              		.loc 1 172 0
 343 0284 4FF01003 		mov	r3, #16
 344 0288 0393     		str	r3, [sp, #12]
 173:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_M2M                = DMA_M2M_Disable;
 345              		.loc 1 173 0
 346 028a 4FF00003 		mov	r3, #0
 347 028e 0B93     		str	r3, [sp, #44]
 174:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_MemoryBaseAddr     = (uint32_t)tx4Buffer;
 348              		.loc 1 174 0
 349 0290 40F20003 		movw	r3, #:lower16:tx4Buffer
 350 0294 C0F20003 		movt	r3, #:upper16:tx4Buffer
 351 0298 0293     		str	r3, [sp, #8]
 175:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_MemoryDataSize     = DMA_MemoryDataSize_Byte;
 352              		.loc 1 175 0
 353 029a 4FF00003 		mov	r3, #0
 354 029e 0893     		str	r3, [sp, #32]
 176:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_MemoryInc          = DMA_MemoryInc_Enable;
 355              		.loc 1 176 0
 356 02a0 4FF08003 		mov	r3, #128
 357 02a4 0693     		str	r3, [sp, #24]
 177:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_Mode               = DMA_Mode_Normal;
 358              		.loc 1 177 0
 359 02a6 4FF00003 		mov	r3, #0
 360 02aa 0993     		str	r3, [sp, #36]
 178:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t) &UART4->TDR;
 361              		.loc 1 178 0
 362 02ac 44F62843 		movw	r3, #19496
 363 02b0 C4F20003 		movt	r3, 16384
 364 02b4 0193     		str	r3, [sp, #4]
 179:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
 365              		.loc 1 179 0
 366 02b6 4FF00003 		mov	r3, #0
 367 02ba 0793     		str	r3, [sp, #28]
 180:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_PeripheralInc      = DMA_PeripheralInc_Disable;
 368              		.loc 1 180 0
 369 02bc 4FF00003 		mov	r3, #0
 370 02c0 0593     		str	r3, [sp, #20]
 181:../src/drv/drv_uart4.c ****     DMA_InitStructure.DMA_Priority           = DMA_Priority_Medium;
 371              		.loc 1 181 0
 372 02c2 4FF48053 		mov	r3, #4096
 373 02c6 0A93     		str	r3, [sp, #40]
 182:../src/drv/drv_uart4.c **** 
 183:../src/drv/drv_uart4.c ****     DMA_Init(DMA2_Channel5, &DMA_InitStructure);
 374              		.loc 1 183 0
 375 02c8 4FF48B60 		mov	r0, #1112
 376 02cc C4F20200 		movt	r0, 16386
 377 02d0 01AB     		add	r3, sp, #4
 378 02d2 1946     		mov	r1, r3
 379 02d4 FFF7FEFF 		bl	DMA_Init
 184:../src/drv/drv_uart4.c **** 
 185:../src/drv/drv_uart4.c ****     DMA_ITConfig(DMA2_Channel5, DMA_IT_TC, ENABLE);
 380              		.loc 1 185 0
 381 02d8 4FF48B60 		mov	r0, #1112
 382 02dc C4F20200 		movt	r0, 16386
 383 02e0 4FF00201 		mov	r1, #2
 384 02e4 4FF00102 		mov	r2, #1
 385 02e8 FFF7FEFF 		bl	DMA_ITConfig
 186:../src/drv/drv_uart4.c **** 
 187:../src/drv/drv_uart4.c ****     DMA2_Channel5->CNDTR = 0;
 386              		.loc 1 187 0
 387 02ec 4FF48B63 		mov	r3, #1112
 388 02f0 C4F20203 		movt	r3, 16386
 389 02f4 4FF00002 		mov	r2, #0
 390 02f8 5A60     		str	r2, [r3, #4]
 188:../src/drv/drv_uart4.c **** 
 189:../src/drv/drv_uart4.c ****     USART_DMACmd(UART4, USART_DMAReq_Tx, ENABLE);
 391              		.loc 1 189 0
 392 02fa 4FF49840 		mov	r0, #19456
 393 02fe C4F20000 		movt	r0, 16384
 394 0302 4FF08001 		mov	r1, #128
 395 0306 4FF00102 		mov	r2, #1
 396 030a FFF7FEFF 		bl	USART_DMACmd
 190:../src/drv/drv_uart4.c **** 
 191:../src/drv/drv_uart4.c ****     USART_Cmd(UART4, ENABLE);
 397              		.loc 1 191 0
 398 030e 4FF49840 		mov	r0, #19456
 399 0312 C4F20000 		movt	r0, 16384
 400 0316 4FF00101 		mov	r1, #1
 401 031a FFF7FEFF 		bl	USART_Cmd
 192:../src/drv/drv_uart4.c **** }
 402              		.loc 1 192 0
 403 031e 15B0     		add	sp, sp, #84
 404 0320 00BD     		pop	{pc}
 405              		.cfi_endproc
 406              	.LFE113:
 408 0322 00BF     		.align	2
 409              		.global	uart4Available
 410              		.thumb
 411              		.thumb_func
 413              	uart4Available:
 414              	.LFB114:
 193:../src/drv/drv_uart4.c **** 
 194:../src/drv/drv_uart4.c **** ///////////////////////////////////////////////////////////////////////////////
 195:../src/drv/drv_uart4.c **** // UART4 Available
 196:../src/drv/drv_uart4.c **** ///////////////////////////////////////////////////////////////////////////////
 197:../src/drv/drv_uart4.c **** 
 198:../src/drv/drv_uart4.c **** uint16_t uart4Available(void)
 199:../src/drv/drv_uart4.c **** {
 415              		.loc 1 199 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419 0324 08B5     		push	{r3, lr}
 420              	.LCFI4:
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 14, -4
 423              		.cfi_offset 3, -8
 200:../src/drv/drv_uart4.c ****     return (DMA_GetCurrDataCounter(DMA2_Channel3) != rx4DMAPos) ? true : false;
 424              		.loc 1 200 0
 425 0326 4FF48660 		mov	r0, #1072
 426 032a C4F20200 		movt	r0, 16386
 427 032e FFF7FEFF 		bl	DMA_GetCurrDataCounter
 428 0332 0346     		mov	r3, r0
 429 0334 1A46     		mov	r2, r3
 430 0336 40F20003 		movw	r3, #:lower16:rx4DMAPos
 431 033a C0F20003 		movt	r3, #:upper16:rx4DMAPos
 432 033e 1B68     		ldr	r3, [r3, #0]
 433 0340 9A42     		cmp	r2, r3
 434 0342 0CBF     		ite	eq
 435 0344 0023     		moveq	r3, #0
 436 0346 0123     		movne	r3, #1
 437 0348 9BB2     		uxth	r3, r3
 201:../src/drv/drv_uart4.c **** }
 438              		.loc 1 201 0
 439 034a 1846     		mov	r0, r3
 440 034c 08BD     		pop	{r3, pc}
 441              		.cfi_endproc
 442              	.LFE114:
 444 034e 00BF     		.align	2
 445              		.global	uart4Read
 446              		.thumb
 447              		.thumb_func
 449              	uart4Read:
 450              	.LFB115:
 202:../src/drv/drv_uart4.c **** 
 203:../src/drv/drv_uart4.c **** ///////////////////////////////////////////////////////////////////////////////
 204:../src/drv/drv_uart4.c **** // UART4 Read
 205:../src/drv/drv_uart4.c **** ///////////////////////////////////////////////////////////////////////////////
 206:../src/drv/drv_uart4.c **** 
 207:../src/drv/drv_uart4.c **** uint8_t uart4Read(void)
 208:../src/drv/drv_uart4.c **** {
 451              		.loc 1 208 0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 8
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455              		@ link register save eliminated.
 456 0350 82B0     		sub	sp, sp, #8
 457              	.LCFI5:
 458              		.cfi_def_cfa_offset 8
 209:../src/drv/drv_uart4.c ****     uint8_t ch;
 210:../src/drv/drv_uart4.c **** 
 211:../src/drv/drv_uart4.c ****     ch = rx4Buffer[UART4_BUFFER_SIZE - rx4DMAPos];
 459              		.loc 1 211 0
 460 0352 40F20003 		movw	r3, #:lower16:rx4DMAPos
 461 0356 C0F20003 		movt	r3, #:upper16:rx4DMAPos
 462 035a 1B68     		ldr	r3, [r3, #0]
 463 035c C3F50062 		rsb	r2, r3, #2048
 464 0360 40F20003 		movw	r3, #:lower16:rx4Buffer
 465 0364 C0F20003 		movt	r3, #:upper16:rx4Buffer
 466 0368 9B5C     		ldrb	r3, [r3, r2]
 467 036a 8DF80730 		strb	r3, [sp, #7]
 212:../src/drv/drv_uart4.c ****     // go back around the buffer
 213:../src/drv/drv_uart4.c ****     if (--rx4DMAPos == 0)
 468              		.loc 1 213 0
 469 036e 40F20003 		movw	r3, #:lower16:rx4DMAPos
 470 0372 C0F20003 		movt	r3, #:upper16:rx4DMAPos
 471 0376 1B68     		ldr	r3, [r3, #0]
 472 0378 03F1FF32 		add	r2, r3, #-1
 473 037c 40F20003 		movw	r3, #:lower16:rx4DMAPos
 474 0380 C0F20003 		movt	r3, #:upper16:rx4DMAPos
 475 0384 1A60     		str	r2, [r3, #0]
 476 0386 40F20003 		movw	r3, #:lower16:rx4DMAPos
 477 038a C0F20003 		movt	r3, #:upper16:rx4DMAPos
 478 038e 1B68     		ldr	r3, [r3, #0]
 479 0390 002B     		cmp	r3, #0
 480 0392 06D1     		bne	.L9
 214:../src/drv/drv_uart4.c **** 	    rx4DMAPos = UART4_BUFFER_SIZE;
 481              		.loc 1 214 0
 482 0394 40F20003 		movw	r3, #:lower16:rx4DMAPos
 483 0398 C0F20003 		movt	r3, #:upper16:rx4DMAPos
 484 039c 4FF40062 		mov	r2, #2048
 485 03a0 1A60     		str	r2, [r3, #0]
 486              	.L9:
 215:../src/drv/drv_uart4.c **** 
 216:../src/drv/drv_uart4.c ****     return ch;
 487              		.loc 1 216 0
 488 03a2 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 217:../src/drv/drv_uart4.c **** }
 489              		.loc 1 217 0
 490 03a6 1846     		mov	r0, r3
 491 03a8 02B0     		add	sp, sp, #8
 492 03aa 7047     		bx	lr
 493              		.cfi_endproc
 494              	.LFE115:
 496              		.align	2
 497              		.global	uart4ReadPoll
 498              		.thumb
 499              		.thumb_func
 501              	uart4ReadPoll:
 502              	.LFB116:
 218:../src/drv/drv_uart4.c **** 
 219:../src/drv/drv_uart4.c **** ///////////////////////////////////////////////////////////////////////////////
 220:../src/drv/drv_uart4.c **** // UART4 Read Poll
 221:../src/drv/drv_uart4.c **** ///////////////////////////////////////////////////////////////////////////////
 222:../src/drv/drv_uart4.c **** 
 223:../src/drv/drv_uart4.c **** uint8_t uart4ReadPoll(void)
 224:../src/drv/drv_uart4.c **** {
 503              		.loc 1 224 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507 03ac 08B5     		push	{r3, lr}
 508              	.LCFI6:
 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 14, -4
 511              		.cfi_offset 3, -8
 225:../src/drv/drv_uart4.c ****     while (!uart4Available()); // wait for some bytes
 512              		.loc 1 225 0
 513 03ae 00BF     		nop
 514              	.L11:
 515              		.loc 1 225 0 is_stmt 0 discriminator 1
 516 03b0 FFF7FEFF 		bl	uart4Available
 517 03b4 0346     		mov	r3, r0
 518 03b6 002B     		cmp	r3, #0
 519 03b8 FAD0     		beq	.L11
 226:../src/drv/drv_uart4.c ****     return uart4Read();
 520              		.loc 1 226 0 is_stmt 1
 521 03ba FFF7FEFF 		bl	uart4Read
 522 03be 0346     		mov	r3, r0
 227:../src/drv/drv_uart4.c **** }
 523              		.loc 1 227 0
 524 03c0 1846     		mov	r0, r3
 525 03c2 08BD     		pop	{r3, pc}
 526              		.cfi_endproc
 527              	.LFE116:
 529              		.align	2
 530              		.global	uart4Write
 531              		.thumb
 532              		.thumb_func
 534              	uart4Write:
 535              	.LFB117:
 228:../src/drv/drv_uart4.c **** 
 229:../src/drv/drv_uart4.c **** ///////////////////////////////////////////////////////////////////////////////
 230:../src/drv/drv_uart4.c **** // UART4 Write
 231:../src/drv/drv_uart4.c **** ///////////////////////////////////////////////////////////////////////////////
 232:../src/drv/drv_uart4.c **** 
 233:../src/drv/drv_uart4.c **** void uart4Write(uint8_t ch)
 234:../src/drv/drv_uart4.c **** {
 536              		.loc 1 234 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 8
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540 03c4 00B5     		push	{lr}
 541              	.LCFI7:
 542              		.cfi_def_cfa_offset 4
 543              		.cfi_offset 14, -4
 544 03c6 83B0     		sub	sp, sp, #12
 545              	.LCFI8:
 546              		.cfi_def_cfa_offset 16
 547 03c8 0346     		mov	r3, r0
 548 03ca 8DF80730 		strb	r3, [sp, #7]
 235:../src/drv/drv_uart4.c ****     tx4Buffer[tx4BufferHead] = ch;
 549              		.loc 1 235 0
 550 03ce 40F20003 		movw	r3, #:lower16:tx4BufferHead
 551 03d2 C0F20003 		movt	r3, #:upper16:tx4BufferHead
 552 03d6 1B88     		ldrh	r3, [r3, #0]
 553 03d8 1A46     		mov	r2, r3
 554 03da 40F20003 		movw	r3, #:lower16:tx4Buffer
 555 03de C0F20003 		movt	r3, #:upper16:tx4Buffer
 556 03e2 9DF80710 		ldrb	r1, [sp, #7]
 557 03e6 9954     		strb	r1, [r3, r2]
 236:../src/drv/drv_uart4.c ****     tx4BufferHead = (tx4BufferHead + 1) % UART4_BUFFER_SIZE;
 558              		.loc 1 236 0
 559 03e8 40F20003 		movw	r3, #:lower16:tx4BufferHead
 560 03ec C0F20003 		movt	r3, #:upper16:tx4BufferHead
 561 03f0 1B88     		ldrh	r3, [r3, #0]
 562 03f2 03F10103 		add	r3, r3, #1
 563 03f6 4FEAE372 		asr	r2, r3, #31
 564 03fa 4FEA5252 		lsr	r2, r2, #21
 565 03fe 9B18     		adds	r3, r3, r2
 566 0400 4FEA4353 		lsl	r3, r3, #21
 567 0404 4FEA5353 		lsr	r3, r3, #21
 568 0408 9B1A     		subs	r3, r3, r2
 569 040a 9AB2     		uxth	r2, r3
 570 040c 40F20003 		movw	r3, #:lower16:tx4BufferHead
 571 0410 C0F20003 		movt	r3, #:upper16:tx4BufferHead
 572 0414 1A80     		strh	r2, [r3, #0]	@ movhi
 237:../src/drv/drv_uart4.c **** 
 238:../src/drv/drv_uart4.c ****     // if DMA wasn't enabled, fire it up
 239:../src/drv/drv_uart4.c ****     if (!(DMA2_Channel5->CCR & 1))
 573              		.loc 1 239 0
 574 0416 4FF48B63 		mov	r3, #1112
 575 041a C4F20203 		movt	r3, 16386
 576 041e 1B68     		ldr	r3, [r3, #0]
 577 0420 03F00103 		and	r3, r3, #1
 578 0424 002B     		cmp	r3, #0
 579 0426 01D1     		bne	.L12
 240:../src/drv/drv_uart4.c ****         uart4TxDMA();
 580              		.loc 1 240 0
 581 0428 FFF7EAFD 		bl	uart4TxDMA
 582              	.L12:
 241:../src/drv/drv_uart4.c **** }
 583              		.loc 1 241 0
 584 042c 03B0     		add	sp, sp, #12
 585 042e 00BD     		pop	{pc}
 586              		.cfi_endproc
 587              	.LFE117:
 589              		.align	2
 590              		.global	uart4Print
 591              		.thumb
 592              		.thumb_func
 594              	uart4Print:
 595              	.LFB118:
 242:../src/drv/drv_uart4.c **** 
 243:../src/drv/drv_uart4.c **** ///////////////////////////////////////////////////////////////////////////////
 244:../src/drv/drv_uart4.c **** // UART4 Print
 245:../src/drv/drv_uart4.c **** ///////////////////////////////////////////////////////////////////////////////
 246:../src/drv/drv_uart4.c **** 
 247:../src/drv/drv_uart4.c **** void uart4Print(char *str)
 248:../src/drv/drv_uart4.c **** {
 596              		.loc 1 248 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 8
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600 0430 00B5     		push	{lr}
 601              	.LCFI9:
 602              		.cfi_def_cfa_offset 4
 603              		.cfi_offset 14, -4
 604 0432 83B0     		sub	sp, sp, #12
 605              	.LCFI10:
 606              		.cfi_def_cfa_offset 16
 607 0434 0190     		str	r0, [sp, #4]
 249:../src/drv/drv_uart4.c ****     while (*str)
 608              		.loc 1 249 0
 609 0436 08E0     		b	.L15
 610              	.L16:
 250:../src/drv/drv_uart4.c **** 	    uart4Write(*(str++));
 611              		.loc 1 250 0
 612 0438 019B     		ldr	r3, [sp, #4]
 613 043a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 614 043c 019A     		ldr	r2, [sp, #4]
 615 043e 02F10102 		add	r2, r2, #1
 616 0442 0192     		str	r2, [sp, #4]
 617 0444 1846     		mov	r0, r3
 618 0446 FFF7FEFF 		bl	uart4Write
 619              	.L15:
 249:../src/drv/drv_uart4.c ****     while (*str)
 620              		.loc 1 249 0 discriminator 1
 621 044a 019B     		ldr	r3, [sp, #4]
 622 044c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 623 044e 002B     		cmp	r3, #0
 624 0450 F2D1     		bne	.L16
 251:../src/drv/drv_uart4.c **** }
 625              		.loc 1 251 0
 626 0452 03B0     		add	sp, sp, #12
 627 0454 00BD     		pop	{pc}
 628              		.cfi_endproc
 629              	.LFE118:
 631              	.Letext0:
 632              		.file 2 "c:\\program files\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/gcc/ar
 633              		.file 3 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\Device\\
 634              		.file 4 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\STM32F30
 635              		.file 5 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\STM32F30
 636              		.file 6 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\STM32F30
 637              		.file 7 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\STM32F30
 638              		.file 8 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src\\gps/gpsMediaTe
 639              		.file 9 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src\\gps/gpsNMEA.h"
 640              		.file 10 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src\\gps/gpsUblox.
 641              		.file 11 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\CMSIS\\
DEFINED SYMBOLS
                            *ABS*:00000000 drv_uart4.c
                            *COM*:00000001 mtk19ProcessDataState
                            *COM*:00000001 nmeaProcessDataState
                            *COM*:00000001 ubloxProcessDataState
                            *COM*:00000800 rx4Buffer
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccwB5Rtn.s:28     .bss:00000000 rx4DMAPos
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccwB5Rtn.s:25     .bss:00000000 $d
                            *COM*:00000800 tx4Buffer
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccwB5Rtn.s:35     .bss:00000004 tx4BufferTail
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccwB5Rtn.s:41     .bss:00000006 tx4BufferHead
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccwB5Rtn.s:44     .text:00000000 $t
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccwB5Rtn.s:48     .text:00000000 uart4TxDMA
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccwB5Rtn.s:130    .text:000000ac DMA2_Channel5_IRQHandler
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccwB5Rtn.s:172    .text:000000e8 uart4Init
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccwB5Rtn.s:413    .text:00000324 uart4Available
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccwB5Rtn.s:449    .text:00000350 uart4Read
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccwB5Rtn.s:501    .text:000003ac uart4ReadPoll
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccwB5Rtn.s:534    .text:000003c4 uart4Write
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccwB5Rtn.s:594    .text:00000430 uart4Print
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DMA_Cmd
DMA_ClearITPendingBit
RCC_AHBPeriphClockCmd
RCC_APB1PeriphClockCmd
GPIO_PinAFConfig
GPIO_Init
NVIC_Init
USART_Init
DMA_DeInit
DMA_Init
USART_DMACmd
DMA_GetCurrDataCounter
DMA_ITConfig
USART_Cmd

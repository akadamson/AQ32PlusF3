   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"drv_rx.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	mtk19ProcessDataState,1,1
  20              		.comm	nmeaProcessDataState,1,1
  21              		.comm	ubloxProcessDataState,1,1
  22              		.global	rcActive
  23              		.bss
  26              	rcActive:
  27 0000 00       		.space	1
  28              		.data
  29              		.align	2
  32              	Channels:
  33 0000 00440140 		.word	1073824768
  34 0004 0000     		.short	0
  35 0006 0200     		.short	2
  36 0008 002C0140 		.word	1073818624
  37 000c 0000     		.short	0
  38 000e 0200     		.short	2
  39 0010 002C0140 		.word	1073818624
  40 0014 0400     		.short	4
  41 0016 0400     		.short	4
  42 0018 00000040 		.word	1073741824
  43 001c 0400     		.short	4
  44 001e 0400     		.short	4
  45 0020 00000040 		.word	1073741824
  46 0024 0800     		.short	8
  47 0026 0800     		.short	8
  48 0028 00000040 		.word	1073741824
  49 002c 0C00     		.short	12
  50 002e 1000     		.short	16
  51 0030 00040040 		.word	1073742848
  52 0034 0000     		.short	0
  53 0036 0200     		.short	2
  54 0038 00040040 		.word	1073742848
  55 003c 0400     		.short	4
  56 003e 0400     		.short	4
  57              		.bss
  58 0001 000000   		.align	2
  59              	Inputs:
  60 0004 00000000 		.space	48
  60      00000000 
  60      00000000 
  60      00000000 
  60      00000000 
  61              		.align	2
  62              	TIM_ICInitStructure:
  63 0034 00000000 		.space	10
  63      00000000 
  63      0000
  64              		.comm	i,1,1
  65              		.comm	spektrumBindCount,1,1
  66              		.comm	spektrumChannelData,48,4
  67              		.comm	spektrumChannelMask,1,1
  68              		.comm	spektrumChannelShift,1,1
  69              		.comm	spektrumFrame,16,4
  70              		.global	spektrumFrameComplete
  73              	spektrumFrameComplete:
  74 003e 00       		.space	1
  75              		.comm	spektrumFramePosition,1,1
  76              		.comm	spektrumTimeInterval,4,4
  77              		.comm	spektrumTimeLast,4,4
  78              		.text
  79              		.align	2
  80              		.thumb
  81              		.thumb_func
  83              	serialPWM_IRQHandler:
  84              	.LFB111:
  85              		.file 1 "../src/drv/drv_rx.c"
   1:../src/drv/drv_rx.c **** /*
   2:../src/drv/drv_rx.c ****   December 2012
   3:../src/drv/drv_rx.c **** 
   4:../src/drv/drv_rx.c ****   aq32Plus_F3 Rev -
   5:../src/drv/drv_rx.c **** 
   6:../src/drv/drv_rx.c ****   Copyright (c) 2012 John Ihlein.  All rights reserved.
   7:../src/drv/drv_rx.c **** 
   8:../src/drv/drv_rx.c ****   Open Source STM32 Based Multicopter Controller Software
   9:../src/drv/drv_rx.c **** 
  10:../src/drv/drv_rx.c ****   Includes code and/or ideas from:
  11:../src/drv/drv_rx.c **** 
  12:../src/drv/drv_rx.c ****   1)AeroQuad
  13:../src/drv/drv_rx.c ****   2)BaseFlight
  14:../src/drv/drv_rx.c ****   3)CH Robotics
  15:../src/drv/drv_rx.c ****   4)MultiWii
  16:../src/drv/drv_rx.c ****   5)S.O.H. Madgwick
  17:../src/drv/drv_rx.c ****   6)UAVX
  18:../src/drv/drv_rx.c ****   7)STM DiscoveryF3 demonstration software
  19:../src/drv/drv_rx.c **** 
  20:../src/drv/drv_rx.c ****   Designed to run on the DiscoveryF3 board
  21:../src/drv/drv_rx.c **** 
  22:../src/drv/drv_rx.c ****   This program is free software: you can redistribute it and/or modify
  23:../src/drv/drv_rx.c ****   it under the terms of the GNU General Public License as published by
  24:../src/drv/drv_rx.c ****   the Free Software Foundation, either version 3 of the License, or
  25:../src/drv/drv_rx.c ****   (at your option) any later version.
  26:../src/drv/drv_rx.c **** 
  27:../src/drv/drv_rx.c ****   This program is distributed in the hope that it will be useful,
  28:../src/drv/drv_rx.c ****   but WITHOUT ANY WARRANTY; without even the implied warranty of
  29:../src/drv/drv_rx.c ****   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  30:../src/drv/drv_rx.c ****   GNU General Public License for more details.
  31:../src/drv/drv_rx.c **** 
  32:../src/drv/drv_rx.c ****   You should have received a copy of the GNU General Public License
  33:../src/drv/drv_rx.c ****   along with this program. If not, see <http://www.gnu.org/licenses/>.
  34:../src/drv/drv_rx.c **** */
  35:../src/drv/drv_rx.c **** 
  36:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
  37:../src/drv/drv_rx.c **** 
  38:../src/drv/drv_rx.c **** #include "board.h"
  39:../src/drv/drv_rx.c **** 
  40:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
  41:../src/drv/drv_rx.c **** // Receiver Defines and Variables
  42:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
  43:../src/drv/drv_rx.c **** 
  44:../src/drv/drv_rx.c **** #define RX_PULSE_1p5MS 3000  // 1.5 ms pulse width
  45:../src/drv/drv_rx.c **** 
  46:../src/drv/drv_rx.c **** uint8_t rcActive = false;
  47:../src/drv/drv_rx.c **** 
  48:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
  49:../src/drv/drv_rx.c **** // PWM Receiver Defines and Variables
  50:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
  51:../src/drv/drv_rx.c **** 
  52:../src/drv/drv_rx.c **** static struct TIM_Channel { TIM_TypeDef *tim;
  53:../src/drv/drv_rx.c ****                             uint16_t    channel;
  54:../src/drv/drv_rx.c ****                             uint16_t    cc;
  55:../src/drv/drv_rx.c ****                           } Channels[] = { { TIM16, TIM_Channel_1, TIM_IT_CC1 },
  56:../src/drv/drv_rx.c ****                                            { TIM1,  TIM_Channel_1, TIM_IT_CC1 },
  57:../src/drv/drv_rx.c ****                                            { TIM1,  TIM_Channel_2, TIM_IT_CC2 },
  58:../src/drv/drv_rx.c ****                                            { TIM2,  TIM_Channel_2, TIM_IT_CC2 },
  59:../src/drv/drv_rx.c ****                                            { TIM2,  TIM_Channel_3, TIM_IT_CC3 },
  60:../src/drv/drv_rx.c ****                                            { TIM2,  TIM_Channel_4, TIM_IT_CC4 },
  61:../src/drv/drv_rx.c ****                                            { TIM3,  TIM_Channel_1, TIM_IT_CC1 },
  62:../src/drv/drv_rx.c ****                                            { TIM3,  TIM_Channel_2, TIM_IT_CC2 }, };
  63:../src/drv/drv_rx.c **** 
  64:../src/drv/drv_rx.c **** static struct PWM_State { uint8_t  state;          // 0 = looking for rising edge, 1 = looking for 
  65:../src/drv/drv_rx.c ****                           uint16_t riseTime;       // Timer value at rising edge of pulse
  66:../src/drv/drv_rx.c ****                           uint16_t pulseWidth;     // Computed pulse width
  67:../src/drv/drv_rx.c ****                         } Inputs[8] = { { 0, } };
  68:../src/drv/drv_rx.c **** 
  69:../src/drv/drv_rx.c **** static TIM_ICInitTypeDef  TIM_ICInitStructure;
  70:../src/drv/drv_rx.c **** 
  71:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
  72:../src/drv/drv_rx.c **** // Spektrum Satellite Receiver Defines and Variables
  73:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
  74:../src/drv/drv_rx.c **** 
  75:../src/drv/drv_rx.c **** #define SPEKTRUM_UART_PIN        GPIO_Pin_9
  76:../src/drv/drv_rx.c **** #define SPEKTRUM_UART_GPIO       GPIOD
  77:../src/drv/drv_rx.c **** #define SPEKTRUM_UART_PINSOURCE  GPIO_PinSource9
  78:../src/drv/drv_rx.c **** #define SPEKTRUM_BIND_PIN        GPIO_Pin_1
  79:../src/drv/drv_rx.c **** #define SPEKTRUM_BIND_GPIO       GPIOC
  80:../src/drv/drv_rx.c **** 
  81:../src/drv/drv_rx.c **** #define SPEKTRUM_FRAME_SIZE 16
  82:../src/drv/drv_rx.c **** 
  83:../src/drv/drv_rx.c **** uint8_t  i;
  84:../src/drv/drv_rx.c **** uint8_t  spektrumBindCount;
  85:../src/drv/drv_rx.c **** 
  86:../src/drv/drv_rx.c **** uint32_t spektrumChannelData[SPEKTRUM_MAX_CHANNEL];
  87:../src/drv/drv_rx.c **** uint8_t  spektrumChannelMask;
  88:../src/drv/drv_rx.c **** uint8_t  spektrumChannelShift;
  89:../src/drv/drv_rx.c **** 
  90:../src/drv/drv_rx.c **** uint8_t  spektrumFrame[SPEKTRUM_FRAME_SIZE];
  91:../src/drv/drv_rx.c **** bool     spektrumFrameComplete = false;
  92:../src/drv/drv_rx.c **** uint8_t  spektrumFramePosition;
  93:../src/drv/drv_rx.c **** 
  94:../src/drv/drv_rx.c **** uint32_t spektrumTimeInterval;
  95:../src/drv/drv_rx.c **** uint32_t spektrumTimeLast;
  96:../src/drv/drv_rx.c **** 
  97:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
  98:../src/drv/drv_rx.c **** // Serial PWM Receiver Interrupt Handler
  99:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
 100:../src/drv/drv_rx.c **** 
 101:../src/drv/drv_rx.c **** static void serialPWM_IRQHandler(TIM_TypeDef *tim)
 102:../src/drv/drv_rx.c **** {
  86              		.loc 1 102 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 16
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90 0000 00B5     		push	{lr}
  91              	.LCFI0:
  92              		.cfi_def_cfa_offset 4
  93              		.cfi_offset 14, -4
  94 0002 85B0     		sub	sp, sp, #20
  95              	.LCFI1:
  96              		.cfi_def_cfa_offset 24
  97 0004 0190     		str	r0, [sp, #4]
 103:../src/drv/drv_rx.c ****     uint16_t diff;
 104:../src/drv/drv_rx.c ****     static uint16_t now;
 105:../src/drv/drv_rx.c ****     static uint16_t last = 0;
 106:../src/drv/drv_rx.c ****     static uint8_t  chan = 0;
 107:../src/drv/drv_rx.c **** 
 108:../src/drv/drv_rx.c ****     if (TIM_GetITStatus(tim, TIM_IT_CC4) == SET)
  98              		.loc 1 108 0
  99 0006 0198     		ldr	r0, [sp, #4]
 100 0008 4FF01001 		mov	r1, #16
 101 000c FFF7FEFF 		bl	TIM_GetITStatus
 102 0010 0346     		mov	r3, r0
 103 0012 012B     		cmp	r3, #1
 104 0014 1AD1     		bne	.L2
 109:../src/drv/drv_rx.c ****     {
 110:../src/drv/drv_rx.c ****         last = now;
 105              		.loc 1 110 0
 106 0016 40F20003 		movw	r3, #:lower16:now.8862
 107 001a C0F20003 		movt	r3, #:upper16:now.8862
 108 001e 1A88     		ldrh	r2, [r3, #0]
 109 0020 40F20003 		movw	r3, #:lower16:last.8863
 110 0024 C0F20003 		movt	r3, #:upper16:last.8863
 111 0028 1A80     		strh	r2, [r3, #0]	@ movhi
 111:../src/drv/drv_rx.c ****         now = TIM_GetCapture4(tim);
 112              		.loc 1 111 0
 113 002a 0198     		ldr	r0, [sp, #4]
 114 002c FFF7FEFF 		bl	TIM_GetCapture4
 115 0030 0346     		mov	r3, r0
 116 0032 9AB2     		uxth	r2, r3
 117 0034 40F20003 		movw	r3, #:lower16:now.8862
 118 0038 C0F20003 		movt	r3, #:upper16:now.8862
 119 003c 1A80     		strh	r2, [r3, #0]	@ movhi
 112:../src/drv/drv_rx.c ****         rcActive = true;
 120              		.loc 1 112 0
 121 003e 40F20003 		movw	r3, #:lower16:rcActive
 122 0042 C0F20003 		movt	r3, #:upper16:rcActive
 123 0046 4FF00102 		mov	r2, #1
 124 004a 1A70     		strb	r2, [r3, #0]
 125              	.L2:
 113:../src/drv/drv_rx.c ****     }
 114:../src/drv/drv_rx.c **** 
 115:../src/drv/drv_rx.c ****     TIM_ClearITPendingBit(tim, TIM_IT_CC4);
 126              		.loc 1 115 0
 127 004c 0198     		ldr	r0, [sp, #4]
 128 004e 4FF01001 		mov	r1, #16
 129 0052 FFF7FEFF 		bl	TIM_ClearITPendingBit
 116:../src/drv/drv_rx.c **** 
 117:../src/drv/drv_rx.c ****     diff = now - last;
 130              		.loc 1 117 0
 131 0056 40F20003 		movw	r3, #:lower16:now.8862
 132 005a C0F20003 		movt	r3, #:upper16:now.8862
 133 005e 1A88     		ldrh	r2, [r3, #0]
 134 0060 40F20003 		movw	r3, #:lower16:last.8863
 135 0064 C0F20003 		movt	r3, #:upper16:last.8863
 136 0068 1B88     		ldrh	r3, [r3, #0]
 137 006a D31A     		subs	r3, r2, r3
 138 006c ADF80E30 		strh	r3, [sp, #14]	@ movhi
 118:../src/drv/drv_rx.c **** 
 119:../src/drv/drv_rx.c ****     if (diff > 2700 * 2)   // Per http://www.rcgroups.com/forums/showpost.php?p=21996147&postcount=
 139              		.loc 1 119 0
 140 0070 BDF80E20 		ldrh	r2, [sp, #14]
 141 0074 41F21853 		movw	r3, #5400
 142 0078 9A42     		cmp	r2, r3
 143 007a 07D9     		bls	.L3
 120:../src/drv/drv_rx.c ****     {                      // "So, if you use 2.5ms or higher as being the reset for the PPM stream
 121:../src/drv/drv_rx.c ****         chan = 0;          // you will be fine. I use 2.7ms just to be safe."
 144              		.loc 1 121 0
 145 007c 40F20003 		movw	r3, #:lower16:chan.8864
 146 0080 C0F20003 		movt	r3, #:upper16:chan.8864
 147 0084 4FF00002 		mov	r2, #0
 148 0088 1A70     		strb	r2, [r3, #0]
 149 008a 33E0     		b	.L1
 150              	.L3:
 122:../src/drv/drv_rx.c ****     }
 123:../src/drv/drv_rx.c ****     else
 124:../src/drv/drv_rx.c ****     {
 125:../src/drv/drv_rx.c ****         if (diff > 750 * 2 && diff < 2250 * 2 && chan < 8)    // 750 to 2250 ms is our 'valid' chan
 151              		.loc 1 125 0
 152 008c BDF80E20 		ldrh	r2, [sp, #14]
 153 0090 40F2DC53 		movw	r3, #1500
 154 0094 9A42     		cmp	r2, r3
 155 0096 20D9     		bls	.L5
 156              		.loc 1 125 0 is_stmt 0 discriminator 1
 157 0098 BDF80E20 		ldrh	r2, [sp, #14]
 158 009c 41F29313 		movw	r3, #4499
 159 00a0 9A42     		cmp	r2, r3
 160 00a2 1AD8     		bhi	.L5
 161 00a4 40F20003 		movw	r3, #:lower16:chan.8864
 162 00a8 C0F20003 		movt	r3, #:upper16:chan.8864
 163 00ac 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 164 00ae 072B     		cmp	r3, #7
 165 00b0 13D8     		bhi	.L5
 126:../src/drv/drv_rx.c ****         {
 127:../src/drv/drv_rx.c ****             Inputs[chan].pulseWidth = diff;
 166              		.loc 1 127 0 is_stmt 1
 167 00b2 40F20003 		movw	r3, #:lower16:chan.8864
 168 00b6 C0F20003 		movt	r3, #:upper16:chan.8864
 169 00ba 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 170 00bc 1946     		mov	r1, r3
 171 00be 40F20002 		movw	r2, #:lower16:Inputs
 172 00c2 C0F20002 		movt	r2, #:upper16:Inputs
 173 00c6 0B46     		mov	r3, r1
 174 00c8 4FEA4303 		lsl	r3, r3, #1
 175 00cc 5B18     		adds	r3, r3, r1
 176 00ce 4FEA4303 		lsl	r3, r3, #1
 177 00d2 D318     		adds	r3, r2, r3
 178 00d4 BDF80E20 		ldrh	r2, [sp, #14]	@ movhi
 179 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
 180              	.L5:
 128:../src/drv/drv_rx.c ****         }
 129:../src/drv/drv_rx.c ****         chan++;
 181              		.loc 1 129 0
 182 00da 40F20003 		movw	r3, #:lower16:chan.8864
 183 00de C0F20003 		movt	r3, #:upper16:chan.8864
 184 00e2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 185 00e4 03F10103 		add	r3, r3, #1
 186 00e8 DAB2     		uxtb	r2, r3
 187 00ea 40F20003 		movw	r3, #:lower16:chan.8864
 188 00ee C0F20003 		movt	r3, #:upper16:chan.8864
 189 00f2 1A70     		strb	r2, [r3, #0]
 190              	.L1:
 130:../src/drv/drv_rx.c ****     }
 131:../src/drv/drv_rx.c **** }
 191              		.loc 1 131 0
 192 00f4 05B0     		add	sp, sp, #20
 193 00f6 00BD     		pop	{pc}
 194              		.cfi_endproc
 195              	.LFE111:
 197              		.align	2
 198              		.thumb
 199              		.thumb_func
 201              	parallelPWM_IRQHandler:
 202              	.LFB112:
 132:../src/drv/drv_rx.c **** 
 133:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
 134:../src/drv/drv_rx.c **** // Parallel PWM Receiver Interrupt Handler
 135:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
 136:../src/drv/drv_rx.c **** 
 137:../src/drv/drv_rx.c **** static void parallelPWM_IRQHandler(TIM_TypeDef *tim)
 138:../src/drv/drv_rx.c **** {
 203              		.loc 1 138 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 32
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207 00f8 00B5     		push	{lr}
 208              	.LCFI2:
 209              		.cfi_def_cfa_offset 4
 210              		.cfi_offset 14, -4
 211 00fa 89B0     		sub	sp, sp, #36
 212              	.LCFI3:
 213              		.cfi_def_cfa_offset 40
 214 00fc 0190     		str	r0, [sp, #4]
 139:../src/drv/drv_rx.c ****     uint8_t i;
 140:../src/drv/drv_rx.c ****     uint32_t inputCaptureValue = 0;
 215              		.loc 1 140 0
 216 00fe 4FF00003 		mov	r3, #0
 217 0102 0693     		str	r3, [sp, #24]
 141:../src/drv/drv_rx.c **** 
 142:../src/drv/drv_rx.c ****     for (i = 0; i < 8; i++) {
 218              		.loc 1 142 0
 219 0104 4FF00003 		mov	r3, #0
 220 0108 8DF81F30 		strb	r3, [sp, #31]
 221 010c DDE0     		b	.L7
 222              	.L19:
 223              	.LBB2:
 143:../src/drv/drv_rx.c ****         struct TIM_Channel channel = Channels[i];
 224              		.loc 1 143 0
 225 010e 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 226 0112 40F20002 		movw	r2, #:lower16:Channels
 227 0116 C0F20002 		movt	r2, #:upper16:Channels
 228 011a 4FEAC303 		lsl	r3, r3, #3
 229 011e D318     		adds	r3, r2, r3
 230 0120 93E80300 		ldmia	r3, {r0, r1}
 231 0124 03AB     		add	r3, sp, #12
 232 0126 83E80300 		stmia	r3, {r0, r1}
 144:../src/drv/drv_rx.c ****         struct PWM_State   *state  = &Inputs[i];
 233              		.loc 1 144 0
 234 012a 9DF81F20 		ldrb	r2, [sp, #31]	@ zero_extendqisi2
 235 012e 1346     		mov	r3, r2
 236 0130 4FEA4303 		lsl	r3, r3, #1
 237 0134 9B18     		adds	r3, r3, r2
 238 0136 4FEA4303 		lsl	r3, r3, #1
 239 013a 1A46     		mov	r2, r3
 240 013c 40F20003 		movw	r3, #:lower16:Inputs
 241 0140 C0F20003 		movt	r3, #:upper16:Inputs
 242 0144 D318     		adds	r3, r2, r3
 243 0146 0593     		str	r3, [sp, #20]
 145:../src/drv/drv_rx.c **** 
 146:../src/drv/drv_rx.c ****         if (tim == channel.tim && (TIM_GetITStatus(channel.tim, channel.cc) == SET))
 244              		.loc 1 146 0
 245 0148 039A     		ldr	r2, [sp, #12]
 246 014a 019B     		ldr	r3, [sp, #4]
 247 014c 9A42     		cmp	r2, r3
 248 014e 40F0B680 		bne	.L8
 249              		.loc 1 146 0 is_stmt 0 discriminator 1
 250 0152 039A     		ldr	r2, [sp, #12]
 251 0154 BDF81230 		ldrh	r3, [sp, #18]
 252 0158 1046     		mov	r0, r2
 253 015a 1946     		mov	r1, r3
 254 015c FFF7FEFF 		bl	TIM_GetITStatus
 255 0160 0346     		mov	r3, r0
 256 0162 012B     		cmp	r3, #1
 257 0164 40F0AB80 		bne	.L8
 147:../src/drv/drv_rx.c ****         {
 148:../src/drv/drv_rx.c ****             TIM_ClearITPendingBit(channel.tim, channel.cc);
 258              		.loc 1 148 0 is_stmt 1
 259 0168 039A     		ldr	r2, [sp, #12]
 260 016a BDF81230 		ldrh	r3, [sp, #18]
 261 016e 1046     		mov	r0, r2
 262 0170 1946     		mov	r1, r3
 263 0172 FFF7FEFF 		bl	TIM_ClearITPendingBit
 149:../src/drv/drv_rx.c ****             if (i == 0)
 264              		.loc 1 149 0
 265 0176 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 266 017a 002B     		cmp	r3, #0
 267 017c 06D1     		bne	.L9
 150:../src/drv/drv_rx.c ****                 rcActive = true;
 268              		.loc 1 150 0
 269 017e 40F20003 		movw	r3, #:lower16:rcActive
 270 0182 C0F20003 		movt	r3, #:upper16:rcActive
 271 0186 4FF00102 		mov	r2, #1
 272 018a 1A70     		strb	r2, [r3, #0]
 273              	.L9:
 151:../src/drv/drv_rx.c **** 
 152:../src/drv/drv_rx.c ****             switch (channel.channel)
 274              		.loc 1 152 0
 275 018c BDF81030 		ldrh	r3, [sp, #16]
 276 0190 0C2B     		cmp	r3, #12
 277 0192 3DD8     		bhi	.L10
 278 0194 01A2     		adr	r2, .L15
 279 0196 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 280 019a 00BF     		.align	2
 281              	.L15:
 282 019c D1010000 		.word	.L11+1
 283 01a0 11020000 		.word	.L10+1
 284 01a4 11020000 		.word	.L10+1
 285 01a8 11020000 		.word	.L10+1
 286 01ac E1010000 		.word	.L12+1
 287 01b0 11020000 		.word	.L10+1
 288 01b4 11020000 		.word	.L10+1
 289 01b8 11020000 		.word	.L10+1
 290 01bc F1010000 		.word	.L13+1
 291 01c0 11020000 		.word	.L10+1
 292 01c4 11020000 		.word	.L10+1
 293 01c8 11020000 		.word	.L10+1
 294 01cc 01020000 		.word	.L14+1
 295              	.L11:
 153:../src/drv/drv_rx.c ****             {
 154:../src/drv/drv_rx.c ****                 case TIM_Channel_1:
 155:../src/drv/drv_rx.c ****                     inputCaptureValue = (uint16_t)TIM_GetCapture1(channel.tim);
 296              		.loc 1 155 0
 297 01d0 039B     		ldr	r3, [sp, #12]
 298 01d2 1846     		mov	r0, r3
 299 01d4 FFF7FEFF 		bl	TIM_GetCapture1
 300 01d8 0346     		mov	r3, r0
 301 01da 9BB2     		uxth	r3, r3
 302 01dc 0693     		str	r3, [sp, #24]
 156:../src/drv/drv_rx.c ****                     break;
 303              		.loc 1 156 0
 304 01de 17E0     		b	.L10
 305              	.L12:
 157:../src/drv/drv_rx.c ****                 case TIM_Channel_2:
 158:../src/drv/drv_rx.c ****                     inputCaptureValue = (uint16_t)TIM_GetCapture2(channel.tim);
 306              		.loc 1 158 0
 307 01e0 039B     		ldr	r3, [sp, #12]
 308 01e2 1846     		mov	r0, r3
 309 01e4 FFF7FEFF 		bl	TIM_GetCapture2
 310 01e8 0346     		mov	r3, r0
 311 01ea 9BB2     		uxth	r3, r3
 312 01ec 0693     		str	r3, [sp, #24]
 159:../src/drv/drv_rx.c ****                     break;
 313              		.loc 1 159 0
 314 01ee 0FE0     		b	.L10
 315              	.L13:
 160:../src/drv/drv_rx.c ****                 case TIM_Channel_3:
 161:../src/drv/drv_rx.c ****                     inputCaptureValue = (uint16_t)TIM_GetCapture3(channel.tim);
 316              		.loc 1 161 0
 317 01f0 039B     		ldr	r3, [sp, #12]
 318 01f2 1846     		mov	r0, r3
 319 01f4 FFF7FEFF 		bl	TIM_GetCapture3
 320 01f8 0346     		mov	r3, r0
 321 01fa 9BB2     		uxth	r3, r3
 322 01fc 0693     		str	r3, [sp, #24]
 162:../src/drv/drv_rx.c ****                     break;
 323              		.loc 1 162 0
 324 01fe 07E0     		b	.L10
 325              	.L14:
 163:../src/drv/drv_rx.c ****                 case TIM_Channel_4:
 164:../src/drv/drv_rx.c ****                     inputCaptureValue = (uint16_t)TIM_GetCapture4(channel.tim);
 326              		.loc 1 164 0
 327 0200 039B     		ldr	r3, [sp, #12]
 328 0202 1846     		mov	r0, r3
 329 0204 FFF7FEFF 		bl	TIM_GetCapture4
 330 0208 0346     		mov	r3, r0
 331 020a 9BB2     		uxth	r3, r3
 332 020c 0693     		str	r3, [sp, #24]
 165:../src/drv/drv_rx.c ****                     break;
 333              		.loc 1 165 0
 334 020e 00BF     		nop
 335              	.L10:
 166:../src/drv/drv_rx.c ****             }
 167:../src/drv/drv_rx.c **** 
 168:../src/drv/drv_rx.c ****             if (state->state == 0)
 336              		.loc 1 168 0
 337 0210 059B     		ldr	r3, [sp, #20]
 338 0212 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 339 0214 002B     		cmp	r3, #0
 340 0216 1ED1     		bne	.L16
 169:../src/drv/drv_rx.c ****             {
 170:../src/drv/drv_rx.c ****                 state->riseTime = inputCaptureValue;
 341              		.loc 1 170 0
 342 0218 069B     		ldr	r3, [sp, #24]
 343 021a 9AB2     		uxth	r2, r3
 344 021c 059B     		ldr	r3, [sp, #20]
 345 021e 5A80     		strh	r2, [r3, #2]	@ movhi
 171:../src/drv/drv_rx.c **** 
 172:../src/drv/drv_rx.c ****                 // switch states
 173:../src/drv/drv_rx.c ****                 state->state = 1;
 346              		.loc 1 173 0
 347 0220 059B     		ldr	r3, [sp, #20]
 348 0222 4FF00102 		mov	r2, #1
 349 0226 1A70     		strb	r2, [r3, #0]
 174:../src/drv/drv_rx.c **** 
 175:../src/drv/drv_rx.c ****                   TIM_ICInitStructure.TIM_Channel     = channel.channel;
 350              		.loc 1 175 0
 351 0228 BDF81020 		ldrh	r2, [sp, #16]
 352 022c 40F20003 		movw	r3, #:lower16:TIM_ICInitStructure
 353 0230 C0F20003 		movt	r3, #:upper16:TIM_ICInitStructure
 354 0234 1A80     		strh	r2, [r3, #0]	@ movhi
 176:../src/drv/drv_rx.c ****                   TIM_ICInitStructure.TIM_ICPolarity  = TIM_ICPolarity_Falling;
 355              		.loc 1 176 0
 356 0236 40F20003 		movw	r3, #:lower16:TIM_ICInitStructure
 357 023a C0F20003 		movt	r3, #:upper16:TIM_ICInitStructure
 358 023e 4FF00202 		mov	r2, #2
 359 0242 5A80     		strh	r2, [r3, #2]	@ movhi
 177:../src/drv/drv_rx.c ****                 //TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
 178:../src/drv/drv_rx.c ****                 //TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;
 179:../src/drv/drv_rx.c ****                 //TIM_ICInitStructure.TIM_ICFilter    = 0x00;
 180:../src/drv/drv_rx.c **** 
 181:../src/drv/drv_rx.c ****                 TIM_ICInit(channel.tim, &TIM_ICInitStructure);
 360              		.loc 1 181 0
 361 0244 039B     		ldr	r3, [sp, #12]
 362 0246 1846     		mov	r0, r3
 363 0248 40F20001 		movw	r1, #:lower16:TIM_ICInitStructure
 364 024c C0F20001 		movt	r1, #:upper16:TIM_ICInitStructure
 365 0250 FFF7FEFF 		bl	TIM_ICInit
 366 0254 33E0     		b	.L8
 367              	.L16:
 182:../src/drv/drv_rx.c ****             }
 183:../src/drv/drv_rx.c ****             else
 184:../src/drv/drv_rx.c ****             {
 185:../src/drv/drv_rx.c ****                 // inputCaptureValue has falling edge timer value
 186:../src/drv/drv_rx.c **** 
 187:../src/drv/drv_rx.c ****                 // compute capture
 188:../src/drv/drv_rx.c ****                 if (inputCaptureValue > state->riseTime)
 368              		.loc 1 188 0
 369 0256 059B     		ldr	r3, [sp, #20]
 370 0258 5B88     		ldrh	r3, [r3, #2]
 371 025a 1A46     		mov	r2, r3
 372 025c 069B     		ldr	r3, [sp, #24]
 373 025e 9A42     		cmp	r2, r3
 374 0260 08D2     		bcs	.L17
 189:../src/drv/drv_rx.c ****                     state->pulseWidth = (inputCaptureValue - state->riseTime);
 375              		.loc 1 189 0
 376 0262 069B     		ldr	r3, [sp, #24]
 377 0264 9AB2     		uxth	r2, r3
 378 0266 059B     		ldr	r3, [sp, #20]
 379 0268 5B88     		ldrh	r3, [r3, #2]
 380 026a D31A     		subs	r3, r2, r3
 381 026c 9AB2     		uxth	r2, r3
 382 026e 059B     		ldr	r3, [sp, #20]
 383 0270 9A80     		strh	r2, [r3, #4]	@ movhi
 384 0272 0AE0     		b	.L18
 385              	.L17:
 190:../src/drv/drv_rx.c ****                 else
 191:../src/drv/drv_rx.c ****                     state->pulseWidth = ((0xFFFF - state->riseTime) + inputCaptureValue);
 386              		.loc 1 191 0
 387 0274 069B     		ldr	r3, [sp, #24]
 388 0276 9AB2     		uxth	r2, r3
 389 0278 059B     		ldr	r3, [sp, #20]
 390 027a 5B88     		ldrh	r3, [r3, #2]
 391 027c D31A     		subs	r3, r2, r3
 392 027e 9BB2     		uxth	r3, r3
 393 0280 03F1FF33 		add	r3, r3, #-1
 394 0284 9AB2     		uxth	r2, r3
 395 0286 059B     		ldr	r3, [sp, #20]
 396 0288 9A80     		strh	r2, [r3, #4]	@ movhi
 397              	.L18:
 192:../src/drv/drv_rx.c **** 
 193:../src/drv/drv_rx.c ****                 // switch state
 194:../src/drv/drv_rx.c ****                 state->state = 0;
 398              		.loc 1 194 0
 399 028a 059B     		ldr	r3, [sp, #20]
 400 028c 4FF00002 		mov	r2, #0
 401 0290 1A70     		strb	r2, [r3, #0]
 195:../src/drv/drv_rx.c **** 
 196:../src/drv/drv_rx.c ****                   TIM_ICInitStructure.TIM_Channel     = channel.channel;
 402              		.loc 1 196 0
 403 0292 BDF81020 		ldrh	r2, [sp, #16]
 404 0296 40F20003 		movw	r3, #:lower16:TIM_ICInitStructure
 405 029a C0F20003 		movt	r3, #:upper16:TIM_ICInitStructure
 406 029e 1A80     		strh	r2, [r3, #0]	@ movhi
 197:../src/drv/drv_rx.c ****                   TIM_ICInitStructure.TIM_ICPolarity  = TIM_ICPolarity_Rising;
 407              		.loc 1 197 0
 408 02a0 40F20003 		movw	r3, #:lower16:TIM_ICInitStructure
 409 02a4 C0F20003 		movt	r3, #:upper16:TIM_ICInitStructure
 410 02a8 4FF00002 		mov	r2, #0
 411 02ac 5A80     		strh	r2, [r3, #2]	@ movhi
 198:../src/drv/drv_rx.c ****                 //TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
 199:../src/drv/drv_rx.c ****                 //TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;
 200:../src/drv/drv_rx.c ****                 //TIM_ICInitStructure.TIM_ICFilter    = 0x00;
 201:../src/drv/drv_rx.c **** 
 202:../src/drv/drv_rx.c ****                 TIM_ICInit(channel.tim, &TIM_ICInitStructure);
 412              		.loc 1 202 0
 413 02ae 039B     		ldr	r3, [sp, #12]
 414 02b0 1846     		mov	r0, r3
 415 02b2 40F20001 		movw	r1, #:lower16:TIM_ICInitStructure
 416 02b6 C0F20001 		movt	r1, #:upper16:TIM_ICInitStructure
 417 02ba FFF7FEFF 		bl	TIM_ICInit
 418              	.L8:
 419              	.LBE2:
 142:../src/drv/drv_rx.c ****     for (i = 0; i < 8; i++) {
 420              		.loc 1 142 0
 421 02be 9DF81F30 		ldrb	r3, [sp, #31]
 422 02c2 03F10103 		add	r3, r3, #1
 423 02c6 8DF81F30 		strb	r3, [sp, #31]
 424              	.L7:
 142:../src/drv/drv_rx.c ****     for (i = 0; i < 8; i++) {
 425              		.loc 1 142 0 is_stmt 0 discriminator 1
 426 02ca 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 427 02ce 072B     		cmp	r3, #7
 428 02d0 7FF61DAF 		bls	.L19
 203:../src/drv/drv_rx.c ****             }
 204:../src/drv/drv_rx.c ****         }
 205:../src/drv/drv_rx.c ****     }
 206:../src/drv/drv_rx.c **** }
 429              		.loc 1 206 0 is_stmt 1
 430 02d4 09B0     		add	sp, sp, #36
 431 02d6 00BD     		pop	{pc}
 432              		.cfi_endproc
 433              	.LFE112:
 435              		.align	2
 436              		.global	TIM1_CC_IRQHandler
 437              		.thumb
 438              		.thumb_func
 440              	TIM1_CC_IRQHandler:
 441              	.LFB113:
 207:../src/drv/drv_rx.c **** 
 208:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
 209:../src/drv/drv_rx.c **** // PWM Receiver Interrupt Handlers
 210:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
 211:../src/drv/drv_rx.c **** 
 212:../src/drv/drv_rx.c **** void TIM1_CC_IRQHandler(void)
 213:../src/drv/drv_rx.c **** {
 442              		.loc 1 213 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446 02d8 08B5     		push	{r3, lr}
 447              	.LCFI4:
 448              		.cfi_def_cfa_offset 8
 449              		.cfi_offset 14, -4
 450              		.cfi_offset 3, -8
 214:../src/drv/drv_rx.c ****     parallelPWM_IRQHandler(TIM1);
 451              		.loc 1 214 0
 452 02da 4FF43050 		mov	r0, #11264
 453 02de C4F20100 		movt	r0, 16385
 454 02e2 FFF709FF 		bl	parallelPWM_IRQHandler
 215:../src/drv/drv_rx.c **** }
 455              		.loc 1 215 0
 456 02e6 08BD     		pop	{r3, pc}
 457              		.cfi_endproc
 458              	.LFE113:
 460              		.align	2
 461              		.global	TIM2_IRQHandler
 462              		.thumb
 463              		.thumb_func
 465              	TIM2_IRQHandler:
 466              	.LFB114:
 216:../src/drv/drv_rx.c **** 
 217:../src/drv/drv_rx.c **** void TIM2_IRQHandler(void)
 218:../src/drv/drv_rx.c **** {
 467              		.loc 1 218 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471 02e8 08B5     		push	{r3, lr}
 472              	.LCFI5:
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 14, -4
 475              		.cfi_offset 3, -8
 219:../src/drv/drv_rx.c ****     parallelPWM_IRQHandler(TIM2);
 476              		.loc 1 219 0
 477 02ea 4FF08040 		mov	r0, #1073741824
 478 02ee FFF703FF 		bl	parallelPWM_IRQHandler
 220:../src/drv/drv_rx.c **** }
 479              		.loc 1 220 0
 480 02f2 08BD     		pop	{r3, pc}
 481              		.cfi_endproc
 482              	.LFE114:
 484              		.align	2
 485              		.global	TIM3_IRQHandler
 486              		.thumb
 487              		.thumb_func
 489              	TIM3_IRQHandler:
 490              	.LFB115:
 221:../src/drv/drv_rx.c **** void TIM3_IRQHandler(void)
 222:../src/drv/drv_rx.c **** {
 491              		.loc 1 222 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495 02f4 08B5     		push	{r3, lr}
 496              	.LCFI6:
 497              		.cfi_def_cfa_offset 8
 498              		.cfi_offset 14, -4
 499              		.cfi_offset 3, -8
 223:../src/drv/drv_rx.c ****     parallelPWM_IRQHandler(TIM3);
 500              		.loc 1 223 0
 501 02f6 4FF48060 		mov	r0, #1024
 502 02fa C4F20000 		movt	r0, 16384
 503 02fe FFF7FBFE 		bl	parallelPWM_IRQHandler
 224:../src/drv/drv_rx.c **** }
 504              		.loc 1 224 0
 505 0302 08BD     		pop	{r3, pc}
 506              		.cfi_endproc
 507              	.LFE115:
 509              		.align	2
 510              		.global	TIM1_UP_TIM16_IRQHandler
 511              		.thumb
 512              		.thumb_func
 514              	TIM1_UP_TIM16_IRQHandler:
 515              	.LFB116:
 225:../src/drv/drv_rx.c **** void TIM1_UP_TIM16_IRQHandler(void)
 226:../src/drv/drv_rx.c **** {
 516              		.loc 1 226 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520 0304 08B5     		push	{r3, lr}
 521              	.LCFI7:
 522              		.cfi_def_cfa_offset 8
 523              		.cfi_offset 14, -4
 524              		.cfi_offset 3, -8
 227:../src/drv/drv_rx.c ****     if (eepromConfig.receiverType == SERIAL_PWM)
 525              		.loc 1 227 0
 526 0306 40F20003 		movw	r3, #:lower16:eepromConfig
 527 030a C0F20003 		movt	r3, #:upper16:eepromConfig
 528 030e 93F86C30 		ldrb	r3, [r3, #108]	@ zero_extendqisi2
 529 0312 022B     		cmp	r3, #2
 530 0314 06D1     		bne	.L24
 228:../src/drv/drv_rx.c ****         serialPWM_IRQHandler(TIM16);
 531              		.loc 1 228 0
 532 0316 4FF48840 		mov	r0, #17408
 533 031a C4F20100 		movt	r0, 16385
 534 031e FFF76FFE 		bl	serialPWM_IRQHandler
 535 0322 05E0     		b	.L23
 536              	.L24:
 229:../src/drv/drv_rx.c ****     else
 230:../src/drv/drv_rx.c ****         parallelPWM_IRQHandler(TIM16);
 537              		.loc 1 230 0
 538 0324 4FF48840 		mov	r0, #17408
 539 0328 C4F20100 		movt	r0, 16385
 540 032c FFF7E4FE 		bl	parallelPWM_IRQHandler
 541              	.L23:
 231:../src/drv/drv_rx.c **** }
 542              		.loc 1 231 0
 543 0330 08BD     		pop	{r3, pc}
 544              		.cfi_endproc
 545              	.LFE116:
 547 0332 00BF     		.align	2
 548              		.global	USART3_IRQHandler
 549              		.thumb
 550              		.thumb_func
 552              	USART3_IRQHandler:
 553              	.LFB117:
 232:../src/drv/drv_rx.c **** 
 233:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
 234:../src/drv/drv_rx.c **** //  Spektrum Satellite Receiver UART Interrupt Handler
 235:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
 236:../src/drv/drv_rx.c **** 
 237:../src/drv/drv_rx.c **** void USART3_IRQHandler(void)
 238:../src/drv/drv_rx.c **** {
 554              		.loc 1 238 0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 16
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558 0334 10B5     		push	{r4, lr}
 559              	.LCFI8:
 560              		.cfi_def_cfa_offset 8
 561              		.cfi_offset 14, -4
 562              		.cfi_offset 4, -8
 563 0336 84B0     		sub	sp, sp, #16
 564              	.LCFI9:
 565              		.cfi_def_cfa_offset 24
 239:../src/drv/drv_rx.c ****     uint8_t  b;
 240:../src/drv/drv_rx.c ****     uint8_t  spektrumChannel;
 241:../src/drv/drv_rx.c ****     uint32_t spektrumTime;
 242:../src/drv/drv_rx.c **** 
 243:../src/drv/drv_rx.c ****     if (USART_GetITStatus(USART3, USART_IT_RXNE) == SET)
 566              		.loc 1 243 0
 567 0338 4FF49040 		mov	r0, #18432
 568 033c C4F20000 		movt	r0, 16384
 569 0340 40F20511 		movw	r1, #261
 570 0344 C0F20501 		movt	r1, 5
 571 0348 FFF7FEFF 		bl	USART_GetITStatus
 572 034c 0346     		mov	r3, r0
 573 034e 012B     		cmp	r3, #1
 574 0350 40F0BA80 		bne	.L26
 244:../src/drv/drv_rx.c ****     {
 245:../src/drv/drv_rx.c ****         rcActive             = true;
 575              		.loc 1 245 0
 576 0354 40F20003 		movw	r3, #:lower16:rcActive
 577 0358 C0F20003 		movt	r3, #:upper16:rcActive
 578 035c 4FF00102 		mov	r2, #1
 579 0360 1A70     		strb	r2, [r3, #0]
 246:../src/drv/drv_rx.c ****         spektrumTime         = micros();
 580              		.loc 1 246 0
 581 0362 FFF7FEFF 		bl	micros
 582 0366 0290     		str	r0, [sp, #8]
 247:../src/drv/drv_rx.c ****         spektrumTimeInterval = spektrumTime - spektrumTimeLast;
 583              		.loc 1 247 0
 584 0368 40F20003 		movw	r3, #:lower16:spektrumTimeLast
 585 036c C0F20003 		movt	r3, #:upper16:spektrumTimeLast
 586 0370 1B68     		ldr	r3, [r3, #0]
 587 0372 029A     		ldr	r2, [sp, #8]
 588 0374 D21A     		subs	r2, r2, r3
 589 0376 40F20003 		movw	r3, #:lower16:spektrumTimeInterval
 590 037a C0F20003 		movt	r3, #:upper16:spektrumTimeInterval
 591 037e 1A60     		str	r2, [r3, #0]
 248:../src/drv/drv_rx.c ****         spektrumTimeLast     = spektrumTime;
 592              		.loc 1 248 0
 593 0380 40F20003 		movw	r3, #:lower16:spektrumTimeLast
 594 0384 C0F20003 		movt	r3, #:upper16:spektrumTimeLast
 595 0388 029A     		ldr	r2, [sp, #8]
 596 038a 1A60     		str	r2, [r3, #0]
 249:../src/drv/drv_rx.c **** 
 250:../src/drv/drv_rx.c ****         if (spektrumTimeInterval > 5000)
 597              		.loc 1 250 0
 598 038c 40F20003 		movw	r3, #:lower16:spektrumTimeInterval
 599 0390 C0F20003 		movt	r3, #:upper16:spektrumTimeInterval
 600 0394 1A68     		ldr	r2, [r3, #0]
 601 0396 41F28833 		movw	r3, #5000
 602 039a 9A42     		cmp	r2, r3
 603 039c 06D9     		bls	.L28
 251:../src/drv/drv_rx.c ****             spektrumFramePosition = 0;
 604              		.loc 1 251 0
 605 039e 40F20003 		movw	r3, #:lower16:spektrumFramePosition
 606 03a2 C0F20003 		movt	r3, #:upper16:spektrumFramePosition
 607 03a6 4FF00002 		mov	r2, #0
 608 03aa 1A70     		strb	r2, [r3, #0]
 609              	.L28:
 252:../src/drv/drv_rx.c **** 
 253:../src/drv/drv_rx.c ****         spektrumFrame[spektrumFramePosition] = USART_ReceiveData(USART3);
 610              		.loc 1 253 0
 611 03ac 40F20003 		movw	r3, #:lower16:spektrumFramePosition
 612 03b0 C0F20003 		movt	r3, #:upper16:spektrumFramePosition
 613 03b4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 614 03b6 1C46     		mov	r4, r3
 615 03b8 4FF49040 		mov	r0, #18432
 616 03bc C4F20000 		movt	r0, 16384
 617 03c0 FFF7FEFF 		bl	USART_ReceiveData
 618 03c4 0346     		mov	r3, r0
 619 03c6 DAB2     		uxtb	r2, r3
 620 03c8 40F20003 		movw	r3, #:lower16:spektrumFrame
 621 03cc C0F20003 		movt	r3, #:upper16:spektrumFrame
 622 03d0 1A55     		strb	r2, [r3, r4]
 254:../src/drv/drv_rx.c **** 
 255:../src/drv/drv_rx.c ****         if (spektrumFramePosition == SPEKTRUM_FRAME_SIZE - 1)
 623              		.loc 1 255 0
 624 03d2 40F20003 		movw	r3, #:lower16:spektrumFramePosition
 625 03d6 C0F20003 		movt	r3, #:upper16:spektrumFramePosition
 626 03da 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 627 03dc 0F2B     		cmp	r3, #15
 628 03de 07D1     		bne	.L29
 256:../src/drv/drv_rx.c ****         {
 257:../src/drv/drv_rx.c ****             spektrumFrameComplete = true;
 629              		.loc 1 257 0
 630 03e0 40F20003 		movw	r3, #:lower16:spektrumFrameComplete
 631 03e4 C0F20003 		movt	r3, #:upper16:spektrumFrameComplete
 632 03e8 4FF00102 		mov	r2, #1
 633 03ec 1A70     		strb	r2, [r3, #0]
 634 03ee 0CE0     		b	.L30
 635              	.L29:
 258:../src/drv/drv_rx.c ****             //failsafeCnt = 0;
 259:../src/drv/drv_rx.c ****         }
 260:../src/drv/drv_rx.c ****         else
 261:../src/drv/drv_rx.c ****         {
 262:../src/drv/drv_rx.c ****             spektrumFramePosition++;
 636              		.loc 1 262 0
 637 03f0 40F20003 		movw	r3, #:lower16:spektrumFramePosition
 638 03f4 C0F20003 		movt	r3, #:upper16:spektrumFramePosition
 639 03f8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 640 03fa 03F10103 		add	r3, r3, #1
 641 03fe DAB2     		uxtb	r2, r3
 642 0400 40F20003 		movw	r3, #:lower16:spektrumFramePosition
 643 0404 C0F20003 		movt	r3, #:upper16:spektrumFramePosition
 644 0408 1A70     		strb	r2, [r3, #0]
 645              	.L30:
 263:../src/drv/drv_rx.c ****         }
 264:../src/drv/drv_rx.c **** 
 265:../src/drv/drv_rx.c ****         if (spektrumFrameComplete)
 646              		.loc 1 265 0
 647 040a 40F20003 		movw	r3, #:lower16:spektrumFrameComplete
 648 040e C0F20003 		movt	r3, #:upper16:spektrumFrameComplete
 649 0412 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 650 0414 002B     		cmp	r3, #0
 651 0416 57D0     		beq	.L26
 266:../src/drv/drv_rx.c **** 		{
 267:../src/drv/drv_rx.c **** 		    for (b = 3; b < SPEKTRUM_FRAME_SIZE; b += 2)
 652              		.loc 1 267 0
 653 0418 4FF00303 		mov	r3, #3
 654 041c 8DF80F30 		strb	r3, [sp, #15]
 655 0420 47E0     		b	.L31
 656              	.L33:
 268:../src/drv/drv_rx.c **** 		    {
 269:../src/drv/drv_rx.c **** 		        spektrumChannel = 0x0F & (spektrumFrame[b - 1] >> spektrumChannelShift);
 657              		.loc 1 269 0
 658 0422 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 659 0426 03F1FF32 		add	r2, r3, #-1
 660 042a 40F20003 		movw	r3, #:lower16:spektrumFrame
 661 042e C0F20003 		movt	r3, #:upper16:spektrumFrame
 662 0432 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 663 0434 1A46     		mov	r2, r3
 664 0436 40F20003 		movw	r3, #:lower16:spektrumChannelShift
 665 043a C0F20003 		movt	r3, #:upper16:spektrumChannelShift
 666 043e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 667 0440 42FA03F3 		asr	r3, r2, r3
 668 0444 DBB2     		uxtb	r3, r3
 669 0446 03F00F03 		and	r3, r3, #15
 670 044a 8DF80730 		strb	r3, [sp, #7]
 270:../src/drv/drv_rx.c **** 		        if (spektrumChannel < eepromConfig.spektrumChannels)
 671              		.loc 1 270 0
 672 044e 40F20003 		movw	r3, #:lower16:eepromConfig
 673 0452 C0F20003 		movt	r3, #:upper16:eepromConfig
 674 0456 93F86D30 		ldrb	r3, [r3, #109]	@ zero_extendqisi2
 675 045a 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 676 045e 9A42     		cmp	r2, r3
 677 0460 21D2     		bcs	.L32
 271:../src/drv/drv_rx.c **** 		            spektrumChannelData[spektrumChannel] = ((uint32_t)(spektrumFrame[b - 1] & spektrumCha
 678              		.loc 1 271 0
 679 0462 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 680 0466 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 681 046a 03F1FF31 		add	r1, r3, #-1
 682 046e 40F20003 		movw	r3, #:lower16:spektrumFrame
 683 0472 C0F20003 		movt	r3, #:upper16:spektrumFrame
 684 0476 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 685 0478 40F20003 		movw	r3, #:lower16:spektrumChannelMask
 686 047c C0F20003 		movt	r3, #:upper16:spektrumChannelMask
 687 0480 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 688 0482 0B40     		ands	r3, r3, r1
 689 0484 DBB2     		uxtb	r3, r3
 690 0486 4FEA0321 		lsl	r1, r3, #8
 691 048a 9DF80F00 		ldrb	r0, [sp, #15]	@ zero_extendqisi2
 692 048e 40F20003 		movw	r3, #:lower16:spektrumFrame
 693 0492 C0F20003 		movt	r3, #:upper16:spektrumFrame
 694 0496 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 695 0498 C918     		adds	r1, r1, r3
 696 049a 40F20003 		movw	r3, #:lower16:spektrumChannelData
 697 049e C0F20003 		movt	r3, #:upper16:spektrumChannelData
 698 04a2 43F82210 		str	r1, [r3, r2, lsl #2]
 699              	.L32:
 267:../src/drv/drv_rx.c **** 		    for (b = 3; b < SPEKTRUM_FRAME_SIZE; b += 2)
 700              		.loc 1 267 0
 701 04a6 9DF80F30 		ldrb	r3, [sp, #15]
 702 04aa 03F10203 		add	r3, r3, #2
 703 04ae 8DF80F30 		strb	r3, [sp, #15]
 704              	.L31:
 267:../src/drv/drv_rx.c **** 		    for (b = 3; b < SPEKTRUM_FRAME_SIZE; b += 2)
 705              		.loc 1 267 0 is_stmt 0 discriminator 1
 706 04b2 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 707 04b6 0F2B     		cmp	r3, #15
 708 04b8 B3D9     		bls	.L33
 272:../src/drv/drv_rx.c **** 		    }
 273:../src/drv/drv_rx.c **** 
 274:../src/drv/drv_rx.c **** 		    spektrumFrameComplete = false;
 709              		.loc 1 274 0 is_stmt 1
 710 04ba 40F20003 		movw	r3, #:lower16:spektrumFrameComplete
 711 04be C0F20003 		movt	r3, #:upper16:spektrumFrameComplete
 712 04c2 4FF00002 		mov	r2, #0
 713 04c6 1A70     		strb	r2, [r3, #0]
 714              	.L26:
 275:../src/drv/drv_rx.c **** 		}
 276:../src/drv/drv_rx.c ****     }
 277:../src/drv/drv_rx.c **** }
 715              		.loc 1 277 0
 716 04c8 04B0     		add	sp, sp, #16
 717 04ca 10BD     		pop	{r4, pc}
 718              		.cfi_endproc
 719              	.LFE117:
 721              		.align	2
 722              		.global	rxInit
 723              		.thumb
 724              		.thumb_func
 726              	rxInit:
 727              	.LFB118:
 278:../src/drv/drv_rx.c **** 
 279:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
 280:../src/drv/drv_rx.c **** // Receiver Initialization
 281:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
 282:../src/drv/drv_rx.c **** 
 283:../src/drv/drv_rx.c **** void rxInit(void)
 284:../src/drv/drv_rx.c **** {
 728              		.loc 1 284 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 48
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732 04cc 00B5     		push	{lr}
 733              	.LCFI10:
 734              		.cfi_def_cfa_offset 4
 735              		.cfi_offset 14, -4
 736 04ce 8DB0     		sub	sp, sp, #52
 737              	.LCFI11:
 738              		.cfi_def_cfa_offset 56
 285:../src/drv/drv_rx.c ****     GPIO_InitTypeDef         GPIO_InitStructure;
 286:../src/drv/drv_rx.c ****     TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
 287:../src/drv/drv_rx.c ****     NVIC_InitTypeDef         NVIC_InitStructure;
 288:../src/drv/drv_rx.c ****     USART_InitTypeDef        USART_InitStructure;
 289:../src/drv/drv_rx.c **** 
 290:../src/drv/drv_rx.c ****     TIM_TimeBaseStructInit(&TIM_TimeBaseStructure);
 739              		.loc 1 290 0
 740 04d0 07AB     		add	r3, sp, #28
 741 04d2 1846     		mov	r0, r3
 742 04d4 FFF7FEFF 		bl	TIM_TimeBaseStructInit
 291:../src/drv/drv_rx.c ****     TIM_ICStructInit(&TIM_ICInitStructure);
 743              		.loc 1 291 0
 744 04d8 40F20000 		movw	r0, #:lower16:TIM_ICInitStructure
 745 04dc C0F20000 		movt	r0, #:upper16:TIM_ICInitStructure
 746 04e0 FFF7FEFF 		bl	TIM_ICStructInit
 292:../src/drv/drv_rx.c **** 
 293:../src/drv/drv_rx.c ****     ///////////////////////////////////
 294:../src/drv/drv_rx.c **** 
 295:../src/drv/drv_rx.c ****     if (eepromConfig.receiverType == SERIAL_PWM)
 747              		.loc 1 295 0
 748 04e4 40F20003 		movw	r3, #:lower16:eepromConfig
 749 04e8 C0F20003 		movt	r3, #:upper16:eepromConfig
 750 04ec 93F86C30 		ldrb	r3, [r3, #108]	@ zero_extendqisi2
 751 04f0 022B     		cmp	r3, #2
 752 04f2 40F0C480 		bne	.L35
 296:../src/drv/drv_rx.c ****     {
 297:../src/drv/drv_rx.c ****         // Serial PWM Input
 298:../src/drv/drv_rx.c ****     	// TIM16_CH1 PB8
 299:../src/drv/drv_rx.c **** 
 300:../src/drv/drv_rx.c ****         RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB, ENABLE);
 753              		.loc 1 300 0
 754 04f6 4FF48020 		mov	r0, #262144
 755 04fa 4FF00101 		mov	r1, #1
 756 04fe FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 301:../src/drv/drv_rx.c **** 
 302:../src/drv/drv_rx.c **** 		RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM16,  ENABLE);
 757              		.loc 1 302 0
 758 0502 4FF40030 		mov	r0, #131072
 759 0506 4FF00101 		mov	r1, #1
 760 050a FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 303:../src/drv/drv_rx.c **** 
 304:../src/drv/drv_rx.c **** 		// preset channels to center
 305:../src/drv/drv_rx.c **** 		for (i = 0; i < 8; i++)
 761              		.loc 1 305 0
 762 050e 40F20003 		movw	r3, #:lower16:i
 763 0512 C0F20003 		movt	r3, #:upper16:i
 764 0516 4FF00002 		mov	r2, #0
 765 051a 1A70     		strb	r2, [r3, #0]
 766 051c 20E0     		b	.L36
 767              	.L37:
 306:../src/drv/drv_rx.c **** 		    Inputs[i].pulseWidth = RX_PULSE_1p5MS;
 768              		.loc 1 306 0 discriminator 2
 769 051e 40F20003 		movw	r3, #:lower16:i
 770 0522 C0F20003 		movt	r3, #:upper16:i
 771 0526 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 772 0528 1946     		mov	r1, r3
 773 052a 40F20002 		movw	r2, #:lower16:Inputs
 774 052e C0F20002 		movt	r2, #:upper16:Inputs
 775 0532 0B46     		mov	r3, r1
 776 0534 4FEA4303 		lsl	r3, r3, #1
 777 0538 5B18     		adds	r3, r3, r1
 778 053a 4FEA4303 		lsl	r3, r3, #1
 779 053e D318     		adds	r3, r2, r3
 780 0540 40F6B832 		movw	r2, #3000
 781 0544 9A80     		strh	r2, [r3, #4]	@ movhi
 305:../src/drv/drv_rx.c **** 		for (i = 0; i < 8; i++)
 782              		.loc 1 305 0 discriminator 2
 783 0546 40F20003 		movw	r3, #:lower16:i
 784 054a C0F20003 		movt	r3, #:upper16:i
 785 054e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 786 0550 03F10103 		add	r3, r3, #1
 787 0554 DAB2     		uxtb	r2, r3
 788 0556 40F20003 		movw	r3, #:lower16:i
 789 055a C0F20003 		movt	r3, #:upper16:i
 790 055e 1A70     		strb	r2, [r3, #0]
 791              	.L36:
 305:../src/drv/drv_rx.c **** 		for (i = 0; i < 8; i++)
 792              		.loc 1 305 0 is_stmt 0 discriminator 1
 793 0560 40F20003 		movw	r3, #:lower16:i
 794 0564 C0F20003 		movt	r3, #:upper16:i
 795 0568 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 796 056a 072B     		cmp	r3, #7
 797 056c D7D9     		bls	.L37
 307:../src/drv/drv_rx.c **** 
 308:../src/drv/drv_rx.c ****         GPIO_InitStructure.GPIO_Pin   = GPIO_Pin_8;
 798              		.loc 1 308 0 is_stmt 1
 799 056e 4FF48073 		mov	r3, #256
 800 0572 0A93     		str	r3, [sp, #40]
 309:../src/drv/drv_rx.c ****         GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AF;
 801              		.loc 1 309 0
 802 0574 4FF00203 		mov	r3, #2
 803 0578 8DF82C30 		strb	r3, [sp, #44]
 310:../src/drv/drv_rx.c ****         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 804              		.loc 1 310 0
 805 057c 4FF00303 		mov	r3, #3
 806 0580 8DF82D30 		strb	r3, [sp, #45]
 311:../src/drv/drv_rx.c ****         GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 807              		.loc 1 311 0
 808 0584 4FF00003 		mov	r3, #0
 809 0588 8DF82E30 		strb	r3, [sp, #46]
 312:../src/drv/drv_rx.c **** 	    GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_NOPULL;
 810              		.loc 1 312 0
 811 058c 4FF00003 		mov	r3, #0
 812 0590 8DF82F30 		strb	r3, [sp, #47]
 313:../src/drv/drv_rx.c **** 
 314:../src/drv/drv_rx.c ****         GPIO_Init(GPIOB, &GPIO_InitStructure);
 813              		.loc 1 314 0
 814 0594 4FF48060 		mov	r0, #1024
 815 0598 C4F60000 		movt	r0, 18432
 816 059c 0AAB     		add	r3, sp, #40
 817 059e 1946     		mov	r1, r3
 818 05a0 FFF7FEFF 		bl	GPIO_Init
 315:../src/drv/drv_rx.c **** 
 316:../src/drv/drv_rx.c ****         GPIO_PinAFConfig(GPIOB, GPIO_PinSource8, GPIO_AF_4);
 819              		.loc 1 316 0
 820 05a4 4FF48060 		mov	r0, #1024
 821 05a8 C4F60000 		movt	r0, 18432
 822 05ac 4FF00801 		mov	r1, #8
 823 05b0 4FF00402 		mov	r2, #4
 824 05b4 FFF7FEFF 		bl	GPIO_PinAFConfig
 317:../src/drv/drv_rx.c **** 
 318:../src/drv/drv_rx.c ****         NVIC_InitStructure.NVIC_IRQChannel                   = TIM1_UP_TIM16_IRQn;
 825              		.loc 1 318 0
 826 05b8 4FF01903 		mov	r3, #25
 827 05bc 8DF81830 		strb	r3, [sp, #24]
 319:../src/drv/drv_rx.c ****         NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
 828              		.loc 1 319 0
 829 05c0 4FF00203 		mov	r3, #2
 830 05c4 8DF81930 		strb	r3, [sp, #25]
 320:../src/drv/drv_rx.c ****         NVIC_InitStructure.NVIC_IRQChannelSubPriority        = 0;
 831              		.loc 1 320 0
 832 05c8 4FF00003 		mov	r3, #0
 833 05cc 8DF81A30 		strb	r3, [sp, #26]
 321:../src/drv/drv_rx.c ****         NVIC_InitStructure.NVIC_IRQChannelCmd                = ENABLE;
 834              		.loc 1 321 0
 835 05d0 4FF00103 		mov	r3, #1
 836 05d4 8DF81B30 		strb	r3, [sp, #27]
 322:../src/drv/drv_rx.c **** 
 323:../src/drv/drv_rx.c ****         NVIC_Init(&NVIC_InitStructure);
 837              		.loc 1 323 0
 838 05d8 06AB     		add	r3, sp, #24
 839 05da 1846     		mov	r0, r3
 840 05dc FFF7FEFF 		bl	NVIC_Init
 324:../src/drv/drv_rx.c **** 
 325:../src/drv/drv_rx.c ****           TIM_TimeBaseStructure.TIM_Prescaler         = 36 - 1;
 841              		.loc 1 325 0
 842 05e0 4FF02303 		mov	r3, #35
 843 05e4 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 326:../src/drv/drv_rx.c **** 		//TIM_TimeBaseStructure.TIM_CounterMode       = TIM_CounterMode_Up;
 327:../src/drv/drv_rx.c **** 		  TIM_TimeBaseStructure.TIM_Period            = 0xFFFF;
 844              		.loc 1 327 0
 845 05e8 4FF6FF73 		movw	r3, #65535
 846 05ec 0893     		str	r3, [sp, #32]
 328:../src/drv/drv_rx.c **** 		//TIM_TimeBaseStructure.TIM_ClockDivision     = TIM_CKD_DIV1;
 329:../src/drv/drv_rx.c **** 		//TIM_TimeBaseStructure.TIM_RepetitionCounter = 0x0000;
 330:../src/drv/drv_rx.c **** 
 331:../src/drv/drv_rx.c **** 		TIM_TimeBaseInit(TIM4, &TIM_TimeBaseStructure);
 847              		.loc 1 331 0
 848 05ee 4FF40060 		mov	r0, #2048
 849 05f2 C4F20000 		movt	r0, 16384
 850 05f6 07AB     		add	r3, sp, #28
 851 05f8 1946     		mov	r1, r3
 852 05fa FFF7FEFF 		bl	TIM_TimeBaseInit
 332:../src/drv/drv_rx.c **** 
 333:../src/drv/drv_rx.c ****         TIM_ICInitStructure.TIM_Channel     = TIM_Channel_1;
 853              		.loc 1 333 0
 854 05fe 40F20003 		movw	r3, #:lower16:TIM_ICInitStructure
 855 0602 C0F20003 		movt	r3, #:upper16:TIM_ICInitStructure
 856 0606 4FF00002 		mov	r2, #0
 857 060a 1A80     		strh	r2, [r3, #0]	@ movhi
 334:../src/drv/drv_rx.c ****         TIM_ICInitStructure.TIM_ICPolarity  = TIM_ICPolarity_Rising;
 858              		.loc 1 334 0
 859 060c 40F20003 		movw	r3, #:lower16:TIM_ICInitStructure
 860 0610 C0F20003 		movt	r3, #:upper16:TIM_ICInitStructure
 861 0614 4FF00002 		mov	r2, #0
 862 0618 5A80     		strh	r2, [r3, #2]	@ movhi
 335:../src/drv/drv_rx.c ****         TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
 863              		.loc 1 335 0
 864 061a 40F20003 		movw	r3, #:lower16:TIM_ICInitStructure
 865 061e C0F20003 		movt	r3, #:upper16:TIM_ICInitStructure
 866 0622 4FF00102 		mov	r2, #1
 867 0626 9A80     		strh	r2, [r3, #4]	@ movhi
 336:../src/drv/drv_rx.c ****         TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;
 868              		.loc 1 336 0
 869 0628 40F20003 		movw	r3, #:lower16:TIM_ICInitStructure
 870 062c C0F20003 		movt	r3, #:upper16:TIM_ICInitStructure
 871 0630 4FF00002 		mov	r2, #0
 872 0634 DA80     		strh	r2, [r3, #6]	@ movhi
 337:../src/drv/drv_rx.c ****         TIM_ICInitStructure.TIM_ICFilter    = 0x0;
 873              		.loc 1 337 0
 874 0636 40F20003 		movw	r3, #:lower16:TIM_ICInitStructure
 875 063a C0F20003 		movt	r3, #:upper16:TIM_ICInitStructure
 876 063e 4FF00002 		mov	r2, #0
 877 0642 1A81     		strh	r2, [r3, #8]	@ movhi
 338:../src/drv/drv_rx.c **** 
 339:../src/drv/drv_rx.c ****         TIM_ICInit(TIM16, &TIM_ICInitStructure);
 878              		.loc 1 339 0
 879 0644 4FF48840 		mov	r0, #17408
 880 0648 C4F20100 		movt	r0, 16385
 881 064c 40F20001 		movw	r1, #:lower16:TIM_ICInitStructure
 882 0650 C0F20001 		movt	r1, #:upper16:TIM_ICInitStructure
 883 0654 FFF7FEFF 		bl	TIM_ICInit
 340:../src/drv/drv_rx.c **** 
 341:../src/drv/drv_rx.c ****         TIM_ITConfig(TIM16, TIM_IT_CC1, ENABLE);
 884              		.loc 1 341 0
 885 0658 4FF48840 		mov	r0, #17408
 886 065c C4F20100 		movt	r0, 16385
 887 0660 4FF00201 		mov	r1, #2
 888 0664 4FF00102 		mov	r2, #1
 889 0668 FFF7FEFF 		bl	TIM_ITConfig
 342:../src/drv/drv_rx.c ****         TIM_Cmd(TIM16, ENABLE);
 890              		.loc 1 342 0
 891 066c 4FF48840 		mov	r0, #17408
 892 0670 C4F20100 		movt	r0, 16385
 893 0674 4FF00101 		mov	r1, #1
 894 0678 FFF7FEFF 		bl	TIM_Cmd
 895 067c 6DE2     		b	.L34
 896              	.L35:
 343:../src/drv/drv_rx.c ****     }
 344:../src/drv/drv_rx.c **** 
 345:../src/drv/drv_rx.c ****     ///////////////////////////////////
 346:../src/drv/drv_rx.c **** 
 347:../src/drv/drv_rx.c ****     else if (eepromConfig.receiverType == PARALLEL_PWM)
 897              		.loc 1 347 0
 898 067e 40F20003 		movw	r3, #:lower16:eepromConfig
 899 0682 C0F20003 		movt	r3, #:upper16:eepromConfig
 900 0686 93F86C30 		ldrb	r3, [r3, #108]	@ zero_extendqisi2
 901 068a 012B     		cmp	r3, #1
 902 068c 40F0C481 		bne	.L39
 348:../src/drv/drv_rx.c ****     {
 349:../src/drv/drv_rx.c ****         // Parallel PWM Inputs
 350:../src/drv/drv_rx.c ****     	// RX1  TIM16_CH1 PB8
 351:../src/drv/drv_rx.c ****     	// RX2  TIM1_CH1  PA8
 352:../src/drv/drv_rx.c ****     	// RX3  TIM1_CH2  PA9
 353:../src/drv/drv_rx.c ****     	// RX4  TIM2_CH2  PA1
 354:../src/drv/drv_rx.c ****     	// RX5  TIM2_CH3  PB10
 355:../src/drv/drv_rx.c ****     	// RX6  TIM2_CH4  PB11
 356:../src/drv/drv_rx.c ****     	// RX7  TIM3_CH1  PC6
 357:../src/drv/drv_rx.c ****     	// RX8  TIM3_CH2  PA4
 358:../src/drv/drv_rx.c **** 
 359:../src/drv/drv_rx.c **** 		RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
 903              		.loc 1 359 0
 904 0690 4FF40030 		mov	r0, #131072
 905 0694 4FF00101 		mov	r1, #1
 906 0698 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 360:../src/drv/drv_rx.c ****         RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB, ENABLE);
 907              		.loc 1 360 0
 908 069c 4FF48020 		mov	r0, #262144
 909 06a0 4FF00101 		mov	r1, #1
 910 06a4 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 361:../src/drv/drv_rx.c ****         RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC, ENABLE);
 911              		.loc 1 361 0
 912 06a8 4FF40020 		mov	r0, #524288
 913 06ac 4FF00101 		mov	r1, #1
 914 06b0 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 362:../src/drv/drv_rx.c **** 
 363:../src/drv/drv_rx.c ****         RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM1,  ENABLE);
 915              		.loc 1 363 0
 916 06b4 4FF40060 		mov	r0, #2048
 917 06b8 4FF00101 		mov	r1, #1
 918 06bc FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 364:../src/drv/drv_rx.c ****         RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,  ENABLE);
 919              		.loc 1 364 0
 920 06c0 4FF00100 		mov	r0, #1
 921 06c4 4FF00101 		mov	r1, #1
 922 06c8 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 365:../src/drv/drv_rx.c ****         RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,  ENABLE);
 923              		.loc 1 365 0
 924 06cc 4FF00200 		mov	r0, #2
 925 06d0 4FF00101 		mov	r1, #1
 926 06d4 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 366:../src/drv/drv_rx.c ****         RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM16, ENABLE);
 927              		.loc 1 366 0
 928 06d8 4FF40030 		mov	r0, #131072
 929 06dc 4FF00101 		mov	r1, #1
 930 06e0 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 367:../src/drv/drv_rx.c **** 
 368:../src/drv/drv_rx.c ****         // preset channels to center
 369:../src/drv/drv_rx.c ****         for (i = 0; i < 8; i++)
 931              		.loc 1 369 0
 932 06e4 40F20003 		movw	r3, #:lower16:i
 933 06e8 C0F20003 		movt	r3, #:upper16:i
 934 06ec 4FF00002 		mov	r2, #0
 935 06f0 1A70     		strb	r2, [r3, #0]
 936 06f2 20E0     		b	.L40
 937              	.L41:
 370:../src/drv/drv_rx.c ****             Inputs[i].pulseWidth = RX_PULSE_1p5MS;
 938              		.loc 1 370 0 discriminator 2
 939 06f4 40F20003 		movw	r3, #:lower16:i
 940 06f8 C0F20003 		movt	r3, #:upper16:i
 941 06fc 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 942 06fe 1946     		mov	r1, r3
 943 0700 40F20002 		movw	r2, #:lower16:Inputs
 944 0704 C0F20002 		movt	r2, #:upper16:Inputs
 945 0708 0B46     		mov	r3, r1
 946 070a 4FEA4303 		lsl	r3, r3, #1
 947 070e 5B18     		adds	r3, r3, r1
 948 0710 4FEA4303 		lsl	r3, r3, #1
 949 0714 D318     		adds	r3, r2, r3
 950 0716 40F6B832 		movw	r2, #3000
 951 071a 9A80     		strh	r2, [r3, #4]	@ movhi
 369:../src/drv/drv_rx.c ****         for (i = 0; i < 8; i++)
 952              		.loc 1 369 0 discriminator 2
 953 071c 40F20003 		movw	r3, #:lower16:i
 954 0720 C0F20003 		movt	r3, #:upper16:i
 955 0724 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 956 0726 03F10103 		add	r3, r3, #1
 957 072a DAB2     		uxtb	r2, r3
 958 072c 40F20003 		movw	r3, #:lower16:i
 959 0730 C0F20003 		movt	r3, #:upper16:i
 960 0734 1A70     		strb	r2, [r3, #0]
 961              	.L40:
 369:../src/drv/drv_rx.c ****         for (i = 0; i < 8; i++)
 962              		.loc 1 369 0 is_stmt 0 discriminator 1
 963 0736 40F20003 		movw	r3, #:lower16:i
 964 073a C0F20003 		movt	r3, #:upper16:i
 965 073e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 966 0740 072B     		cmp	r3, #7
 967 0742 D7D9     		bls	.L41
 371:../src/drv/drv_rx.c **** 
 372:../src/drv/drv_rx.c ****         GPIO_InitStructure.GPIO_Pin   = GPIO_Pin_1 | GPIO_Pin_4 | GPIO_Pin_8 | GPIO_Pin_9;
 968              		.loc 1 372 0 is_stmt 1
 969 0744 40F21233 		movw	r3, #786
 970 0748 0A93     		str	r3, [sp, #40]
 373:../src/drv/drv_rx.c ****         GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AF;
 971              		.loc 1 373 0
 972 074a 4FF00203 		mov	r3, #2
 973 074e 8DF82C30 		strb	r3, [sp, #44]
 374:../src/drv/drv_rx.c ****         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 974              		.loc 1 374 0
 975 0752 4FF00303 		mov	r3, #3
 976 0756 8DF82D30 		strb	r3, [sp, #45]
 375:../src/drv/drv_rx.c ****         GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 977              		.loc 1 375 0
 978 075a 4FF00003 		mov	r3, #0
 979 075e 8DF82E30 		strb	r3, [sp, #46]
 376:../src/drv/drv_rx.c **** 	    GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_DOWN;
 980              		.loc 1 376 0
 981 0762 4FF00203 		mov	r3, #2
 982 0766 8DF82F30 		strb	r3, [sp, #47]
 377:../src/drv/drv_rx.c **** 
 378:../src/drv/drv_rx.c **** 	    GPIO_Init(GPIOA, &GPIO_InitStructure);
 983              		.loc 1 378 0
 984 076a 4FF09040 		mov	r0, #1207959552
 985 076e 0AAB     		add	r3, sp, #40
 986 0770 1946     		mov	r1, r3
 987 0772 FFF7FEFF 		bl	GPIO_Init
 379:../src/drv/drv_rx.c **** 
 380:../src/drv/drv_rx.c ****         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_10 | GPIO_Pin_11;
 988              		.loc 1 380 0
 989 0776 4FF45063 		mov	r3, #3328
 990 077a 0A93     		str	r3, [sp, #40]
 381:../src/drv/drv_rx.c **** 
 382:../src/drv/drv_rx.c ****         GPIO_Init(GPIOB, &GPIO_InitStructure);
 991              		.loc 1 382 0
 992 077c 4FF48060 		mov	r0, #1024
 993 0780 C4F60000 		movt	r0, 18432
 994 0784 0AAB     		add	r3, sp, #40
 995 0786 1946     		mov	r1, r3
 996 0788 FFF7FEFF 		bl	GPIO_Init
 383:../src/drv/drv_rx.c **** 
 384:../src/drv/drv_rx.c ****         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;
 997              		.loc 1 384 0
 998 078c 4FF04003 		mov	r3, #64
 999 0790 0A93     		str	r3, [sp, #40]
 385:../src/drv/drv_rx.c **** 
 386:../src/drv/drv_rx.c ****         GPIO_Init(GPIOC, &GPIO_InitStructure);
 1000              		.loc 1 386 0
 1001 0792 4FF40060 		mov	r0, #2048
 1002 0796 C4F60000 		movt	r0, 18432
 1003 079a 0AAB     		add	r3, sp, #40
 1004 079c 1946     		mov	r1, r3
 1005 079e FFF7FEFF 		bl	GPIO_Init
 387:../src/drv/drv_rx.c **** 
 388:../src/drv/drv_rx.c ****     	GPIO_PinAFConfig(GPIOA, GPIO_PinSource1,  GPIO_AF_1);
 1006              		.loc 1 388 0
 1007 07a2 4FF09040 		mov	r0, #1207959552
 1008 07a6 4FF00101 		mov	r1, #1
 1009 07aa 4FF00102 		mov	r2, #1
 1010 07ae FFF7FEFF 		bl	GPIO_PinAFConfig
 389:../src/drv/drv_rx.c **** 	    GPIO_PinAFConfig(GPIOA, GPIO_PinSource4,  GPIO_AF_2);
 1011              		.loc 1 389 0
 1012 07b2 4FF09040 		mov	r0, #1207959552
 1013 07b6 4FF00401 		mov	r1, #4
 1014 07ba 4FF00202 		mov	r2, #2
 1015 07be FFF7FEFF 		bl	GPIO_PinAFConfig
 390:../src/drv/drv_rx.c **** 	    GPIO_PinAFConfig(GPIOA, GPIO_PinSource8,  GPIO_AF_11);
 1016              		.loc 1 390 0
 1017 07c2 4FF09040 		mov	r0, #1207959552
 1018 07c6 4FF00801 		mov	r1, #8
 1019 07ca 4FF00B02 		mov	r2, #11
 1020 07ce FFF7FEFF 		bl	GPIO_PinAFConfig
 391:../src/drv/drv_rx.c **** 	    GPIO_PinAFConfig(GPIOA, GPIO_PinSource9,  GPIO_AF_11);
 1021              		.loc 1 391 0
 1022 07d2 4FF09040 		mov	r0, #1207959552
 1023 07d6 4FF00901 		mov	r1, #9
 1024 07da 4FF00B02 		mov	r2, #11
 1025 07de FFF7FEFF 		bl	GPIO_PinAFConfig
 392:../src/drv/drv_rx.c **** 
 393:../src/drv/drv_rx.c ****         GPIO_PinAFConfig(GPIOB, GPIO_PinSource8,  GPIO_AF_4);
 1026              		.loc 1 393 0
 1027 07e2 4FF48060 		mov	r0, #1024
 1028 07e6 C4F60000 		movt	r0, 18432
 1029 07ea 4FF00801 		mov	r1, #8
 1030 07ee 4FF00402 		mov	r2, #4
 1031 07f2 FFF7FEFF 		bl	GPIO_PinAFConfig
 394:../src/drv/drv_rx.c ****         GPIO_PinAFConfig(GPIOB, GPIO_PinSource10, GPIO_AF_1);
 1032              		.loc 1 394 0
 1033 07f6 4FF48060 		mov	r0, #1024
 1034 07fa C4F60000 		movt	r0, 18432
 1035 07fe 4FF00A01 		mov	r1, #10
 1036 0802 4FF00102 		mov	r2, #1
 1037 0806 FFF7FEFF 		bl	GPIO_PinAFConfig
 395:../src/drv/drv_rx.c ****         GPIO_PinAFConfig(GPIOB, GPIO_PinSource11, GPIO_AF_1);
 1038              		.loc 1 395 0
 1039 080a 4FF48060 		mov	r0, #1024
 1040 080e C4F60000 		movt	r0, 18432
 1041 0812 4FF00B01 		mov	r1, #11
 1042 0816 4FF00102 		mov	r2, #1
 1043 081a FFF7FEFF 		bl	GPIO_PinAFConfig
 396:../src/drv/drv_rx.c **** 
 397:../src/drv/drv_rx.c ****         GPIO_PinAFConfig(GPIOC, GPIO_PinSource6,  GPIO_AF_2);
 1044              		.loc 1 397 0
 1045 081e 4FF40060 		mov	r0, #2048
 1046 0822 C4F60000 		movt	r0, 18432
 1047 0826 4FF00601 		mov	r1, #6
 1048 082a 4FF00202 		mov	r2, #2
 1049 082e FFF7FEFF 		bl	GPIO_PinAFConfig
 398:../src/drv/drv_rx.c **** 
 399:../src/drv/drv_rx.c ****         // Input timers on TIM1, TIM2, TIM3, and TIM16 for PWM
 400:../src/drv/drv_rx.c ****           NVIC_InitStructure.NVIC_IRQChannel                   = TIM1_CC_IRQn;
 1050              		.loc 1 400 0
 1051 0832 4FF01B03 		mov	r3, #27
 1052 0836 8DF81830 		strb	r3, [sp, #24]
 401:../src/drv/drv_rx.c ****           NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
 1053              		.loc 1 401 0
 1054 083a 4FF00203 		mov	r3, #2
 1055 083e 8DF81930 		strb	r3, [sp, #25]
 402:../src/drv/drv_rx.c **** 	      NVIC_InitStructure.NVIC_IRQChannelSubPriority        = 0;
 1056              		.loc 1 402 0
 1057 0842 4FF00003 		mov	r3, #0
 1058 0846 8DF81A30 		strb	r3, [sp, #26]
 403:../src/drv/drv_rx.c ****           NVIC_InitStructure.NVIC_IRQChannelCmd                = ENABLE;
 1059              		.loc 1 403 0
 1060 084a 4FF00103 		mov	r3, #1
 1061 084e 8DF81B30 		strb	r3, [sp, #27]
 404:../src/drv/drv_rx.c **** 
 405:../src/drv/drv_rx.c ****           NVIC_Init(&NVIC_InitStructure);
 1062              		.loc 1 405 0
 1063 0852 06AB     		add	r3, sp, #24
 1064 0854 1846     		mov	r0, r3
 1065 0856 FFF7FEFF 		bl	NVIC_Init
 406:../src/drv/drv_rx.c **** 
 407:../src/drv/drv_rx.c ****           NVIC_InitStructure.NVIC_IRQChannel                   = TIM2_IRQn;
 1066              		.loc 1 407 0
 1067 085a 4FF01C03 		mov	r3, #28
 1068 085e 8DF81830 		strb	r3, [sp, #24]
 408:../src/drv/drv_rx.c ****         //NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
 409:../src/drv/drv_rx.c ****         //NVIC_InitStructure.NVIC_IRQChannelSubPriority        = 0;
 410:../src/drv/drv_rx.c ****         //NVIC_InitStructure.NVIC_IRQChannelCmd                = ENABLE;
 411:../src/drv/drv_rx.c **** 
 412:../src/drv/drv_rx.c ****         NVIC_Init(&NVIC_InitStructure);
 1069              		.loc 1 412 0
 1070 0862 06AB     		add	r3, sp, #24
 1071 0864 1846     		mov	r0, r3
 1072 0866 FFF7FEFF 		bl	NVIC_Init
 413:../src/drv/drv_rx.c **** 
 414:../src/drv/drv_rx.c ****           NVIC_InitStructure.NVIC_IRQChannel                   = TIM3_IRQn;
 1073              		.loc 1 414 0
 1074 086a 4FF01D03 		mov	r3, #29
 1075 086e 8DF81830 		strb	r3, [sp, #24]
 415:../src/drv/drv_rx.c ****         //NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
 416:../src/drv/drv_rx.c **** 	    //NVIC_InitStructure.NVIC_IRQChannelSubPriority        = 0;
 417:../src/drv/drv_rx.c ****         //NVIC_InitStructure.NVIC_IRQChannelCmd                = ENABLE;
 418:../src/drv/drv_rx.c **** 
 419:../src/drv/drv_rx.c ****         NVIC_Init(&NVIC_InitStructure);
 1076              		.loc 1 419 0
 1077 0872 06AB     		add	r3, sp, #24
 1078 0874 1846     		mov	r0, r3
 1079 0876 FFF7FEFF 		bl	NVIC_Init
 420:../src/drv/drv_rx.c **** 
 421:../src/drv/drv_rx.c ****           NVIC_InitStructure.NVIC_IRQChannel                   = TIM1_UP_TIM16_IRQn;
 1080              		.loc 1 421 0
 1081 087a 4FF01903 		mov	r3, #25
 1082 087e 8DF81830 		strb	r3, [sp, #24]
 422:../src/drv/drv_rx.c ****         //NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
 423:../src/drv/drv_rx.c **** 	    //NVIC_InitStructure.NVIC_IRQChannelSubPriority        = 0;
 424:../src/drv/drv_rx.c ****         //NVIC_InitStructure.NVIC_IRQChannelCmd                = ENABLE;
 425:../src/drv/drv_rx.c **** 
 426:../src/drv/drv_rx.c ****         NVIC_Init(&NVIC_InitStructure);
 1083              		.loc 1 426 0
 1084 0882 06AB     		add	r3, sp, #24
 1085 0884 1846     		mov	r0, r3
 1086 0886 FFF7FEFF 		bl	NVIC_Init
 427:../src/drv/drv_rx.c **** 
 428:../src/drv/drv_rx.c ****         // TIM1, TIM2, TIM3 and TIM16 timebase
 429:../src/drv/drv_rx.c ****           TIM_TimeBaseStructure.TIM_Prescaler         = 36 - 1;
 1087              		.loc 1 429 0
 1088 088a 4FF02303 		mov	r3, #35
 1089 088e ADF81C30 		strh	r3, [sp, #28]	@ movhi
 430:../src/drv/drv_rx.c ****         //TIM_TimeBaseStructure.TIM_CounterMode       = TIM_CounterMode_Up;
 431:../src/drv/drv_rx.c ****           TIM_TimeBaseStructure.TIM_Period            = 0xFFFF;
 1090              		.loc 1 431 0
 1091 0892 4FF6FF73 		movw	r3, #65535
 1092 0896 0893     		str	r3, [sp, #32]
 432:../src/drv/drv_rx.c ****         //TIM_TimeBaseStructure.TIM_ClockDivision     = TIM_CKD_DIV1;
 433:../src/drv/drv_rx.c ****         //TIM_TimeBaseStructure.TIM_RepetitionCounter = 0x0000;
 434:../src/drv/drv_rx.c **** 
 435:../src/drv/drv_rx.c ****         TIM_TimeBaseInit(TIM1,  &TIM_TimeBaseStructure);
 1093              		.loc 1 435 0
 1094 0898 4FF43050 		mov	r0, #11264
 1095 089c C4F20100 		movt	r0, 16385
 1096 08a0 07AB     		add	r3, sp, #28
 1097 08a2 1946     		mov	r1, r3
 1098 08a4 FFF7FEFF 		bl	TIM_TimeBaseInit
 436:../src/drv/drv_rx.c ****         TIM_TimeBaseInit(TIM2,  &TIM_TimeBaseStructure);
 1099              		.loc 1 436 0
 1100 08a8 4FF08040 		mov	r0, #1073741824
 1101 08ac 07AB     		add	r3, sp, #28
 1102 08ae 1946     		mov	r1, r3
 1103 08b0 FFF7FEFF 		bl	TIM_TimeBaseInit
 437:../src/drv/drv_rx.c ****         TIM_TimeBaseInit(TIM3,  &TIM_TimeBaseStructure);
 1104              		.loc 1 437 0
 1105 08b4 4FF48060 		mov	r0, #1024
 1106 08b8 C4F20000 		movt	r0, 16384
 1107 08bc 07AB     		add	r3, sp, #28
 1108 08be 1946     		mov	r1, r3
 1109 08c0 FFF7FEFF 		bl	TIM_TimeBaseInit
 438:../src/drv/drv_rx.c ****         TIM_TimeBaseInit(TIM16, &TIM_TimeBaseStructure);
 1110              		.loc 1 438 0
 1111 08c4 4FF48840 		mov	r0, #17408
 1112 08c8 C4F20100 		movt	r0, 16385
 1113 08cc 07AB     		add	r3, sp, #28
 1114 08ce 1946     		mov	r1, r3
 1115 08d0 FFF7FEFF 		bl	TIM_TimeBaseInit
 439:../src/drv/drv_rx.c **** 
 440:../src/drv/drv_rx.c ****         // Parallel PWM Input capture
 441:../src/drv/drv_rx.c ****         //TIM_ICInitStructure.TIM_Channel     = TIM_Channel_1;
 442:../src/drv/drv_rx.c ****           TIM_ICInitStructure.TIM_ICPolarity  = TIM_ICPolarity_Rising;
 1116              		.loc 1 442 0
 1117 08d4 40F20003 		movw	r3, #:lower16:TIM_ICInitStructure
 1118 08d8 C0F20003 		movt	r3, #:upper16:TIM_ICInitStructure
 1119 08dc 4FF00002 		mov	r2, #0
 1120 08e0 5A80     		strh	r2, [r3, #2]	@ movhi
 443:../src/drv/drv_rx.c ****           TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
 1121              		.loc 1 443 0
 1122 08e2 40F20003 		movw	r3, #:lower16:TIM_ICInitStructure
 1123 08e6 C0F20003 		movt	r3, #:upper16:TIM_ICInitStructure
 1124 08ea 4FF00102 		mov	r2, #1
 1125 08ee 9A80     		strh	r2, [r3, #4]	@ movhi
 444:../src/drv/drv_rx.c ****           TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;
 1126              		.loc 1 444 0
 1127 08f0 40F20003 		movw	r3, #:lower16:TIM_ICInitStructure
 1128 08f4 C0F20003 		movt	r3, #:upper16:TIM_ICInitStructure
 1129 08f8 4FF00002 		mov	r2, #0
 1130 08fc DA80     		strh	r2, [r3, #6]	@ movhi
 445:../src/drv/drv_rx.c ****           TIM_ICInitStructure.TIM_ICFilter    = 0x00;
 1131              		.loc 1 445 0
 1132 08fe 40F20003 		movw	r3, #:lower16:TIM_ICInitStructure
 1133 0902 C0F20003 		movt	r3, #:upper16:TIM_ICInitStructure
 1134 0906 4FF00002 		mov	r2, #0
 1135 090a 1A81     		strh	r2, [r3, #8]	@ movhi
 446:../src/drv/drv_rx.c **** 
 447:../src/drv/drv_rx.c ****         for (i = 0; i < 8; i++)
 1136              		.loc 1 447 0
 1137 090c 40F20003 		movw	r3, #:lower16:i
 1138 0910 C0F20003 		movt	r3, #:upper16:i
 1139 0914 4FF00002 		mov	r2, #0
 1140 0918 1A70     		strb	r2, [r3, #0]
 1141 091a 31E0     		b	.L42
 1142              	.L43:
 448:../src/drv/drv_rx.c ****         {
 449:../src/drv/drv_rx.c ****             TIM_ICInitStructure.TIM_Channel = Channels[i].channel;
 1143              		.loc 1 449 0 discriminator 2
 1144 091c 40F20003 		movw	r3, #:lower16:i
 1145 0920 C0F20003 		movt	r3, #:upper16:i
 1146 0924 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1147 0926 40F20002 		movw	r2, #:lower16:Channels
 1148 092a C0F20002 		movt	r2, #:upper16:Channels
 1149 092e 4FEAC303 		lsl	r3, r3, #3
 1150 0932 D318     		adds	r3, r2, r3
 1151 0934 9A88     		ldrh	r2, [r3, #4]
 1152 0936 40F20003 		movw	r3, #:lower16:TIM_ICInitStructure
 1153 093a C0F20003 		movt	r3, #:upper16:TIM_ICInitStructure
 1154 093e 1A80     		strh	r2, [r3, #0]	@ movhi
 450:../src/drv/drv_rx.c ****             TIM_ICInit(Channels[i].tim, &TIM_ICInitStructure);
 1155              		.loc 1 450 0 discriminator 2
 1156 0940 40F20003 		movw	r3, #:lower16:i
 1157 0944 C0F20003 		movt	r3, #:upper16:i
 1158 0948 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1159 094a 1A46     		mov	r2, r3
 1160 094c 40F20003 		movw	r3, #:lower16:Channels
 1161 0950 C0F20003 		movt	r3, #:upper16:Channels
 1162 0954 53F83230 		ldr	r3, [r3, r2, lsl #3]
 1163 0958 1846     		mov	r0, r3
 1164 095a 40F20001 		movw	r1, #:lower16:TIM_ICInitStructure
 1165 095e C0F20001 		movt	r1, #:upper16:TIM_ICInitStructure
 1166 0962 FFF7FEFF 		bl	TIM_ICInit
 447:../src/drv/drv_rx.c ****         for (i = 0; i < 8; i++)
 1167              		.loc 1 447 0 discriminator 2
 1168 0966 40F20003 		movw	r3, #:lower16:i
 1169 096a C0F20003 		movt	r3, #:upper16:i
 1170 096e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1171 0970 03F10103 		add	r3, r3, #1
 1172 0974 DAB2     		uxtb	r2, r3
 1173 0976 40F20003 		movw	r3, #:lower16:i
 1174 097a C0F20003 		movt	r3, #:upper16:i
 1175 097e 1A70     		strb	r2, [r3, #0]
 1176              	.L42:
 447:../src/drv/drv_rx.c ****         for (i = 0; i < 8; i++)
 1177              		.loc 1 447 0 is_stmt 0 discriminator 1
 1178 0980 40F20003 		movw	r3, #:lower16:i
 1179 0984 C0F20003 		movt	r3, #:upper16:i
 1180 0988 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1181 098a 072B     		cmp	r3, #7
 1182 098c C6D9     		bls	.L43
 451:../src/drv/drv_rx.c ****         }
 452:../src/drv/drv_rx.c **** 
 453:../src/drv/drv_rx.c ****         TIM_ITConfig(TIM1,  TIM_IT_CC1 | TIM_IT_CC2, ENABLE);
 1183              		.loc 1 453 0 is_stmt 1
 1184 098e 4FF43050 		mov	r0, #11264
 1185 0992 C4F20100 		movt	r0, 16385
 1186 0996 4FF00601 		mov	r1, #6
 1187 099a 4FF00102 		mov	r2, #1
 1188 099e FFF7FEFF 		bl	TIM_ITConfig
 454:../src/drv/drv_rx.c ****         TIM_ITConfig(TIM2,  TIM_IT_CC2 | TIM_IT_CC3 | TIM_IT_CC4, ENABLE);
 1189              		.loc 1 454 0
 1190 09a2 4FF08040 		mov	r0, #1073741824
 1191 09a6 4FF01C01 		mov	r1, #28
 1192 09aa 4FF00102 		mov	r2, #1
 1193 09ae FFF7FEFF 		bl	TIM_ITConfig
 455:../src/drv/drv_rx.c ****         TIM_ITConfig(TIM3,  TIM_IT_CC1 | TIM_IT_CC2, ENABLE);
 1194              		.loc 1 455 0
 1195 09b2 4FF48060 		mov	r0, #1024
 1196 09b6 C4F20000 		movt	r0, 16384
 1197 09ba 4FF00601 		mov	r1, #6
 1198 09be 4FF00102 		mov	r2, #1
 1199 09c2 FFF7FEFF 		bl	TIM_ITConfig
 456:../src/drv/drv_rx.c ****         TIM_ITConfig(TIM16, TIM_IT_CC1, ENABLE);
 1200              		.loc 1 456 0
 1201 09c6 4FF48840 		mov	r0, #17408
 1202 09ca C4F20100 		movt	r0, 16385
 1203 09ce 4FF00201 		mov	r1, #2
 1204 09d2 4FF00102 		mov	r2, #1
 1205 09d6 FFF7FEFF 		bl	TIM_ITConfig
 457:../src/drv/drv_rx.c **** 
 458:../src/drv/drv_rx.c ****         TIM_Cmd(TIM1,  ENABLE);
 1206              		.loc 1 458 0
 1207 09da 4FF43050 		mov	r0, #11264
 1208 09de C4F20100 		movt	r0, 16385
 1209 09e2 4FF00101 		mov	r1, #1
 1210 09e6 FFF7FEFF 		bl	TIM_Cmd
 459:../src/drv/drv_rx.c ****         TIM_Cmd(TIM2,  ENABLE);
 1211              		.loc 1 459 0
 1212 09ea 4FF08040 		mov	r0, #1073741824
 1213 09ee 4FF00101 		mov	r1, #1
 1214 09f2 FFF7FEFF 		bl	TIM_Cmd
 460:../src/drv/drv_rx.c ****         TIM_Cmd(TIM3,  ENABLE);
 1215              		.loc 1 460 0
 1216 09f6 4FF48060 		mov	r0, #1024
 1217 09fa C4F20000 		movt	r0, 16384
 1218 09fe 4FF00101 		mov	r1, #1
 1219 0a02 FFF7FEFF 		bl	TIM_Cmd
 461:../src/drv/drv_rx.c ****         TIM_Cmd(TIM16, ENABLE);
 1220              		.loc 1 461 0
 1221 0a06 4FF48840 		mov	r0, #17408
 1222 0a0a C4F20100 		movt	r0, 16385
 1223 0a0e 4FF00101 		mov	r1, #1
 1224 0a12 FFF7FEFF 		bl	TIM_Cmd
 1225 0a16 A0E0     		b	.L34
 1226              	.L39:
 462:../src/drv/drv_rx.c **** 	}
 463:../src/drv/drv_rx.c **** 
 464:../src/drv/drv_rx.c **** 	///////////////////////////////////
 465:../src/drv/drv_rx.c **** 
 466:../src/drv/drv_rx.c **** 	else if (eepromConfig.receiverType == SPEKTRUM)
 1227              		.loc 1 466 0
 1228 0a18 40F20003 		movw	r3, #:lower16:eepromConfig
 1229 0a1c C0F20003 		movt	r3, #:upper16:eepromConfig
 1230 0a20 93F86C30 		ldrb	r3, [r3, #108]	@ zero_extendqisi2
 1231 0a24 032B     		cmp	r3, #3
 1232 0a26 40F09880 		bne	.L34
 467:../src/drv/drv_rx.c **** 	{
 468:../src/drv/drv_rx.c ****         // Spektrum Satellite RX Input
 469:../src/drv/drv_rx.c ****     	// USART3 RX PD9
 470:../src/drv/drv_rx.c **** 
 471:../src/drv/drv_rx.c ****         RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOD, ENABLE);
 1233              		.loc 1 471 0
 1234 0a2a 4FF48010 		mov	r0, #1048576
 1235 0a2e 4FF00101 		mov	r1, #1
 1236 0a32 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 472:../src/drv/drv_rx.c **** 
 473:../src/drv/drv_rx.c ****         RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART3, ENABLE);
 1237              		.loc 1 473 0
 1238 0a36 4FF48020 		mov	r0, #262144
 1239 0a3a 4FF00101 		mov	r1, #1
 1240 0a3e FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 474:../src/drv/drv_rx.c **** 
 475:../src/drv/drv_rx.c ****         NVIC_InitStructure.NVIC_IRQChannel                   = USART3_IRQn;
 1241              		.loc 1 475 0
 1242 0a42 4FF02703 		mov	r3, #39
 1243 0a46 8DF81830 		strb	r3, [sp, #24]
 476:../src/drv/drv_rx.c ****         NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
 1244              		.loc 1 476 0
 1245 0a4a 4FF00203 		mov	r3, #2
 1246 0a4e 8DF81930 		strb	r3, [sp, #25]
 477:../src/drv/drv_rx.c ****         NVIC_InitStructure.NVIC_IRQChannelSubPriority        = 0;
 1247              		.loc 1 477 0
 1248 0a52 4FF00003 		mov	r3, #0
 1249 0a56 8DF81A30 		strb	r3, [sp, #26]
 478:../src/drv/drv_rx.c ****         NVIC_InitStructure.NVIC_IRQChannelCmd                = ENABLE;
 1250              		.loc 1 478 0
 1251 0a5a 4FF00103 		mov	r3, #1
 1252 0a5e 8DF81B30 		strb	r3, [sp, #27]
 479:../src/drv/drv_rx.c ****         NVIC_Init(&NVIC_InitStructure);
 1253              		.loc 1 479 0
 1254 0a62 06AB     		add	r3, sp, #24
 1255 0a64 1846     		mov	r0, r3
 1256 0a66 FFF7FEFF 		bl	NVIC_Init
 480:../src/drv/drv_rx.c **** 
 481:../src/drv/drv_rx.c ****         GPIO_PinAFConfig(SPEKTRUM_UART_GPIO, SPEKTRUM_UART_PINSOURCE, GPIO_AF_7);
 1257              		.loc 1 481 0
 1258 0a6a 4FF44060 		mov	r0, #3072
 1259 0a6e C4F60000 		movt	r0, 18432
 1260 0a72 4FF00901 		mov	r1, #9
 1261 0a76 4FF00702 		mov	r2, #7
 1262 0a7a FFF7FEFF 		bl	GPIO_PinAFConfig
 482:../src/drv/drv_rx.c **** 
 483:../src/drv/drv_rx.c ****         GPIO_InitStructure.GPIO_Pin   = SPEKTRUM_UART_PIN;
 1263              		.loc 1 483 0
 1264 0a7e 4FF40073 		mov	r3, #512
 1265 0a82 0A93     		str	r3, [sp, #40]
 484:../src/drv/drv_rx.c ****         GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AF;
 1266              		.loc 1 484 0
 1267 0a84 4FF00203 		mov	r3, #2
 1268 0a88 8DF82C30 		strb	r3, [sp, #44]
 485:../src/drv/drv_rx.c ****         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 1269              		.loc 1 485 0
 1270 0a8c 4FF00303 		mov	r3, #3
 1271 0a90 8DF82D30 		strb	r3, [sp, #45]
 486:../src/drv/drv_rx.c ****         GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 1272              		.loc 1 486 0
 1273 0a94 4FF00003 		mov	r3, #0
 1274 0a98 8DF82E30 		strb	r3, [sp, #46]
 487:../src/drv/drv_rx.c **** 	    GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
 1275              		.loc 1 487 0
 1276 0a9c 4FF00103 		mov	r3, #1
 1277 0aa0 8DF82F30 		strb	r3, [sp, #47]
 488:../src/drv/drv_rx.c **** 
 489:../src/drv/drv_rx.c ****         GPIO_Init(SPEKTRUM_UART_GPIO, &GPIO_InitStructure);
 1278              		.loc 1 489 0
 1279 0aa4 4FF44060 		mov	r0, #3072
 1280 0aa8 C4F60000 		movt	r0, 18432
 1281 0aac 0AAB     		add	r3, sp, #40
 1282 0aae 1946     		mov	r1, r3
 1283 0ab0 FFF7FEFF 		bl	GPIO_Init
 490:../src/drv/drv_rx.c **** 
 491:../src/drv/drv_rx.c ****     	USART_InitStructure.USART_BaudRate            = 115200;
 1284              		.loc 1 491 0
 1285 0ab4 4FF4E133 		mov	r3, #115200
 1286 0ab8 0093     		str	r3, [sp, #0]
 492:../src/drv/drv_rx.c ****         USART_InitStructure.USART_WordLength          = USART_WordLength_8b;
 1287              		.loc 1 492 0
 1288 0aba 4FF00003 		mov	r3, #0
 1289 0abe 0193     		str	r3, [sp, #4]
 493:../src/drv/drv_rx.c ****         USART_InitStructure.USART_StopBits            = USART_StopBits_1;
 1290              		.loc 1 493 0
 1291 0ac0 4FF00003 		mov	r3, #0
 1292 0ac4 0293     		str	r3, [sp, #8]
 494:../src/drv/drv_rx.c ****         USART_InitStructure.USART_Parity              = USART_Parity_No;
 1293              		.loc 1 494 0
 1294 0ac6 4FF00003 		mov	r3, #0
 1295 0aca 0393     		str	r3, [sp, #12]
 495:../src/drv/drv_rx.c ****         USART_InitStructure.USART_Mode                = USART_Mode_Rx;
 1296              		.loc 1 495 0
 1297 0acc 4FF00403 		mov	r3, #4
 1298 0ad0 0493     		str	r3, [sp, #16]
 496:../src/drv/drv_rx.c ****         USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 1299              		.loc 1 496 0
 1300 0ad2 4FF00003 		mov	r3, #0
 1301 0ad6 0593     		str	r3, [sp, #20]
 497:../src/drv/drv_rx.c **** 
 498:../src/drv/drv_rx.c ****         USART_Init(USART3, &USART_InitStructure);
 1302              		.loc 1 498 0
 1303 0ad8 4FF49040 		mov	r0, #18432
 1304 0adc C4F20000 		movt	r0, 16384
 1305 0ae0 6B46     		mov	r3, sp
 1306 0ae2 1946     		mov	r1, r3
 1307 0ae4 FFF7FEFF 		bl	USART_Init
 499:../src/drv/drv_rx.c **** 
 500:../src/drv/drv_rx.c ****         USART_ITConfig(USART3, USART_IT_RXNE, ENABLE);
 1308              		.loc 1 500 0
 1309 0ae8 4FF49040 		mov	r0, #18432
 1310 0aec C4F20000 		movt	r0, 16384
 1311 0af0 40F20511 		movw	r1, #261
 1312 0af4 C0F20501 		movt	r1, 5
 1313 0af8 4FF00102 		mov	r2, #1
 1314 0afc FFF7FEFF 		bl	USART_ITConfig
 501:../src/drv/drv_rx.c ****         USART_Cmd(USART3, ENABLE);
 1315              		.loc 1 501 0
 1316 0b00 4FF49040 		mov	r0, #18432
 1317 0b04 C4F20000 		movt	r0, 16384
 1318 0b08 4FF00101 		mov	r1, #1
 1319 0b0c FFF7FEFF 		bl	USART_Cmd
 502:../src/drv/drv_rx.c **** 
 503:../src/drv/drv_rx.c ****         ///////////////////////////////
 504:../src/drv/drv_rx.c **** 
 505:../src/drv/drv_rx.c ****         if (eepromConfig.spektrumHires)
 1320              		.loc 1 505 0
 1321 0b10 40F20003 		movw	r3, #:lower16:eepromConfig
 1322 0b14 C0F20003 		movt	r3, #:upper16:eepromConfig
 1323 0b18 93F86E30 		ldrb	r3, [r3, #110]	@ zero_extendqisi2
 1324 0b1c 002B     		cmp	r3, #0
 1325 0b1e 0ED0     		beq	.L44
 506:../src/drv/drv_rx.c ****         {
 507:../src/drv/drv_rx.c **** 		    // 11 bit frames
 508:../src/drv/drv_rx.c **** 		    spektrumChannelShift = 3;
 1326              		.loc 1 508 0
 1327 0b20 40F20003 		movw	r3, #:lower16:spektrumChannelShift
 1328 0b24 C0F20003 		movt	r3, #:upper16:spektrumChannelShift
 1329 0b28 4FF00302 		mov	r2, #3
 1330 0b2c 1A70     		strb	r2, [r3, #0]
 509:../src/drv/drv_rx.c **** 		    spektrumChannelMask  = 0x07;
 1331              		.loc 1 509 0
 1332 0b2e 40F20003 		movw	r3, #:lower16:spektrumChannelMask
 1333 0b32 C0F20003 		movt	r3, #:upper16:spektrumChannelMask
 1334 0b36 4FF00702 		mov	r2, #7
 1335 0b3a 1A70     		strb	r2, [r3, #0]
 1336 0b3c 0DE0     		b	.L34
 1337              	.L44:
 510:../src/drv/drv_rx.c **** 		}
 511:../src/drv/drv_rx.c **** 		else
 512:../src/drv/drv_rx.c **** 		{
 513:../src/drv/drv_rx.c **** 		    // 10 bit frames
 514:../src/drv/drv_rx.c **** 		    spektrumChannelShift = 2;
 1338              		.loc 1 514 0
 1339 0b3e 40F20003 		movw	r3, #:lower16:spektrumChannelShift
 1340 0b42 C0F20003 		movt	r3, #:upper16:spektrumChannelShift
 1341 0b46 4FF00202 		mov	r2, #2
 1342 0b4a 1A70     		strb	r2, [r3, #0]
 515:../src/drv/drv_rx.c **** 		    spektrumChannelMask  = 0x03;
 1343              		.loc 1 515 0
 1344 0b4c 40F20003 		movw	r3, #:lower16:spektrumChannelMask
 1345 0b50 C0F20003 		movt	r3, #:upper16:spektrumChannelMask
 1346 0b54 4FF00302 		mov	r2, #3
 1347 0b58 1A70     		strb	r2, [r3, #0]
 1348              	.L34:
 516:../src/drv/drv_rx.c **** 		}
 517:../src/drv/drv_rx.c **** 
 518:../src/drv/drv_rx.c ****         ///////////////////////////////
 519:../src/drv/drv_rx.c **** 	}
 520:../src/drv/drv_rx.c **** 
 521:../src/drv/drv_rx.c **** 	///////////////////////////////////
 522:../src/drv/drv_rx.c **** }
 1349              		.loc 1 522 0
 1350 0b5a 0DB0     		add	sp, sp, #52
 1351 0b5c 00BD     		pop	{pc}
 1352              		.cfi_endproc
 1353              	.LFE118:
 1355 0b5e 00BF     		.align	2
 1356              		.global	rxRead
 1357              		.thumb
 1358              		.thumb_func
 1360              	rxRead:
 1361              	.LFB119:
 523:../src/drv/drv_rx.c **** 
 524:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
 525:../src/drv/drv_rx.c **** // Receiver Read
 526:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
 527:../src/drv/drv_rx.c **** 
 528:../src/drv/drv_rx.c **** uint16_t rxRead(uint8_t channel)
 529:../src/drv/drv_rx.c **** {
 1362              		.loc 1 529 0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 16
 1365              		@ frame_needed = 0, uses_anonymous_args = 0
 1366              		@ link register save eliminated.
 1367 0b60 84B0     		sub	sp, sp, #16
 1368              	.LCFI12:
 1369              		.cfi_def_cfa_offset 16
 1370 0b62 0346     		mov	r3, r0
 1371 0b64 8DF80730 		strb	r3, [sp, #7]
 530:../src/drv/drv_rx.c ****     uint16_t data;
 531:../src/drv/drv_rx.c **** 
 532:../src/drv/drv_rx.c ****     if (eepromConfig.receiverType == SPEKTRUM)
 1372              		.loc 1 532 0
 1373 0b68 40F20003 		movw	r3, #:lower16:eepromConfig
 1374 0b6c C0F20003 		movt	r3, #:upper16:eepromConfig
 1375 0b70 93F86C30 		ldrb	r3, [r3, #108]	@ zero_extendqisi2
 1376 0b74 032B     		cmp	r3, #3
 1377 0b76 37D1     		bne	.L46
 533:../src/drv/drv_rx.c ****     {
 534:../src/drv/drv_rx.c ****         if (channel >= eepromConfig.spektrumChannels)
 1378              		.loc 1 534 0
 1379 0b78 40F20003 		movw	r3, #:lower16:eepromConfig
 1380 0b7c C0F20003 		movt	r3, #:upper16:eepromConfig
 1381 0b80 93F86D30 		ldrb	r3, [r3, #109]	@ zero_extendqisi2
 1382 0b84 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 1383 0b88 9A42     		cmp	r2, r3
 1384 0b8a 04D3     		bcc	.L47
 535:../src/drv/drv_rx.c ****     	{
 536:../src/drv/drv_rx.c ****     	    data = MINCOMMAND;
 1385              		.loc 1 536 0
 1386 0b8c 4FF4FA63 		mov	r3, #2000
 1387 0b90 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 1388 0b94 25E0     		b	.L48
 1389              	.L47:
 537:../src/drv/drv_rx.c ****     	}
 538:../src/drv/drv_rx.c ****        	else
 539:../src/drv/drv_rx.c ****        	{
 540:../src/drv/drv_rx.c ****        	    if (eepromConfig.spektrumHires)
 1390              		.loc 1 540 0
 1391 0b96 40F20003 		movw	r3, #:lower16:eepromConfig
 1392 0b9a C0F20003 		movt	r3, #:upper16:eepromConfig
 1393 0b9e 93F86E30 		ldrb	r3, [r3, #110]	@ zero_extendqisi2
 1394 0ba2 002B     		cmp	r3, #0
 1395 0ba4 0DD0     		beq	.L49
 541:../src/drv/drv_rx.c ****        	        data = 1000 + spektrumChannelData[channel];         // 2048 mode
 1396              		.loc 1 541 0
 1397 0ba6 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 1398 0baa 40F20003 		movw	r3, #:lower16:spektrumChannelData
 1399 0bae C0F20003 		movt	r3, #:upper16:spektrumChannelData
 1400 0bb2 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1401 0bb6 9BB2     		uxth	r3, r3
 1402 0bb8 03F57A73 		add	r3, r3, #1000
 1403 0bbc ADF80E30 		strh	r3, [sp, #14]	@ movhi
 1404 0bc0 0FE0     		b	.L48
 1405              	.L49:
 542:../src/drv/drv_rx.c ****        	    else
 543:../src/drv/drv_rx.c ****        	        data = (1000 + spektrumChannelData[channel]) << 1;  // 1024 mode
 1406              		.loc 1 543 0
 1407 0bc2 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 1408 0bc6 40F20003 		movw	r3, #:lower16:spektrumChannelData
 1409 0bca C0F20003 		movt	r3, #:upper16:spektrumChannelData
 1410 0bce 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1411 0bd2 9BB2     		uxth	r3, r3
 1412 0bd4 03F57A73 		add	r3, r3, #1000
 1413 0bd8 9BB2     		uxth	r3, r3
 1414 0bda 4FEA4303 		lsl	r3, r3, #1
 1415 0bde ADF80E30 		strh	r3, [sp, #14]	@ movhi
 1416              	.L48:
 544:../src/drv/drv_rx.c ****        	}
 545:../src/drv/drv_rx.c ****         return data;
 1417              		.loc 1 545 0
 1418 0be2 BDF80E30 		ldrh	r3, [sp, #14]
 1419 0be6 0DE0     		b	.L50
 1420              	.L46:
 546:../src/drv/drv_rx.c ****     }
 547:../src/drv/drv_rx.c ****     else
 548:../src/drv/drv_rx.c ****     {
 549:../src/drv/drv_rx.c ****         return Inputs[channel].pulseWidth;
 1421              		.loc 1 549 0
 1422 0be8 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 1423 0bec 40F20002 		movw	r2, #:lower16:Inputs
 1424 0bf0 C0F20002 		movt	r2, #:upper16:Inputs
 1425 0bf4 0B46     		mov	r3, r1
 1426 0bf6 4FEA4303 		lsl	r3, r3, #1
 1427 0bfa 5B18     		adds	r3, r3, r1
 1428 0bfc 4FEA4303 		lsl	r3, r3, #1
 1429 0c00 D318     		adds	r3, r2, r3
 1430 0c02 9B88     		ldrh	r3, [r3, #4]
 1431              	.L50:
 550:../src/drv/drv_rx.c ****     }
 551:../src/drv/drv_rx.c **** }
 1432              		.loc 1 551 0
 1433 0c04 1846     		mov	r0, r3
 1434 0c06 04B0     		add	sp, sp, #16
 1435 0c08 7047     		bx	lr
 1436              		.cfi_endproc
 1437              	.LFE119:
 1439 0c0a 00BF     		.align	2
 1440              		.global	checkSpektrumBind
 1441              		.thumb
 1442              		.thumb_func
 1444              	checkSpektrumBind:
 1445              	.LFB120:
 552:../src/drv/drv_rx.c **** 
 553:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
 554:../src/drv/drv_rx.c **** // Check Spektrum Bind
 555:../src/drv/drv_rx.c **** ///////////////////////////////////////////////////////////////////////////////
 556:../src/drv/drv_rx.c **** 
 557:../src/drv/drv_rx.c **** void checkSpektrumBind()
 558:../src/drv/drv_rx.c **** {
 1446              		.loc 1 558 0
 1447              		.cfi_startproc
 1448              		@ args = 0, pretend = 0, frame = 16
 1449              		@ frame_needed = 0, uses_anonymous_args = 0
 1450 0c0c 00B5     		push	{lr}
 1451              	.LCFI13:
 1452              		.cfi_def_cfa_offset 4
 1453              		.cfi_offset 14, -4
 1454 0c0e 85B0     		sub	sp, sp, #20
 1455              	.LCFI14:
 1456              		.cfi_def_cfa_offset 24
 559:../src/drv/drv_rx.c ****     // Spektrum Satellite RX Input
 560:../src/drv/drv_rx.c ****   	// USART3 RX PD9
 561:../src/drv/drv_rx.c **** 	// Spektrum Satellite Bind Input
 562:../src/drv/drv_rx.c **** 	// PC1
 563:../src/drv/drv_rx.c **** 
 564:../src/drv/drv_rx.c **** 	GPIO_InitTypeDef  GPIO_InitStructure;
 565:../src/drv/drv_rx.c **** 
 566:../src/drv/drv_rx.c **** 	uint8_t i;
 567:../src/drv/drv_rx.c **** 
 568:../src/drv/drv_rx.c **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC, ENABLE);
 1457              		.loc 1 568 0
 1458 0c10 4FF40020 		mov	r0, #524288
 1459 0c14 4FF00101 		mov	r1, #1
 1460 0c18 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 569:../src/drv/drv_rx.c **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOD, ENABLE);
 1461              		.loc 1 569 0
 1462 0c1c 4FF48010 		mov	r0, #1048576
 1463 0c20 4FF00101 		mov	r1, #1
 1464 0c24 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 570:../src/drv/drv_rx.c **** 
 571:../src/drv/drv_rx.c ****     ///////////////////////////////
 572:../src/drv/drv_rx.c **** 
 573:../src/drv/drv_rx.c ****     // Configure bind pin as input
 574:../src/drv/drv_rx.c ****     GPIO_InitStructure.GPIO_Pin   = SPEKTRUM_BIND_PIN;
 1465              		.loc 1 574 0
 1466 0c28 4FF00203 		mov	r3, #2
 1467 0c2c 0193     		str	r3, [sp, #4]
 575:../src/drv/drv_rx.c ****     GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_IN;
 1468              		.loc 1 575 0
 1469 0c2e 4FF00003 		mov	r3, #0
 1470 0c32 8DF80830 		strb	r3, [sp, #8]
 576:../src/drv/drv_rx.c ****     GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 1471              		.loc 1 576 0
 1472 0c36 4FF00303 		mov	r3, #3
 1473 0c3a 8DF80930 		strb	r3, [sp, #9]
 577:../src/drv/drv_rx.c ****     GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 1474              		.loc 1 577 0
 1475 0c3e 4FF00003 		mov	r3, #0
 1476 0c42 8DF80A30 		strb	r3, [sp, #10]
 578:../src/drv/drv_rx.c ****     GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
 1477              		.loc 1 578 0
 1478 0c46 4FF00103 		mov	r3, #1
 1479 0c4a 8DF80B30 		strb	r3, [sp, #11]
 579:../src/drv/drv_rx.c **** 
 580:../src/drv/drv_rx.c ****     GPIO_Init(SPEKTRUM_BIND_GPIO, &GPIO_InitStructure);
 1480              		.loc 1 580 0
 1481 0c4e 4FF40060 		mov	r0, #2048
 1482 0c52 C4F60000 		movt	r0, 18432
 1483 0c56 01AB     		add	r3, sp, #4
 1484 0c58 1946     		mov	r1, r3
 1485 0c5a FFF7FEFF 		bl	GPIO_Init
 581:../src/drv/drv_rx.c **** 
 582:../src/drv/drv_rx.c ****     // Check bind pin state, if high (true), return without binding
 583:../src/drv/drv_rx.c ****     if (GPIO_ReadInputDataBit(SPEKTRUM_BIND_GPIO, SPEKTRUM_BIND_PIN) == true)
 1486              		.loc 1 583 0
 1487 0c5e 4FF40060 		mov	r0, #2048
 1488 0c62 C4F60000 		movt	r0, 18432
 1489 0c66 4FF00201 		mov	r1, #2
 1490 0c6a FFF7FEFF 		bl	GPIO_ReadInputDataBit
 1491 0c6e 0346     		mov	r3, r0
 1492 0c70 012B     		cmp	r3, #1
 1493 0c72 6BD0     		beq	.L58
 1494              	.L52:
 584:../src/drv/drv_rx.c ****     	return;
 585:../src/drv/drv_rx.c **** 
 586:../src/drv/drv_rx.c ****     if (eepromConfig.spektrumChannels <= 7)
 1495              		.loc 1 586 0
 1496 0c74 40F20003 		movw	r3, #:lower16:eepromConfig
 1497 0c78 C0F20003 		movt	r3, #:upper16:eepromConfig
 1498 0c7c 93F86D30 		ldrb	r3, [r3, #109]	@ zero_extendqisi2
 1499 0c80 072B     		cmp	r3, #7
 1500 0c82 07D8     		bhi	.L54
 587:../src/drv/drv_rx.c ****         spektrumBindCount = 3;  // Master receiver with 7 or less channels
 1501              		.loc 1 587 0
 1502 0c84 40F20003 		movw	r3, #:lower16:spektrumBindCount
 1503 0c88 C0F20003 		movt	r3, #:upper16:spektrumBindCount
 1504 0c8c 4FF00302 		mov	r2, #3
 1505 0c90 1A70     		strb	r2, [r3, #0]
 1506 0c92 06E0     		b	.L55
 1507              	.L54:
 588:../src/drv/drv_rx.c ****     else
 589:../src/drv/drv_rx.c ****         spektrumBindCount = 5;  // Master receiver with 8 or more channels
 1508              		.loc 1 589 0
 1509 0c94 40F20003 		movw	r3, #:lower16:spektrumBindCount
 1510 0c98 C0F20003 		movt	r3, #:upper16:spektrumBindCount
 1511 0c9c 4FF00502 		mov	r2, #5
 1512 0ca0 1A70     		strb	r2, [r3, #0]
 1513              	.L55:
 590:../src/drv/drv_rx.c **** 
 591:../src/drv/drv_rx.c ****     // Configure UART pin as output
 592:../src/drv/drv_rx.c ****     GPIO_InitStructure.GPIO_Pin   = SPEKTRUM_UART_PIN;
 1514              		.loc 1 592 0
 1515 0ca2 4FF40073 		mov	r3, #512
 1516 0ca6 0193     		str	r3, [sp, #4]
 593:../src/drv/drv_rx.c ****     GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;
 1517              		.loc 1 593 0
 1518 0ca8 4FF00103 		mov	r3, #1
 1519 0cac 8DF80830 		strb	r3, [sp, #8]
 594:../src/drv/drv_rx.c ****     GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 1520              		.loc 1 594 0
 1521 0cb0 4FF00303 		mov	r3, #3
 1522 0cb4 8DF80930 		strb	r3, [sp, #9]
 595:../src/drv/drv_rx.c ****     GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 1523              		.loc 1 595 0
 1524 0cb8 4FF00003 		mov	r3, #0
 1525 0cbc 8DF80A30 		strb	r3, [sp, #10]
 596:../src/drv/drv_rx.c **** 	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_NOPULL;
 1526              		.loc 1 596 0
 1527 0cc0 4FF00003 		mov	r3, #0
 1528 0cc4 8DF80B30 		strb	r3, [sp, #11]
 597:../src/drv/drv_rx.c **** 
 598:../src/drv/drv_rx.c ****     GPIO_Init(SPEKTRUM_UART_GPIO, &GPIO_InitStructure);
 1529              		.loc 1 598 0
 1530 0cc8 4FF44060 		mov	r0, #3072
 1531 0ccc C4F60000 		movt	r0, 18432
 1532 0cd0 01AB     		add	r3, sp, #4
 1533 0cd2 1946     		mov	r1, r3
 1534 0cd4 FFF7FEFF 		bl	GPIO_Init
 599:../src/drv/drv_rx.c **** 
 600:../src/drv/drv_rx.c ****     GPIO_WriteBit(SPEKTRUM_UART_GPIO, SPEKTRUM_UART_PIN, Bit_SET);
 1535              		.loc 1 600 0
 1536 0cd8 4FF44060 		mov	r0, #3072
 1537 0cdc C4F60000 		movt	r0, 18432
 1538 0ce0 4FF40071 		mov	r1, #512
 1539 0ce4 4FF00102 		mov	r2, #1
 1540 0ce8 FFF7FEFF 		bl	GPIO_WriteBit
 601:../src/drv/drv_rx.c **** 
 602:../src/drv/drv_rx.c ****     delay(60);
 1541              		.loc 1 602 0
 1542 0cec 4FF03C00 		mov	r0, #60
 1543 0cf0 FFF7FEFF 		bl	delay
 603:../src/drv/drv_rx.c **** 
 604:../src/drv/drv_rx.c ****     for (i = 0; i < 3; i++)
 1544              		.loc 1 604 0
 1545 0cf4 4FF00003 		mov	r3, #0
 1546 0cf8 8DF80F30 		strb	r3, [sp, #15]
 1547 0cfc 21E0     		b	.L56
 1548              	.L57:
 605:../src/drv/drv_rx.c ****     {
 606:../src/drv/drv_rx.c **** 	    GPIO_WriteBit(SPEKTRUM_UART_GPIO, SPEKTRUM_UART_PIN, Bit_RESET);
 1549              		.loc 1 606 0 discriminator 2
 1550 0cfe 4FF44060 		mov	r0, #3072
 1551 0d02 C4F60000 		movt	r0, 18432
 1552 0d06 4FF40071 		mov	r1, #512
 1553 0d0a 4FF00002 		mov	r2, #0
 1554 0d0e FFF7FEFF 		bl	GPIO_WriteBit
 607:../src/drv/drv_rx.c **** 	    delayMicroseconds(120);
 1555              		.loc 1 607 0 discriminator 2
 1556 0d12 4FF07800 		mov	r0, #120
 1557 0d16 FFF7FEFF 		bl	delayMicroseconds
 608:../src/drv/drv_rx.c **** 		GPIO_WriteBit(SPEKTRUM_UART_GPIO, SPEKTRUM_UART_PIN, Bit_SET  );
 1558              		.loc 1 608 0 discriminator 2
 1559 0d1a 4FF44060 		mov	r0, #3072
 1560 0d1e C4F60000 		movt	r0, 18432
 1561 0d22 4FF40071 		mov	r1, #512
 1562 0d26 4FF00102 		mov	r2, #1
 1563 0d2a FFF7FEFF 		bl	GPIO_WriteBit
 609:../src/drv/drv_rx.c ****         delayMicroseconds(120);
 1564              		.loc 1 609 0 discriminator 2
 1565 0d2e 4FF07800 		mov	r0, #120
 1566 0d32 FFF7FEFF 		bl	delayMicroseconds
 604:../src/drv/drv_rx.c ****     for (i = 0; i < 3; i++)
 1567              		.loc 1 604 0 discriminator 2
 1568 0d36 9DF80F30 		ldrb	r3, [sp, #15]
 1569 0d3a 03F10103 		add	r3, r3, #1
 1570 0d3e 8DF80F30 		strb	r3, [sp, #15]
 1571              	.L56:
 604:../src/drv/drv_rx.c ****     for (i = 0; i < 3; i++)
 1572              		.loc 1 604 0 is_stmt 0 discriminator 1
 1573 0d42 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1574 0d46 022B     		cmp	r3, #2
 1575 0d48 D9D9     		bls	.L57
 1576 0d4a 00E0     		b	.L51
 1577              	.L58:
 584:../src/drv/drv_rx.c ****     	return;
 1578              		.loc 1 584 0 is_stmt 1
 1579 0d4c 00BF     		nop
 1580              	.L51:
 610:../src/drv/drv_rx.c **** 	}
 611:../src/drv/drv_rx.c **** }
 1581              		.loc 1 611 0
 1582 0d4e 05B0     		add	sp, sp, #20
 1583 0d50 00BD     		pop	{pc}
 1584              		.cfi_endproc
 1585              	.LFE120:
 1587              		.bss
 1588 003f 00       		.align	1
 1589              	now.8862:
 1590 0040 0000     		.space	2
 1591              		.align	1
 1592              	last.8863:
 1593 0042 0000     		.space	2
 1594              	chan.8864:
 1595 0044 00       		.space	1
 1596 0045 000000   		.text
 1597              	.Letext0:
 1598              		.file 2 "c:\\program files\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/gcc/ar
 1599              		.file 3 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\Device\\
 1600              		.file 4 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\STM32F30
 1601              		.file 5 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\STM32F30
 1602              		.file 6 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\STM32F30
 1603              		.file 7 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\STM32F30
 1604              		.file 8 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src/pid.h"
 1605              		.file 9 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src/aq32Plus_F3.h"
 1606              		.file 10 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src\\gps/gpsMediaT
 1607              		.file 11 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src\\gps/gpsNMEA.h
 1608              		.file 12 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src\\gps/gpsUblox.
 1609              		.file 13 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\CMSIS\\
DEFINED SYMBOLS
                            *ABS*:00000000 drv_rx.c
                            *COM*:00000001 mtk19ProcessDataState
                            *COM*:00000001 nmeaProcessDataState
                            *COM*:00000001 ubloxProcessDataState
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:26     .bss:00000000 rcActive
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:27     .bss:00000000 $d
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:29     .data:00000000 $d
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:32     .data:00000000 Channels
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:59     .bss:00000004 Inputs
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:62     .bss:00000034 TIM_ICInitStructure
                            *COM*:00000001 i
                            *COM*:00000001 spektrumBindCount
                            *COM*:00000030 spektrumChannelData
                            *COM*:00000001 spektrumChannelMask
                            *COM*:00000001 spektrumChannelShift
                            *COM*:00000010 spektrumFrame
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:73     .bss:0000003e spektrumFrameComplete
                            *COM*:00000001 spektrumFramePosition
                            *COM*:00000004 spektrumTimeInterval
                            *COM*:00000004 spektrumTimeLast
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:79     .text:00000000 $t
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:83     .text:00000000 serialPWM_IRQHandler
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:1589   .bss:00000040 now.8862
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:1592   .bss:00000042 last.8863
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:1594   .bss:00000044 chan.8864
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:201    .text:000000f8 parallelPWM_IRQHandler
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:282    .text:0000019c $d
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:297    .text:000001d0 $t
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:440    .text:000002d8 TIM1_CC_IRQHandler
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:465    .text:000002e8 TIM2_IRQHandler
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:489    .text:000002f4 TIM3_IRQHandler
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:514    .text:00000304 TIM1_UP_TIM16_IRQHandler
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:552    .text:00000334 USART3_IRQHandler
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:726    .text:000004cc rxInit
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:1360   .text:00000b60 rxRead
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccfX8SZx.s:1444   .text:00000c0c checkSpektrumBind
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TIM_GetITStatus
TIM_GetCapture4
TIM_ClearITPendingBit
TIM_GetCapture1
TIM_GetCapture2
TIM_GetCapture3
TIM_ICInit
eepromConfig
USART_GetITStatus
micros
USART_ReceiveData
TIM_TimeBaseStructInit
TIM_ICStructInit
RCC_AHBPeriphClockCmd
RCC_APB2PeriphClockCmd
GPIO_Init
GPIO_PinAFConfig
NVIC_Init
TIM_TimeBaseInit
TIM_ITConfig
TIM_Cmd
RCC_APB1PeriphClockCmd
USART_Init
USART_ITConfig
USART_Cmd
GPIO_ReadInputDataBit
GPIO_WriteBit
delay
delayMicroseconds

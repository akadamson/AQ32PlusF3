   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"drv_spi.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	mtk19ProcessDataState,1,1
  20              		.comm	nmeaProcessDataState,1,1
  21              		.comm	ubloxProcessDataState,1,1
  22              		.bss
  23              		.align	1
  24              	spi1ErrorCount:
  25 0000 0000     		.space	2
  26              		.align	1
  27              	spi2ErrorCount:
  28 0002 0000     		.space	2
  29              		.text
  30              		.align	2
  31              		.global	spiInit
  32              		.thumb
  33              		.thumb_func
  35              	spiInit:
  36              	.LFB111:
  37              		.file 1 "../src/drv/drv_spi.c"
   1:../src/drv/drv_spi.c **** /*
   2:../src/drv/drv_spi.c ****   December 2012
   3:../src/drv/drv_spi.c **** 
   4:../src/drv/drv_spi.c ****   aq32Plus_F3 Rev -
   5:../src/drv/drv_spi.c **** 
   6:../src/drv/drv_spi.c ****   Copyright (c) 2012 John Ihlein.  All rights reserved.
   7:../src/drv/drv_spi.c **** 
   8:../src/drv/drv_spi.c ****   Open Source STM32 Based Multicopter Controller Software
   9:../src/drv/drv_spi.c **** 
  10:../src/drv/drv_spi.c ****   Includes code and/or ideas from:
  11:../src/drv/drv_spi.c **** 
  12:../src/drv/drv_spi.c ****   1)AeroQuad
  13:../src/drv/drv_spi.c ****   2)BaseFlight
  14:../src/drv/drv_spi.c ****   3)CH Robotics
  15:../src/drv/drv_spi.c ****   4)MultiWii
  16:../src/drv/drv_spi.c ****   5)S.O.H. Madgwick
  17:../src/drv/drv_spi.c ****   6)UAVX
  18:../src/drv/drv_spi.c ****   7)STM DiscoveryF3 demonstration software
  19:../src/drv/drv_spi.c **** 
  20:../src/drv/drv_spi.c ****   Designed to run on the DiscoveryF3 board
  21:../src/drv/drv_spi.c **** 
  22:../src/drv/drv_spi.c ****   This program is free software: you can redistribute it and/or modify
  23:../src/drv/drv_spi.c ****   it under the terms of the GNU General Public License as published by
  24:../src/drv/drv_spi.c ****   the Free Software Foundation, either version 3 of the License, or
  25:../src/drv/drv_spi.c ****   (at your option) any later version.
  26:../src/drv/drv_spi.c **** 
  27:../src/drv/drv_spi.c ****   This program is distributed in the hope that it will be useful,
  28:../src/drv/drv_spi.c ****   but WITHOUT ANY WARRANTY; without even the implied warranty of
  29:../src/drv/drv_spi.c ****   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  30:../src/drv/drv_spi.c ****   GNU General Public License for more details.
  31:../src/drv/drv_spi.c **** 
  32:../src/drv/drv_spi.c ****   You should have received a copy of the GNU General Public License
  33:../src/drv/drv_spi.c ****   along with this program. If not, see <http://www.gnu.org/licenses/>.
  34:../src/drv/drv_spi.c **** */
  35:../src/drv/drv_spi.c **** 
  36:../src/drv/drv_spi.c **** ///////////////////////////////////////////////////////////////////////////////
  37:../src/drv/drv_spi.c **** 
  38:../src/drv/drv_spi.c **** #include "board.h"
  39:../src/drv/drv_spi.c **** 
  40:../src/drv/drv_spi.c **** ///////////////////////////////////////////////////////////////////////////////
  41:../src/drv/drv_spi.c **** 
  42:../src/drv/drv_spi.c **** // SPI1
  43:../src/drv/drv_spi.c **** // SCK  PA5
  44:../src/drv/drv_spi.c **** // MISO PA6
  45:../src/drv/drv_spi.c **** // MOSI PA7
  46:../src/drv/drv_spi.c **** 
  47:../src/drv/drv_spi.c **** // SPI2
  48:../src/drv/drv_spi.c **** // SCK  PB13
  49:../src/drv/drv_spi.c **** // MISO PB14
  50:../src/drv/drv_spi.c **** // MOSI PB15
  51:../src/drv/drv_spi.c **** 
  52:../src/drv/drv_spi.c **** ///////////////////////////////////////////////////////////////////////////////
  53:../src/drv/drv_spi.c **** // SPI Defines and Variables
  54:../src/drv/drv_spi.c **** ///////////////////////////////////////////////////////////////////////////////
  55:../src/drv/drv_spi.c **** 
  56:../src/drv/drv_spi.c **** #define SPI1_GPIO             GPIOA
  57:../src/drv/drv_spi.c **** #define SPI1_SCK_PIN          GPIO_Pin_5
  58:../src/drv/drv_spi.c **** #define SPI1_SCK_PIN_SOURCE   GPIO_PinSource5
  59:../src/drv/drv_spi.c **** #define SPI1_SCK_CLK          RCC_AHBPeriph_GPIOA
  60:../src/drv/drv_spi.c **** #define SPI1_MISO_PIN         GPIO_Pin_6
  61:../src/drv/drv_spi.c **** #define SPI1_MISO_PIN_SOURCE  GPIO_PinSource6
  62:../src/drv/drv_spi.c **** #define SPI1_MISO_CLK         RCC_AHBPeriph_GPIOA
  63:../src/drv/drv_spi.c **** #define SPI1_MOSI_PIN         GPIO_Pin_7
  64:../src/drv/drv_spi.c **** #define SPI1_MOSI_PIN_SOURCE  GPIO_PinSource7
  65:../src/drv/drv_spi.c **** #define SPI1_MOSI_CLK         RCC_AHBPeriph_GPIOA
  66:../src/drv/drv_spi.c **** 
  67:../src/drv/drv_spi.c **** #define SPI2_GPIO             GPIOB
  68:../src/drv/drv_spi.c **** #define SPI2_SCK_PIN          GPIO_Pin_13
  69:../src/drv/drv_spi.c **** #define SPI2_SCK_PIN_SOURCE   GPIO_PinSource13
  70:../src/drv/drv_spi.c **** #define SPI2_SCK_CLK          RCC_AHBPeriph_GPIOB
  71:../src/drv/drv_spi.c **** #define SPI2_MISO_PIN         GPIO_Pin_14
  72:../src/drv/drv_spi.c **** #define SPI2_MISO_PIN_SOURCE  GPIO_PinSource14
  73:../src/drv/drv_spi.c **** #define SPI2_MISO_CLK         RCC_AHBPeriph_GPIOB
  74:../src/drv/drv_spi.c **** #define SPI2_MOSI_PIN         GPIO_Pin_15
  75:../src/drv/drv_spi.c **** #define SPI2_MOSI_PIN_SOURCE  GPIO_PinSource15
  76:../src/drv/drv_spi.c **** #define SPI2_MOSI_CLK         RCC_AHBPeriph_GPIOB
  77:../src/drv/drv_spi.c **** 
  78:../src/drv/drv_spi.c **** static volatile uint16_t spi1ErrorCount = 0;
  79:../src/drv/drv_spi.c **** static volatile uint16_t spi2ErrorCount = 0;
  80:../src/drv/drv_spi.c **** 
  81:../src/drv/drv_spi.c **** ///////////////////////////////////////////////////////////////////////////////
  82:../src/drv/drv_spi.c **** // SPI Initialize
  83:../src/drv/drv_spi.c **** ///////////////////////////////////////////////////////////////////////////////
  84:../src/drv/drv_spi.c **** 
  85:../src/drv/drv_spi.c **** void spiInit(SPI_TypeDef *SPIx)
  86:../src/drv/drv_spi.c **** {
  38              		.loc 1 86 0
  39              		.cfi_startproc
  40              		@ args = 0, pretend = 0, frame = 40
  41              		@ frame_needed = 0, uses_anonymous_args = 0
  42 0000 00B5     		push	{lr}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 4
  45              		.cfi_offset 14, -4
  46 0002 8BB0     		sub	sp, sp, #44
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 48
  49 0004 0190     		str	r0, [sp, #4]
  87:../src/drv/drv_spi.c ****     GPIO_InitTypeDef GPIO_InitStructure;
  88:../src/drv/drv_spi.c ****     SPI_InitTypeDef  SPI_InitStructure;
  89:../src/drv/drv_spi.c **** 
  90:../src/drv/drv_spi.c ****     ///////////////////////////////////
  91:../src/drv/drv_spi.c **** 
  92:../src/drv/drv_spi.c ****     if (SPIx == SPI1)
  50              		.loc 1 92 0
  51 0006 019A     		ldr	r2, [sp, #4]
  52 0008 4FF44053 		mov	r3, #12288
  53 000c C4F20103 		movt	r3, 16385
  54 0010 9A42     		cmp	r2, r3
  55 0012 40F0A880 		bne	.L2
  93:../src/drv/drv_spi.c ****     {
  94:../src/drv/drv_spi.c ****     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1, ENABLE);
  56              		.loc 1 94 0
  57 0016 4FF48050 		mov	r0, #4096
  58 001a 4FF00101 		mov	r1, #1
  59 001e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  95:../src/drv/drv_spi.c ****     	RCC_AHBPeriphClockCmd(SPI1_SCK_CLK | SPI1_MISO_CLK | SPI1_MOSI_CLK, ENABLE);
  60              		.loc 1 95 0
  61 0022 4FF40030 		mov	r0, #131072
  62 0026 4FF00101 		mov	r1, #1
  63 002a FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
  96:../src/drv/drv_spi.c **** 
  97:../src/drv/drv_spi.c ****     	GPIO_PinAFConfig(SPI1_GPIO, SPI1_SCK_PIN_SOURCE,  GPIO_AF_5);
  64              		.loc 1 97 0
  65 002e 4FF09040 		mov	r0, #1207959552
  66 0032 4FF00501 		mov	r1, #5
  67 0036 4FF00502 		mov	r2, #5
  68 003a FFF7FEFF 		bl	GPIO_PinAFConfig
  98:../src/drv/drv_spi.c **** 	    GPIO_PinAFConfig(SPI1_GPIO, SPI1_MISO_PIN_SOURCE, GPIO_AF_5);
  69              		.loc 1 98 0
  70 003e 4FF09040 		mov	r0, #1207959552
  71 0042 4FF00601 		mov	r1, #6
  72 0046 4FF00502 		mov	r2, #5
  73 004a FFF7FEFF 		bl	GPIO_PinAFConfig
  99:../src/drv/drv_spi.c **** 	    GPIO_PinAFConfig(SPI1_GPIO, SPI1_MOSI_PIN_SOURCE, GPIO_AF_5);
  74              		.loc 1 99 0
  75 004e 4FF09040 		mov	r0, #1207959552
  76 0052 4FF00701 		mov	r1, #7
  77 0056 4FF00502 		mov	r2, #5
  78 005a FFF7FEFF 		bl	GPIO_PinAFConfig
 100:../src/drv/drv_spi.c **** 
 101:../src/drv/drv_spi.c **** 	    // Init pins
 102:../src/drv/drv_spi.c ****         GPIO_InitStructure.GPIO_Pin   = SPI1_SCK_PIN | SPI1_MISO_PIN | SPI1_MOSI_PIN;
  79              		.loc 1 102 0
  80 005e 4FF0E003 		mov	r3, #224
  81 0062 0893     		str	r3, [sp, #32]
 103:../src/drv/drv_spi.c ****         GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AF;
  82              		.loc 1 103 0
  83 0064 4FF00203 		mov	r3, #2
  84 0068 8DF82430 		strb	r3, [sp, #36]
 104:../src/drv/drv_spi.c ****         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  85              		.loc 1 104 0
  86 006c 4FF00303 		mov	r3, #3
  87 0070 8DF82530 		strb	r3, [sp, #37]
 105:../src/drv/drv_spi.c ****         GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
  88              		.loc 1 105 0
  89 0074 4FF00003 		mov	r3, #0
  90 0078 8DF82630 		strb	r3, [sp, #38]
 106:../src/drv/drv_spi.c ****         GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_NOPULL;
  91              		.loc 1 106 0
  92 007c 4FF00003 		mov	r3, #0
  93 0080 8DF82730 		strb	r3, [sp, #39]
 107:../src/drv/drv_spi.c **** 
 108:../src/drv/drv_spi.c ****         GPIO_Init(SPI1_GPIO, &GPIO_InitStructure);
  94              		.loc 1 108 0
  95 0084 4FF09040 		mov	r0, #1207959552
  96 0088 08AB     		add	r3, sp, #32
  97 008a 1946     		mov	r1, r3
  98 008c FFF7FEFF 		bl	GPIO_Init
 109:../src/drv/drv_spi.c **** 
 110:../src/drv/drv_spi.c **** 	    RCC_AHBPeriphClockCmd(L3GD20_CS_GPIO_CLK, ENABLE);
  99              		.loc 1 110 0
 100 0090 4FF40010 		mov	r0, #2097152
 101 0094 4FF00101 		mov	r1, #1
 102 0098 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 111:../src/drv/drv_spi.c **** 
 112:../src/drv/drv_spi.c **** 	    GPIO_InitStructure.GPIO_Pin   = L3GD20_CS_PIN;
 103              		.loc 1 112 0
 104 009c 4FF00803 		mov	r3, #8
 105 00a0 0893     		str	r3, [sp, #32]
 113:../src/drv/drv_spi.c **** 		GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;
 106              		.loc 1 113 0
 107 00a2 4FF00103 		mov	r3, #1
 108 00a6 8DF82430 		strb	r3, [sp, #36]
 114:../src/drv/drv_spi.c **** 		GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 109              		.loc 1 114 0
 110 00aa 4FF00303 		mov	r3, #3
 111 00ae 8DF82530 		strb	r3, [sp, #37]
 115:../src/drv/drv_spi.c **** 		GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 112              		.loc 1 115 0
 113 00b2 4FF00003 		mov	r3, #0
 114 00b6 8DF82630 		strb	r3, [sp, #38]
 116:../src/drv/drv_spi.c **** 		GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_NOPULL;
 115              		.loc 1 116 0
 116 00ba 4FF00003 		mov	r3, #0
 117 00be 8DF82730 		strb	r3, [sp, #39]
 117:../src/drv/drv_spi.c **** 
 118:../src/drv/drv_spi.c **** 		GPIO_Init(L3GD20_CS_GPIO, &GPIO_InitStructure);
 118              		.loc 1 118 0
 119 00c2 4FF48050 		mov	r0, #4096
 120 00c6 C4F60000 		movt	r0, 18432
 121 00ca 08AB     		add	r3, sp, #32
 122 00cc 1946     		mov	r1, r3
 123 00ce FFF7FEFF 		bl	GPIO_Init
 119:../src/drv/drv_spi.c **** 
 120:../src/drv/drv_spi.c **** 		GPIO_SetBits(L3GD20_CS_GPIO, L3GD20_CS_PIN);
 124              		.loc 1 120 0
 125 00d2 4FF48050 		mov	r0, #4096
 126 00d6 C4F60000 		movt	r0, 18432
 127 00da 4FF00801 		mov	r1, #8
 128 00de FFF7FEFF 		bl	GPIO_SetBits
 121:../src/drv/drv_spi.c **** 
 122:../src/drv/drv_spi.c **** 		SPI_I2S_DeInit(SPI1);
 129              		.loc 1 122 0
 130 00e2 4FF44050 		mov	r0, #12288
 131 00e6 C4F20100 		movt	r0, 16385
 132 00ea FFF7FEFF 		bl	SPI_I2S_DeInit
 123:../src/drv/drv_spi.c **** 
 124:../src/drv/drv_spi.c ****         SPI_InitStructure.SPI_Direction         = SPI_Direction_2Lines_FullDuplex;
 133              		.loc 1 124 0
 134 00ee 4FF00003 		mov	r3, #0
 135 00f2 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 125:../src/drv/drv_spi.c ****         SPI_InitStructure.SPI_Mode              = SPI_Mode_Master;
 136              		.loc 1 125 0
 137 00f6 4FF48273 		mov	r3, #260
 138 00fa ADF80E30 		strh	r3, [sp, #14]	@ movhi
 126:../src/drv/drv_spi.c ****         SPI_InitStructure.SPI_DataSize          = SPI_DataSize_8b;
 139              		.loc 1 126 0
 140 00fe 4FF4E063 		mov	r3, #1792
 141 0102 ADF81030 		strh	r3, [sp, #16]	@ movhi
 127:../src/drv/drv_spi.c ****         SPI_InitStructure.SPI_CPOL              = SPI_CPOL_Low;
 142              		.loc 1 127 0
 143 0106 4FF00003 		mov	r3, #0
 144 010a ADF81230 		strh	r3, [sp, #18]	@ movhi
 128:../src/drv/drv_spi.c ****         SPI_InitStructure.SPI_CPHA              = SPI_CPHA_1Edge;
 145              		.loc 1 128 0
 146 010e 4FF00003 		mov	r3, #0
 147 0112 ADF81430 		strh	r3, [sp, #20]	@ movhi
 129:../src/drv/drv_spi.c ****         SPI_InitStructure.SPI_NSS               = SPI_NSS_Soft;
 148              		.loc 1 129 0
 149 0116 4FF40073 		mov	r3, #512
 150 011a ADF81630 		strh	r3, [sp, #22]	@ movhi
 130:../src/drv/drv_spi.c ****         SPI_InitStructure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_8;
 151              		.loc 1 130 0
 152 011e 4FF01003 		mov	r3, #16
 153 0122 ADF81830 		strh	r3, [sp, #24]	@ movhi
 131:../src/drv/drv_spi.c ****         SPI_InitStructure.SPI_FirstBit          = SPI_FirstBit_MSB;
 154              		.loc 1 131 0
 155 0126 4FF00003 		mov	r3, #0
 156 012a ADF81A30 		strh	r3, [sp, #26]	@ movhi
 132:../src/drv/drv_spi.c ****         SPI_InitStructure.SPI_CRCPolynomial     = 7;
 157              		.loc 1 132 0
 158 012e 4FF00703 		mov	r3, #7
 159 0132 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 133:../src/drv/drv_spi.c **** 
 134:../src/drv/drv_spi.c ****         SPI_Init(SPI1, &SPI_InitStructure);
 160              		.loc 1 134 0
 161 0136 4FF44050 		mov	r0, #12288
 162 013a C4F20100 		movt	r0, 16385
 163 013e 03AB     		add	r3, sp, #12
 164 0140 1946     		mov	r1, r3
 165 0142 FFF7FEFF 		bl	SPI_Init
 135:../src/drv/drv_spi.c **** 
 136:../src/drv/drv_spi.c ****         SPI_RxFIFOThresholdConfig(L3GD20_SPI, SPI_RxFIFOThreshold_QF);
 166              		.loc 1 136 0
 167 0146 4FF44050 		mov	r0, #12288
 168 014a C4F20100 		movt	r0, 16385
 169 014e 4FF48051 		mov	r1, #4096
 170 0152 FFF7FEFF 		bl	SPI_RxFIFOThresholdConfig
 137:../src/drv/drv_spi.c **** 
 138:../src/drv/drv_spi.c ****         SPI_Cmd(SPI1, ENABLE);
 171              		.loc 1 138 0
 172 0156 4FF44050 		mov	r0, #12288
 173 015a C4F20100 		movt	r0, 16385
 174 015e 4FF00101 		mov	r1, #1
 175 0162 FFF7FEFF 		bl	SPI_Cmd
 176              	.L2:
 139:../src/drv/drv_spi.c ****     }
 140:../src/drv/drv_spi.c **** 
 141:../src/drv/drv_spi.c ****     ///////////////////////////////////
 142:../src/drv/drv_spi.c **** 
 143:../src/drv/drv_spi.c ****     if (SPIx == SPI2)
 177              		.loc 1 143 0
 178 0166 019A     		ldr	r2, [sp, #4]
 179 0168 4FF46053 		mov	r3, #14336
 180 016c C4F20003 		movt	r3, 16384
 181 0170 9A42     		cmp	r2, r3
 182 0172 44D1     		bne	.L1
 144:../src/drv/drv_spi.c ****     {
 145:../src/drv/drv_spi.c ****     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI2, ENABLE);
 183              		.loc 1 145 0
 184 0174 4FF48040 		mov	r0, #16384
 185 0178 4FF00101 		mov	r1, #1
 186 017c FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 146:../src/drv/drv_spi.c ****     	RCC_AHBPeriphClockCmd(SPI2_SCK_CLK | SPI2_MISO_CLK | SPI2_MOSI_CLK, ENABLE);
 187              		.loc 1 146 0
 188 0180 4FF48020 		mov	r0, #262144
 189 0184 4FF00101 		mov	r1, #1
 190 0188 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 147:../src/drv/drv_spi.c **** 
 148:../src/drv/drv_spi.c ****         GPIO_PinAFConfig(SPI2_GPIO, SPI2_SCK_PIN_SOURCE,  GPIO_AF_6);
 191              		.loc 1 148 0
 192 018c 4FF48060 		mov	r0, #1024
 193 0190 C4F60000 		movt	r0, 18432
 194 0194 4FF00D01 		mov	r1, #13
 195 0198 4FF00602 		mov	r2, #6
 196 019c FFF7FEFF 		bl	GPIO_PinAFConfig
 149:../src/drv/drv_spi.c **** 	    GPIO_PinAFConfig(SPI2_GPIO, SPI2_MISO_PIN_SOURCE, GPIO_AF_6);
 197              		.loc 1 149 0
 198 01a0 4FF48060 		mov	r0, #1024
 199 01a4 C4F60000 		movt	r0, 18432
 200 01a8 4FF00E01 		mov	r1, #14
 201 01ac 4FF00602 		mov	r2, #6
 202 01b0 FFF7FEFF 		bl	GPIO_PinAFConfig
 150:../src/drv/drv_spi.c **** 	    GPIO_PinAFConfig(SPI2_GPIO, SPI2_MOSI_PIN_SOURCE, GPIO_AF_6);
 203              		.loc 1 150 0
 204 01b4 4FF48060 		mov	r0, #1024
 205 01b8 C4F60000 		movt	r0, 18432
 206 01bc 4FF00F01 		mov	r1, #15
 207 01c0 4FF00602 		mov	r2, #6
 208 01c4 FFF7FEFF 		bl	GPIO_PinAFConfig
 151:../src/drv/drv_spi.c **** 
 152:../src/drv/drv_spi.c **** 	    // Init pins
 153:../src/drv/drv_spi.c ****         GPIO_InitStructure.GPIO_Pin   = SPI2_SCK_PIN | SPI2_MISO_PIN | SPI2_MOSI_PIN;
 209              		.loc 1 153 0
 210 01c8 4FF46043 		mov	r3, #57344
 211 01cc 0893     		str	r3, [sp, #32]
 154:../src/drv/drv_spi.c ****         GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AF;
 212              		.loc 1 154 0
 213 01ce 4FF00203 		mov	r3, #2
 214 01d2 8DF82430 		strb	r3, [sp, #36]
 155:../src/drv/drv_spi.c ****         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 215              		.loc 1 155 0
 216 01d6 4FF00303 		mov	r3, #3
 217 01da 8DF82530 		strb	r3, [sp, #37]
 156:../src/drv/drv_spi.c ****         GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 218              		.loc 1 156 0
 219 01de 4FF00003 		mov	r3, #0
 220 01e2 8DF82630 		strb	r3, [sp, #38]
 157:../src/drv/drv_spi.c ****         GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_NOPULL;
 221              		.loc 1 157 0
 222 01e6 4FF00003 		mov	r3, #0
 223 01ea 8DF82730 		strb	r3, [sp, #39]
 158:../src/drv/drv_spi.c **** 
 159:../src/drv/drv_spi.c ****         GPIO_Init(SPI2_GPIO, &GPIO_InitStructure);
 224              		.loc 1 159 0
 225 01ee 4FF48060 		mov	r0, #1024
 226 01f2 C4F60000 		movt	r0, 18432
 227 01f6 08AB     		add	r3, sp, #32
 228 01f8 1946     		mov	r1, r3
 229 01fa FFF7FEFF 		bl	GPIO_Init
 230              	.L1:
 160:../src/drv/drv_spi.c ****     }
 161:../src/drv/drv_spi.c **** 
 162:../src/drv/drv_spi.c ****     ///////////////////////////////////
 163:../src/drv/drv_spi.c **** }
 231              		.loc 1 163 0
 232 01fe 0BB0     		add	sp, sp, #44
 233 0200 00BD     		pop	{pc}
 234              		.cfi_endproc
 235              	.LFE111:
 237 0202 00BF     		.align	2
 238              		.global	spiTimeoutUserCallback
 239              		.thumb
 240              		.thumb_func
 242              	spiTimeoutUserCallback:
 243              	.LFB112:
 164:../src/drv/drv_spi.c **** 
 165:../src/drv/drv_spi.c **** ///////////////////////////////////////////////////////////////////////////////
 166:../src/drv/drv_spi.c **** // SPI Timeout Callback
 167:../src/drv/drv_spi.c **** ///////////////////////////////////////////////////////////////////////////////
 168:../src/drv/drv_spi.c **** 
 169:../src/drv/drv_spi.c **** uint32_t spiTimeoutUserCallback(SPI_TypeDef *SPIx)
 170:../src/drv/drv_spi.c **** {
 244              		.loc 1 170 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 8
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248 0204 00B5     		push	{lr}
 249              	.LCFI2:
 250              		.cfi_def_cfa_offset 4
 251              		.cfi_offset 14, -4
 252 0206 83B0     		sub	sp, sp, #12
 253              	.LCFI3:
 254              		.cfi_def_cfa_offset 16
 255 0208 0190     		str	r0, [sp, #4]
 171:../src/drv/drv_spi.c **** 	GPIO_SetBits(RED_N_LED_GPIO, RED_N_LED_PIN);
 256              		.loc 1 171 0
 257 020a 4FF48050 		mov	r0, #4096
 258 020e C4F60000 		movt	r0, 18432
 259 0212 4FF40071 		mov	r1, #512
 260 0216 FFF7FEFF 		bl	GPIO_SetBits
 172:../src/drv/drv_spi.c **** 
 173:../src/drv/drv_spi.c **** 	if (SPIx == SPI1)
 261              		.loc 1 173 0
 262 021a 019A     		ldr	r2, [sp, #4]
 263 021c 4FF44053 		mov	r3, #12288
 264 0220 C4F20103 		movt	r3, 16385
 265 0224 9A42     		cmp	r2, r3
 266 0226 14D1     		bne	.L5
 174:../src/drv/drv_spi.c **** 	{
 175:../src/drv/drv_spi.c **** 		spi1ErrorCount++;
 267              		.loc 1 175 0
 268 0228 40F20003 		movw	r3, #:lower16:spi1ErrorCount
 269 022c C0F20003 		movt	r3, #:upper16:spi1ErrorCount
 270 0230 1B88     		ldrh	r3, [r3, #0]	@ movhi
 271 0232 9BB2     		uxth	r3, r3
 272 0234 03F10103 		add	r3, r3, #1
 273 0238 9AB2     		uxth	r2, r3
 274 023a 40F20003 		movw	r3, #:lower16:spi1ErrorCount
 275 023e C0F20003 		movt	r3, #:upper16:spi1ErrorCount
 276 0242 1A80     		strh	r2, [r3, #0]	@ movhi
 176:../src/drv/drv_spi.c **** 		return spi1ErrorCount;
 277              		.loc 1 176 0
 278 0244 40F20003 		movw	r3, #:lower16:spi1ErrorCount
 279 0248 C0F20003 		movt	r3, #:upper16:spi1ErrorCount
 280 024c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 281 024e 9BB2     		uxth	r3, r3
 282 0250 13E0     		b	.L6
 283              	.L5:
 177:../src/drv/drv_spi.c **** 	}
 178:../src/drv/drv_spi.c **** 	else
 179:../src/drv/drv_spi.c **** 	{
 180:../src/drv/drv_spi.c **** 		spi2ErrorCount++;
 284              		.loc 1 180 0
 285 0252 40F20003 		movw	r3, #:lower16:spi2ErrorCount
 286 0256 C0F20003 		movt	r3, #:upper16:spi2ErrorCount
 287 025a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 288 025c 9BB2     		uxth	r3, r3
 289 025e 03F10103 		add	r3, r3, #1
 290 0262 9AB2     		uxth	r2, r3
 291 0264 40F20003 		movw	r3, #:lower16:spi2ErrorCount
 292 0268 C0F20003 		movt	r3, #:upper16:spi2ErrorCount
 293 026c 1A80     		strh	r2, [r3, #0]	@ movhi
 181:../src/drv/drv_spi.c **** 		return spi2ErrorCount;
 294              		.loc 1 181 0
 295 026e 40F20003 		movw	r3, #:lower16:spi2ErrorCount
 296 0272 C0F20003 		movt	r3, #:upper16:spi2ErrorCount
 297 0276 1B88     		ldrh	r3, [r3, #0]	@ movhi
 298 0278 9BB2     		uxth	r3, r3
 299              	.L6:
 182:../src/drv/drv_spi.c **** 	}
 183:../src/drv/drv_spi.c **** }
 300              		.loc 1 183 0
 301 027a 1846     		mov	r0, r3
 302 027c 03B0     		add	sp, sp, #12
 303 027e 00BD     		pop	{pc}
 304              		.cfi_endproc
 305              	.LFE112:
 307              		.align	2
 308              		.global	spiTransfer
 309              		.thumb
 310              		.thumb_func
 312              	spiTransfer:
 313              	.LFB113:
 184:../src/drv/drv_spi.c **** 
 185:../src/drv/drv_spi.c **** ///////////////////////////////////////////////////////////////////////////////
 186:../src/drv/drv_spi.c **** // SPI Transfer
 187:../src/drv/drv_spi.c **** ///////////////////////////////////////////////////////////////////////////////
 188:../src/drv/drv_spi.c **** 
 189:../src/drv/drv_spi.c **** uint8_t spiTransfer(SPI_TypeDef *SPIx, uint8_t data)
 190:../src/drv/drv_spi.c **** {
 314              		.loc 1 190 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 16
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318 0280 00B5     		push	{lr}
 319              	.LCFI4:
 320              		.cfi_def_cfa_offset 4
 321              		.cfi_offset 14, -4
 322 0282 85B0     		sub	sp, sp, #20
 323              	.LCFI5:
 324              		.cfi_def_cfa_offset 24
 325 0284 0190     		str	r0, [sp, #4]
 326 0286 0B46     		mov	r3, r1
 327 0288 8DF80330 		strb	r3, [sp, #3]
 191:../src/drv/drv_spi.c ****     uint16_t spiTimeout;
 192:../src/drv/drv_spi.c **** 
 193:../src/drv/drv_spi.c ****     spiTimeout = 0x1000;
 328              		.loc 1 193 0
 329 028c 4FF48053 		mov	r3, #4096
 330 0290 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 194:../src/drv/drv_spi.c ****     while (SPI_I2S_GetFlagStatus(SPIx, SPI_I2S_FLAG_TXE) == RESET)
 331              		.loc 1 194 0
 332 0294 14E0     		b	.L8
 333              	.L10:
 195:../src/drv/drv_spi.c ****       if ((spiTimeout--) == 0) return spiTimeoutUserCallback(SPIx);
 334              		.loc 1 195 0
 335 0296 BDF80E30 		ldrh	r3, [sp, #14]
 336 029a 002B     		cmp	r3, #0
 337 029c 14BF     		ite	ne
 338 029e 0023     		movne	r3, #0
 339 02a0 0123     		moveq	r3, #1
 340 02a2 DBB2     		uxtb	r3, r3
 341 02a4 BDF80E20 		ldrh	r2, [sp, #14]	@ movhi
 342 02a8 02F1FF32 		add	r2, r2, #-1
 343 02ac ADF80E20 		strh	r2, [sp, #14]	@ movhi
 344 02b0 002B     		cmp	r3, #0
 345 02b2 05D0     		beq	.L8
 346              		.loc 1 195 0 is_stmt 0 discriminator 1
 347 02b4 0198     		ldr	r0, [sp, #4]
 348 02b6 FFF7FEFF 		bl	spiTimeoutUserCallback
 349 02ba 0346     		mov	r3, r0
 350 02bc DBB2     		uxtb	r3, r3
 351 02be 33E0     		b	.L9
 352              	.L8:
 194:../src/drv/drv_spi.c ****     while (SPI_I2S_GetFlagStatus(SPIx, SPI_I2S_FLAG_TXE) == RESET)
 353              		.loc 1 194 0 is_stmt 1 discriminator 1
 354 02c0 0198     		ldr	r0, [sp, #4]
 355 02c2 4FF00201 		mov	r1, #2
 356 02c6 FFF7FEFF 		bl	SPI_I2S_GetFlagStatus
 357 02ca 0346     		mov	r3, r0
 358 02cc 002B     		cmp	r3, #0
 359 02ce E2D0     		beq	.L10
 196:../src/drv/drv_spi.c **** 
 197:../src/drv/drv_spi.c ****     SPI_SendData8(SPIx, data);
 360              		.loc 1 197 0
 361 02d0 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 362 02d4 0198     		ldr	r0, [sp, #4]
 363 02d6 1946     		mov	r1, r3
 364 02d8 FFF7FEFF 		bl	SPI_SendData8
 198:../src/drv/drv_spi.c **** 
 199:../src/drv/drv_spi.c ****     spiTimeout = 0x1000;
 365              		.loc 1 199 0
 366 02dc 4FF48053 		mov	r3, #4096
 367 02e0 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 200:../src/drv/drv_spi.c ****     while (SPI_I2S_GetFlagStatus(SPIx, SPI_I2S_FLAG_RXNE) == RESET)
 368              		.loc 1 200 0
 369 02e4 14E0     		b	.L11
 370              	.L12:
 201:../src/drv/drv_spi.c ****       if ((spiTimeout--) == 0) return spiTimeoutUserCallback(SPIx);
 371              		.loc 1 201 0
 372 02e6 BDF80E30 		ldrh	r3, [sp, #14]
 373 02ea 002B     		cmp	r3, #0
 374 02ec 14BF     		ite	ne
 375 02ee 0023     		movne	r3, #0
 376 02f0 0123     		moveq	r3, #1
 377 02f2 DBB2     		uxtb	r3, r3
 378 02f4 BDF80E20 		ldrh	r2, [sp, #14]	@ movhi
 379 02f8 02F1FF32 		add	r2, r2, #-1
 380 02fc ADF80E20 		strh	r2, [sp, #14]	@ movhi
 381 0300 002B     		cmp	r3, #0
 382 0302 05D0     		beq	.L11
 383              		.loc 1 201 0 is_stmt 0 discriminator 1
 384 0304 0198     		ldr	r0, [sp, #4]
 385 0306 FFF7FEFF 		bl	spiTimeoutUserCallback
 386 030a 0346     		mov	r3, r0
 387 030c DBB2     		uxtb	r3, r3
 388 030e 0BE0     		b	.L9
 389              	.L11:
 200:../src/drv/drv_spi.c ****     while (SPI_I2S_GetFlagStatus(SPIx, SPI_I2S_FLAG_RXNE) == RESET)
 390              		.loc 1 200 0 is_stmt 1 discriminator 1
 391 0310 0198     		ldr	r0, [sp, #4]
 392 0312 4FF00101 		mov	r1, #1
 393 0316 FFF7FEFF 		bl	SPI_I2S_GetFlagStatus
 394 031a 0346     		mov	r3, r0
 395 031c 002B     		cmp	r3, #0
 396 031e E2D0     		beq	.L12
 202:../src/drv/drv_spi.c **** 
 203:../src/drv/drv_spi.c ****     return((uint8_t)SPI_ReceiveData8(SPIx));
 397              		.loc 1 203 0
 398 0320 0198     		ldr	r0, [sp, #4]
 399 0322 FFF7FEFF 		bl	SPI_ReceiveData8
 400 0326 0346     		mov	r3, r0
 401              	.L9:
 204:../src/drv/drv_spi.c **** }
 402              		.loc 1 204 0
 403 0328 1846     		mov	r0, r3
 404 032a 05B0     		add	sp, sp, #20
 405 032c 00BD     		pop	{pc}
 406              		.cfi_endproc
 407              	.LFE113:
 409 032e 00BF     		.align	2
 410              		.global	setSPIdivisor
 411              		.thumb
 412              		.thumb_func
 414              	setSPIdivisor:
 415              	.LFB114:
 205:../src/drv/drv_spi.c **** 
 206:../src/drv/drv_spi.c **** ///////////////////////////////////////////////////////////////////////////////
 207:../src/drv/drv_spi.c **** // Set SPI Divisor
 208:../src/drv/drv_spi.c **** ///////////////////////////////////////////////////////////////////////////////
 209:../src/drv/drv_spi.c **** 
 210:../src/drv/drv_spi.c **** void setSPIdivisor(SPI_TypeDef *SPIx, uint16_t data)
 211:../src/drv/drv_spi.c **** {
 416              		.loc 1 211 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 16
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420 0330 00B5     		push	{lr}
 421              	.LCFI6:
 422              		.cfi_def_cfa_offset 4
 423              		.cfi_offset 14, -4
 424 0332 85B0     		sub	sp, sp, #20
 425              	.LCFI7:
 426              		.cfi_def_cfa_offset 24
 427 0334 0190     		str	r0, [sp, #4]
 428 0336 0B46     		mov	r3, r1
 429 0338 ADF80230 		strh	r3, [sp, #2]	@ movhi
 212:../src/drv/drv_spi.c ****     #define BR_CLEAR_MASK 0xFFC7
 213:../src/drv/drv_spi.c **** 
 214:../src/drv/drv_spi.c **** 	uint16_t tempRegister;
 215:../src/drv/drv_spi.c **** 
 216:../src/drv/drv_spi.c ****     SPI_Cmd(SPIx, DISABLE);
 430              		.loc 1 216 0
 431 033c 0198     		ldr	r0, [sp, #4]
 432 033e 4FF00001 		mov	r1, #0
 433 0342 FFF7FEFF 		bl	SPI_Cmd
 217:../src/drv/drv_spi.c **** 
 218:../src/drv/drv_spi.c **** 	tempRegister = SPIx->CR1;
 434              		.loc 1 218 0
 435 0346 019B     		ldr	r3, [sp, #4]
 436 0348 1B88     		ldrh	r3, [r3, #0]	@ movhi
 437 034a ADF80E30 		strh	r3, [sp, #14]	@ movhi
 219:../src/drv/drv_spi.c **** 
 220:../src/drv/drv_spi.c **** 	switch (data)
 438              		.loc 1 220 0
 439 034e BDF80230 		ldrh	r3, [sp, #2]
 440 0352 102B     		cmp	r3, #16
 441 0354 36D0     		beq	.L18
 442 0356 102B     		cmp	r3, #16
 443 0358 06DC     		bgt	.L23
 444 035a 042B     		cmp	r3, #4
 445 035c 18D0     		beq	.L16
 446 035e 082B     		cmp	r3, #8
 447 0360 23D0     		beq	.L17
 448 0362 022B     		cmp	r3, #2
 449 0364 0DD0     		beq	.L15
 450 0366 6EE0     		b	.L14
 451              	.L23:
 452 0368 402B     		cmp	r3, #64
 453 036a 45D0     		beq	.L20
 454 036c 402B     		cmp	r3, #64
 455 036e 02DC     		bgt	.L24
 456 0370 202B     		cmp	r3, #32
 457 0372 34D0     		beq	.L19
 458 0374 67E0     		b	.L14
 459              	.L24:
 460 0376 802B     		cmp	r3, #128
 461 0378 4BD0     		beq	.L21
 462 037a B3F5807F 		cmp	r3, #256
 463 037e 55D0     		beq	.L22
 464 0380 61E0     		b	.L14
 465              	.L15:
 221:../src/drv/drv_spi.c **** 	{
 222:../src/drv/drv_spi.c **** 	case 2:
 223:../src/drv/drv_spi.c **** 		tempRegister &= BR_CLEAR_MASK;
 466              		.loc 1 223 0
 467 0382 BDF80E30 		ldrh	r3, [sp, #14]	@ movhi
 468 0386 23F03803 		bic	r3, r3, #56
 469 038a ADF80E30 		strh	r3, [sp, #14]	@ movhi
 224:../src/drv/drv_spi.c **** 	    tempRegister |= SPI_BaudRatePrescaler_2;
 225:../src/drv/drv_spi.c **** 	    break;
 470              		.loc 1 225 0
 471 038e 5AE0     		b	.L14
 472              	.L16:
 226:../src/drv/drv_spi.c **** 
 227:../src/drv/drv_spi.c **** 	case 4:
 228:../src/drv/drv_spi.c **** 		tempRegister &= BR_CLEAR_MASK;
 473              		.loc 1 228 0
 474 0390 BDF80E30 		ldrh	r3, [sp, #14]	@ movhi
 475 0394 23F03803 		bic	r3, r3, #56
 476 0398 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 229:../src/drv/drv_spi.c **** 	    tempRegister |= SPI_BaudRatePrescaler_4;
 477              		.loc 1 229 0
 478 039c BDF80E30 		ldrh	r3, [sp, #14]	@ movhi
 479 03a0 43F00803 		orr	r3, r3, #8
 480 03a4 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 230:../src/drv/drv_spi.c **** 	    break;
 481              		.loc 1 230 0
 482 03a8 4DE0     		b	.L14
 483              	.L17:
 231:../src/drv/drv_spi.c **** 
 232:../src/drv/drv_spi.c **** 	case 8:
 233:../src/drv/drv_spi.c **** 		tempRegister &= BR_CLEAR_MASK;
 484              		.loc 1 233 0
 485 03aa BDF80E30 		ldrh	r3, [sp, #14]	@ movhi
 486 03ae 23F03803 		bic	r3, r3, #56
 487 03b2 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 234:../src/drv/drv_spi.c **** 	    tempRegister |= SPI_BaudRatePrescaler_8;
 488              		.loc 1 234 0
 489 03b6 BDF80E30 		ldrh	r3, [sp, #14]	@ movhi
 490 03ba 43F01003 		orr	r3, r3, #16
 491 03be ADF80E30 		strh	r3, [sp, #14]	@ movhi
 235:../src/drv/drv_spi.c **** 	    break;
 492              		.loc 1 235 0
 493 03c2 40E0     		b	.L14
 494              	.L18:
 236:../src/drv/drv_spi.c **** 
 237:../src/drv/drv_spi.c **** 	case 16:
 238:../src/drv/drv_spi.c **** 		tempRegister &= BR_CLEAR_MASK;
 495              		.loc 1 238 0
 496 03c4 BDF80E30 		ldrh	r3, [sp, #14]	@ movhi
 497 03c8 23F03803 		bic	r3, r3, #56
 498 03cc ADF80E30 		strh	r3, [sp, #14]	@ movhi
 239:../src/drv/drv_spi.c **** 	    tempRegister |= SPI_BaudRatePrescaler_16;
 499              		.loc 1 239 0
 500 03d0 BDF80E30 		ldrh	r3, [sp, #14]	@ movhi
 501 03d4 43F01803 		orr	r3, r3, #24
 502 03d8 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 240:../src/drv/drv_spi.c **** 	    break;
 503              		.loc 1 240 0
 504 03dc 33E0     		b	.L14
 505              	.L19:
 241:../src/drv/drv_spi.c **** 
 242:../src/drv/drv_spi.c **** 	case 32:
 243:../src/drv/drv_spi.c **** 		tempRegister &= BR_CLEAR_MASK;
 506              		.loc 1 243 0
 507 03de BDF80E30 		ldrh	r3, [sp, #14]	@ movhi
 508 03e2 23F03803 		bic	r3, r3, #56
 509 03e6 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 244:../src/drv/drv_spi.c **** 	    tempRegister |= SPI_BaudRatePrescaler_32;
 510              		.loc 1 244 0
 511 03ea BDF80E30 		ldrh	r3, [sp, #14]	@ movhi
 512 03ee 43F02003 		orr	r3, r3, #32
 513 03f2 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 245:../src/drv/drv_spi.c **** 	    break;
 514              		.loc 1 245 0
 515 03f6 26E0     		b	.L14
 516              	.L20:
 246:../src/drv/drv_spi.c **** 
 247:../src/drv/drv_spi.c **** 	case 64:
 248:../src/drv/drv_spi.c **** 		tempRegister &= BR_CLEAR_MASK;
 517              		.loc 1 248 0
 518 03f8 BDF80E30 		ldrh	r3, [sp, #14]	@ movhi
 519 03fc 23F03803 		bic	r3, r3, #56
 520 0400 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 249:../src/drv/drv_spi.c **** 	    tempRegister |= SPI_BaudRatePrescaler_64;
 521              		.loc 1 249 0
 522 0404 BDF80E30 		ldrh	r3, [sp, #14]	@ movhi
 523 0408 43F02803 		orr	r3, r3, #40
 524 040c ADF80E30 		strh	r3, [sp, #14]	@ movhi
 250:../src/drv/drv_spi.c **** 	    break;
 525              		.loc 1 250 0
 526 0410 19E0     		b	.L14
 527              	.L21:
 251:../src/drv/drv_spi.c **** 
 252:../src/drv/drv_spi.c **** 	case 128:
 253:../src/drv/drv_spi.c **** 		tempRegister &= BR_CLEAR_MASK;
 528              		.loc 1 253 0
 529 0412 BDF80E30 		ldrh	r3, [sp, #14]	@ movhi
 530 0416 23F03803 		bic	r3, r3, #56
 531 041a ADF80E30 		strh	r3, [sp, #14]	@ movhi
 254:../src/drv/drv_spi.c **** 	    tempRegister |= SPI_BaudRatePrescaler_128;
 532              		.loc 1 254 0
 533 041e BDF80E30 		ldrh	r3, [sp, #14]	@ movhi
 534 0422 43F03003 		orr	r3, r3, #48
 535 0426 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 255:../src/drv/drv_spi.c **** 	    break;
 536              		.loc 1 255 0
 537 042a 0CE0     		b	.L14
 538              	.L22:
 256:../src/drv/drv_spi.c **** 
 257:../src/drv/drv_spi.c **** 	case 256:
 258:../src/drv/drv_spi.c **** 		tempRegister &= BR_CLEAR_MASK;
 539              		.loc 1 258 0
 540 042c BDF80E30 		ldrh	r3, [sp, #14]	@ movhi
 541 0430 23F03803 		bic	r3, r3, #56
 542 0434 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 259:../src/drv/drv_spi.c **** 	    tempRegister |= SPI_BaudRatePrescaler_256;
 543              		.loc 1 259 0
 544 0438 BDF80E30 		ldrh	r3, [sp, #14]	@ movhi
 545 043c 43F03803 		orr	r3, r3, #56
 546 0440 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 260:../src/drv/drv_spi.c **** 	    break;
 547              		.loc 1 260 0
 548 0444 00BF     		nop
 549              	.L14:
 261:../src/drv/drv_spi.c **** 	}
 262:../src/drv/drv_spi.c **** 
 263:../src/drv/drv_spi.c **** 	SPIx->CR1 = tempRegister;
 550              		.loc 1 263 0
 551 0446 019B     		ldr	r3, [sp, #4]
 552 0448 BDF80E20 		ldrh	r2, [sp, #14]	@ movhi
 553 044c 1A80     		strh	r2, [r3, #0]	@ movhi
 264:../src/drv/drv_spi.c **** 
 265:../src/drv/drv_spi.c **** 	SPI_Cmd(SPIx, ENABLE);
 554              		.loc 1 265 0
 555 044e 0198     		ldr	r0, [sp, #4]
 556 0450 4FF00101 		mov	r1, #1
 557 0454 FFF7FEFF 		bl	SPI_Cmd
 266:../src/drv/drv_spi.c **** }
 558              		.loc 1 266 0
 559 0458 05B0     		add	sp, sp, #20
 560 045a 00BD     		pop	{pc}
 561              		.cfi_endproc
 562              	.LFE114:
 564              		.align	2
 565              		.global	spiGetErrorCounter
 566              		.thumb
 567              		.thumb_func
 569              	spiGetErrorCounter:
 570              	.LFB115:
 267:../src/drv/drv_spi.c **** 
 268:../src/drv/drv_spi.c **** ///////////////////////////////////////////////////////////////////////////////
 269:../src/drv/drv_spi.c **** // Get SPI Error Count
 270:../src/drv/drv_spi.c **** ///////////////////////////////////////////////////////////////////////////////
 271:../src/drv/drv_spi.c **** 
 272:../src/drv/drv_spi.c **** uint16_t spiGetErrorCounter(SPI_TypeDef *SPIx)
 273:../src/drv/drv_spi.c **** {
 571              		.loc 1 273 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 8
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575              		@ link register save eliminated.
 576 045c 82B0     		sub	sp, sp, #8
 577              	.LCFI8:
 578              		.cfi_def_cfa_offset 8
 579 045e 0190     		str	r0, [sp, #4]
 274:../src/drv/drv_spi.c ****     if (SPIx == SPI1)
 580              		.loc 1 274 0
 581 0460 019A     		ldr	r2, [sp, #4]
 582 0462 4FF44053 		mov	r3, #12288
 583 0466 C4F20103 		movt	r3, 16385
 584 046a 9A42     		cmp	r2, r3
 585 046c 06D1     		bne	.L26
 275:../src/drv/drv_spi.c ****     	return spi1ErrorCount;
 586              		.loc 1 275 0
 587 046e 40F20003 		movw	r3, #:lower16:spi1ErrorCount
 588 0472 C0F20003 		movt	r3, #:upper16:spi1ErrorCount
 589 0476 1B88     		ldrh	r3, [r3, #0]	@ movhi
 590 0478 9BB2     		uxth	r3, r3
 591 047a 05E0     		b	.L27
 592              	.L26:
 276:../src/drv/drv_spi.c ****     else
 277:../src/drv/drv_spi.c ****         return spi2ErrorCount;
 593              		.loc 1 277 0
 594 047c 40F20003 		movw	r3, #:lower16:spi2ErrorCount
 595 0480 C0F20003 		movt	r3, #:upper16:spi2ErrorCount
 596 0484 1B88     		ldrh	r3, [r3, #0]	@ movhi
 597 0486 9BB2     		uxth	r3, r3
 598              	.L27:
 278:../src/drv/drv_spi.c **** }
 599              		.loc 1 278 0
 600 0488 1846     		mov	r0, r3
 601 048a 02B0     		add	sp, sp, #8
 602 048c 7047     		bx	lr
 603              		.cfi_endproc
 604              	.LFE115:
 606              	.Letext0:
 607              		.file 2 "c:\\program files\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/gcc/ar
 608              		.file 3 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\Device\\
 609              		.file 4 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\STM32F30
 610              		.file 5 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\STM32F30
 611              		.file 6 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src\\gps/gpsMediaTe
 612              		.file 7 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src\\gps/gpsNMEA.h"
 613              		.file 8 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src\\gps/gpsUblox.h
 614              		.file 9 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\CMSIS\\I
DEFINED SYMBOLS
                            *ABS*:00000000 drv_spi.c
                            *COM*:00000001 mtk19ProcessDataState
                            *COM*:00000001 nmeaProcessDataState
                            *COM*:00000001 ubloxProcessDataState
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc8sPkZi.s:23     .bss:00000000 $d
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc8sPkZi.s:24     .bss:00000000 spi1ErrorCount
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc8sPkZi.s:27     .bss:00000002 spi2ErrorCount
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc8sPkZi.s:30     .text:00000000 $t
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc8sPkZi.s:35     .text:00000000 spiInit
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc8sPkZi.s:242    .text:00000204 spiTimeoutUserCallback
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc8sPkZi.s:312    .text:00000280 spiTransfer
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc8sPkZi.s:414    .text:00000330 setSPIdivisor
D:\DOCUME~1\e722209\LOCALS~1\Temp\cc8sPkZi.s:569    .text:0000045c spiGetErrorCounter
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphClockCmd
RCC_AHBPeriphClockCmd
GPIO_PinAFConfig
GPIO_Init
GPIO_SetBits
SPI_I2S_DeInit
SPI_Init
SPI_RxFIFOThresholdConfig
SPI_Cmd
RCC_APB1PeriphClockCmd
SPI_I2S_GetFlagStatus
SPI_SendData8
SPI_ReceiveData8

   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"gps.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	mtk19ProcessDataState,1,1
  20              		.comm	nmeaProcessDataState,1,1
  21              		.comm	ubloxProcessDataState,1,1
  22              		.section	.rodata
  23              		.align	2
  26              	ubx5Hz:
  27 0000 B5       		.byte	-75
  28 0001 62       		.byte	98
  29 0002 06       		.byte	6
  30 0003 08       		.byte	8
  31 0004 06       		.byte	6
  32 0005 00       		.byte	0
  33 0006 C8       		.byte	-56
  34 0007 00       		.byte	0
  35 0008 01       		.byte	1
  36 0009 00       		.byte	0
  37 000a 01       		.byte	1
  38 000b 00       		.byte	0
  39 000c DE       		.byte	-34
  40 000d 6A       		.byte	106
  41 000e 0000     		.align	2
  42              	.LC0:
  43 0010 24504743 		.ascii	"$PGCMD,16,0,0,0,0,0*6A\015\012\000"
  43      4D442C31 
  43      362C302C 
  43      302C302C 
  43      302C302A 
  44 0029 000000   		.align	2
  45              	.LC1:
  46 002c 24504D54 		.ascii	"$PMTK220,200*2C\015\012\000"
  46      4B323230 
  46      2C323030 
  46      2A32430D 
  46      0A00
  47 003e 0000     		.align	2
  48              	.LC2:
  49 0040 24504D54 		.ascii	"$PMTK313,1*2E\015\012\000"
  49      4B333133 
  49      2C312A32 
  49      450D0A00 
  50              		.align	2
  51              	.LC3:
  52 0050 24504D54 		.ascii	"$PMTK301,2*2E\015\012\000"
  52      4B333031 
  52      2C322A32 
  52      450D0A00 
  53              		.align	2
  54              	.LC4:
  55 0060 24504D54 		.ascii	"$PMTK397,0*23\015\012\000"
  55      4B333937 
  55      2C302A32 
  55      330D0A00 
  56              		.align	2
  57              	.LC5:
  58 0070 24504D54 		.ascii	"$PMTK314,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0*29\015"
  58      4B333134 
  58      2C302C31 
  58      2C302C31 
  58      2C312C30 
  59 00a2 0A00     		.ascii	"\012\000"
  60              		.align	2
  61              	.LC6:
  62 00a4 24505542 		.ascii	"$PUBX,41,1,0003,0001,38400,0*26\015\012\000"
  62      582C3431 
  62      2C312C30 
  62      3030332C 
  62      30303031 
  63 00c6 0000     		.text
  64              		.align	2
  65              		.global	initGPS
  66              		.thumb
  67              		.thumb_func
  69              	initGPS:
  70              	.LFB111:
  71              		.file 1 "../src/gps/gps.c"
   1:../src/gps/gps.c **** /*
   2:../src/gps/gps.c ****   February 2013
   3:../src/gps/gps.c **** 
   4:../src/gps/gps.c ****   aq32Plus Rev -
   5:../src/gps/gps.c **** 
   6:../src/gps/gps.c ****   Copyright (c) 2012 John Ihlein.  All rights reserved.
   7:../src/gps/gps.c **** 
   8:../src/gps/gps.c ****   Open Source STM32 Based Multicopter Controller Software
   9:../src/gps/gps.c **** 
  10:../src/gps/gps.c ****   Includes code and/or ideas from:
  11:../src/gps/gps.c **** 
  12:../src/gps/gps.c ****   1)AeroQuad
  13:../src/gps/gps.c ****   2)BaseFlight
  14:../src/gps/gps.c ****   3)CH Robotics
  15:../src/gps/gps.c ****   4)MultiWii
  16:../src/gps/gps.c ****   5)S.O.H. Madgwick
  17:../src/gps/gps.c ****   6)UAVX
  18:../src/gps/gps.c **** 
  19:../src/gps/gps.c ****   Designed to run on the AQ32 Flight Control Board
  20:../src/gps/gps.c **** 
  21:../src/gps/gps.c ****   This program is free software: you can redistribute it and/or modify
  22:../src/gps/gps.c ****   it under the terms of the GNU General Public License as published by
  23:../src/gps/gps.c ****   the Free Software Foundation, either version 3 of the License, or
  24:../src/gps/gps.c ****   (at your option) any later version.
  25:../src/gps/gps.c **** 
  26:../src/gps/gps.c ****   This program is distributed in the hope that it will be useful,
  27:../src/gps/gps.c ****   but WITHOUT ANY WARRANTY; without even the implied warranty of
  28:../src/gps/gps.c ****   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  29:../src/gps/gps.c ****   GNU General Public License for more details.
  30:../src/gps/gps.c **** 
  31:../src/gps/gps.c ****   You should have received a copy of the GNU General Public License
  32:../src/gps/gps.c ****   along with this program. If not, see <http://www.gnu.org/licenses/>.
  33:../src/gps/gps.c **** */
  34:../src/gps/gps.c **** 
  35:../src/gps/gps.c **** ///////////////////////////////////////////////////////////////////////////////
  36:../src/gps/gps.c **** 
  37:../src/gps/gps.c **** #include "board.h"
  38:../src/gps/gps.c **** 
  39:../src/gps/gps.c **** ///////////////////////////////////////////////////////////////////////////////
  40:../src/gps/gps.c **** // GPS Variables
  41:../src/gps/gps.c **** ///////////////////////////////////////////////////////////////////////////////
  42:../src/gps/gps.c **** 
  43:../src/gps/gps.c **** static const uint8_t ubx5Hz[14] = {0xb5,0x62,0x06,0x08,0x06,0x00,0xc8,0x00,0x01,0x00,0x01,0x00,0xde
  44:../src/gps/gps.c **** 
  45:../src/gps/gps.c **** ///////////////////////////////////////////////////////////////////////////////
  46:../src/gps/gps.c **** // Initialize GPS Receiver
  47:../src/gps/gps.c **** ///////////////////////////////////////////////////////////////////////////////
  48:../src/gps/gps.c **** 
  49:../src/gps/gps.c **** void initGPS(void)
  50:../src/gps/gps.c **** {
  72              		.loc 1 50 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 8
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76 0000 00B5     		push	{lr}
  77              	.LCFI0:
  78              		.cfi_def_cfa_offset 4
  79              		.cfi_offset 14, -4
  80 0002 83B0     		sub	sp, sp, #12
  81              	.LCFI1:
  82              		.cfi_def_cfa_offset 16
  51:../src/gps/gps.c ****     uint8_t i;
  52:../src/gps/gps.c **** 
  53:../src/gps/gps.c ****     switch(eepromConfig.gpsType)
  83              		.loc 1 53 0
  84 0004 40F20003 		movw	r3, #:lower16:eepromConfig
  85 0008 C0F20003 		movt	r3, #:upper16:eepromConfig
  86 000c 93F84B33 		ldrb	r3, [r3, #843]	@ zero_extendqisi2
  87 0010 032B     		cmp	r3, #3
  88 0012 7ED8     		bhi	.L2
  89 0014 01A2     		adr	r2, .L7
  90 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  91 001a 00BF     		.align	2
  92              	.L7:
  93 001c 13010000 		.word	.L2+1
  94 0020 2D000000 		.word	.L4+1
  95 0024 79000000 		.word	.L5+1
  96 0028 C5000000 		.word	.L6+1
  97              	.L4:
  54:../src/gps/gps.c ****     {
  55:../src/gps/gps.c **** 		///////////////////////////////
  56:../src/gps/gps.c **** 
  57:../src/gps/gps.c **** 		case NO_GPS:
  58:../src/gps/gps.c **** 		    break;
  59:../src/gps/gps.c **** 
  60:../src/gps/gps.c **** 		///////////////////////////////
  61:../src/gps/gps.c **** 
  62:../src/gps/gps.c **** 		case MEDIATEK_3329_BINARY:     // MediaTek 3329 in binary mode
  63:../src/gps/gps.c **** 		    gpsPrint("$PGCMD,16,0,0,0,0,0*6A\r\n");  // Set Binary Output
  98              		.loc 1 63 0
  99 002c 40F20000 		movw	r0, #:lower16:.LC0
 100 0030 C0F20000 		movt	r0, #:upper16:.LC0
 101 0034 FFF7FEFF 		bl	gpsPrint
  64:../src/gps/gps.c ****             gpsPrint("$PMTK220,200*2C\r\n");         // Set 5 Hz Output
 102              		.loc 1 64 0
 103 0038 40F20000 		movw	r0, #:lower16:.LC1
 104 003c C0F20000 		movt	r0, #:upper16:.LC1
 105 0040 FFF7FEFF 		bl	gpsPrint
  65:../src/gps/gps.c ****             gpsPrint("$PMTK313,1*2E\r\n");           // Set SBAS On - Not sure if this does anythin
 106              		.loc 1 65 0
 107 0044 40F20000 		movw	r0, #:lower16:.LC2
 108 0048 C0F20000 		movt	r0, #:upper16:.LC2
 109 004c FFF7FEFF 		bl	gpsPrint
  66:../src/gps/gps.c ****             gpsPrint("$PMTK301,2*2E\r\n");           // Set WAAS On - Not sure if this does anythin
 110              		.loc 1 66 0
 111 0050 40F20000 		movw	r0, #:lower16:.LC3
 112 0054 C0F20000 		movt	r0, #:upper16:.LC3
 113 0058 FFF7FEFF 		bl	gpsPrint
  67:../src/gps/gps.c ****             gpsPrint("$PMTK397,0*23\r\n");           // Set Nav Speed Threshold to 0
 114              		.loc 1 67 0
 115 005c 40F20000 		movw	r0, #:lower16:.LC4
 116 0060 C0F20000 		movt	r0, #:upper16:.LC4
 117 0064 FFF7FEFF 		bl	gpsPrint
  68:../src/gps/gps.c **** 
  69:../src/gps/gps.c ****             mtk19ProcessDataState = MTK19_WAIT_SYNC1;
 118              		.loc 1 69 0
 119 0068 40F20003 		movw	r3, #:lower16:mtk19ProcessDataState
 120 006c C0F20003 		movt	r3, #:upper16:mtk19ProcessDataState
 121 0070 4FF00002 		mov	r2, #0
 122 0074 1A70     		strb	r2, [r3, #0]
  70:../src/gps/gps.c ****             break;
 123              		.loc 1 70 0
 124 0076 4CE0     		b	.L2
 125              	.L5:
  71:../src/gps/gps.c **** 
  72:../src/gps/gps.c ****         ///////////////////////////////
  73:../src/gps/gps.c **** 
  74:../src/gps/gps.c ****         case MEDIATEK_3329_NMEA:       // MediaTek 3329 in NMEA mode
  75:../src/gps/gps.c ****             gpsPrint("$PMTK314,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0*29\r\n");  // GPRMC, GPGGA and
 126              		.loc 1 75 0
 127 0078 40F20000 		movw	r0, #:lower16:.LC5
 128 007c C0F20000 		movt	r0, #:upper16:.LC5
 129 0080 FFF7FEFF 		bl	gpsPrint
  76:../src/gps/gps.c **** 			gpsPrint("$PMTK220,200*2C\r\n");                                    // Set 5 Hz Update Rate
 130              		.loc 1 76 0
 131 0084 40F20000 		movw	r0, #:lower16:.LC1
 132 0088 C0F20000 		movt	r0, #:upper16:.LC1
 133 008c FFF7FEFF 		bl	gpsPrint
  77:../src/gps/gps.c **** 			gpsPrint("$PMTK313,1*2E\r\n");                                      // Set SBAS On
 134              		.loc 1 77 0
 135 0090 40F20000 		movw	r0, #:lower16:.LC2
 136 0094 C0F20000 		movt	r0, #:upper16:.LC2
 137 0098 FFF7FEFF 		bl	gpsPrint
  78:../src/gps/gps.c ****             gpsPrint("$PMTK301,2*2E\r\n");                                      // Set WAAS On
 138              		.loc 1 78 0
 139 009c 40F20000 		movw	r0, #:lower16:.LC3
 140 00a0 C0F20000 		movt	r0, #:upper16:.LC3
 141 00a4 FFF7FEFF 		bl	gpsPrint
  79:../src/gps/gps.c ****             gpsPrint("$PMTK397,0*23\r\n");                                      // Set Nav Speed Th
 142              		.loc 1 79 0
 143 00a8 40F20000 		movw	r0, #:lower16:.LC4
 144 00ac C0F20000 		movt	r0, #:upper16:.LC4
 145 00b0 FFF7FEFF 		bl	gpsPrint
  80:../src/gps/gps.c **** 
  81:../src/gps/gps.c ****             nmeaProcessDataState = WAIT_START;
 146              		.loc 1 81 0
 147 00b4 40F20003 		movw	r3, #:lower16:nmeaProcessDataState
 148 00b8 C0F20003 		movt	r3, #:upper16:nmeaProcessDataState
 149 00bc 4FF00002 		mov	r2, #0
 150 00c0 1A70     		strb	r2, [r3, #0]
  82:../src/gps/gps.c ****             break;
 151              		.loc 1 82 0
 152 00c2 26E0     		b	.L2
 153              	.L6:
  83:../src/gps/gps.c **** 
  84:../src/gps/gps.c ****         ///////////////////////////////
  85:../src/gps/gps.c **** 
  86:../src/gps/gps.c ****         case UBLOX:             // UBLOX in binary mode
  87:../src/gps/gps.c ****         	for (i = 0; i < sizeof(ubx5Hz); i++)                // Set 5 Hz Update Rate
 154              		.loc 1 87 0
 155 00c4 4FF00003 		mov	r3, #0
 156 00c8 8DF80730 		strb	r3, [sp, #7]
 157 00cc 0FE0     		b	.L8
 158              	.L9:
  88:../src/gps/gps.c ****         	   gpsWrite(ubx5Hz[i]);
 159              		.loc 1 88 0 discriminator 2
 160 00ce 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 161 00d2 40F20003 		movw	r3, #:lower16:ubx5Hz
 162 00d6 C0F20003 		movt	r3, #:upper16:ubx5Hz
 163 00da 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 164 00dc 1846     		mov	r0, r3
 165 00de FFF7FEFF 		bl	gpsWrite
  87:../src/gps/gps.c ****         	for (i = 0; i < sizeof(ubx5Hz); i++)                // Set 5 Hz Update Rate
 166              		.loc 1 87 0 discriminator 2
 167 00e2 9DF80730 		ldrb	r3, [sp, #7]
 168 00e6 03F10103 		add	r3, r3, #1
 169 00ea 8DF80730 		strb	r3, [sp, #7]
 170              	.L8:
  87:../src/gps/gps.c ****         	for (i = 0; i < sizeof(ubx5Hz); i++)                // Set 5 Hz Update Rate
 171              		.loc 1 87 0 is_stmt 0 discriminator 1
 172 00ee 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 173 00f2 0D2B     		cmp	r3, #13
 174 00f4 EBD9     		bls	.L9
  89:../src/gps/gps.c **** 
  90:../src/gps/gps.c ****         	gpsPrint("$PUBX,41,1,0003,0001,38400,0*26\r\n");  // Set Binary Output
 175              		.loc 1 90 0 is_stmt 1
 176 00f6 40F20000 		movw	r0, #:lower16:.LC6
 177 00fa C0F20000 		movt	r0, #:upper16:.LC6
 178 00fe FFF7FEFF 		bl	gpsPrint
  91:../src/gps/gps.c **** 
  92:../src/gps/gps.c ****         	ubloxProcessDataState = WAIT_SYNC1;
 179              		.loc 1 92 0
 180 0102 40F20003 		movw	r3, #:lower16:ubloxProcessDataState
 181 0106 C0F20003 		movt	r3, #:upper16:ubloxProcessDataState
 182 010a 4FF00002 		mov	r2, #0
 183 010e 1A70     		strb	r2, [r3, #0]
  93:../src/gps/gps.c ****         	break;
 184              		.loc 1 93 0
 185 0110 00BF     		nop
 186              	.L2:
  94:../src/gps/gps.c **** 
  95:../src/gps/gps.c ****         ///////////////////////////////
  96:../src/gps/gps.c **** 	}
  97:../src/gps/gps.c **** 
  98:../src/gps/gps.c **** 	sensors.gpsLatitude    = GPS_INVALID_ANGLE;
 187              		.loc 1 98 0
 188 0112 40F20003 		movw	r3, #:lower16:sensors
 189 0116 C0F20003 		movt	r3, #:upper16:sensors
 190 011a 204A     		ldr	r2, .L10	@ float
 191 011c 1A64     		str	r2, [r3, #64]	@ float
  99:../src/gps/gps.c **** 	sensors.gpsLongitude   = GPS_INVALID_ANGLE;
 192              		.loc 1 99 0
 193 011e 40F20003 		movw	r3, #:lower16:sensors
 194 0122 C0F20003 		movt	r3, #:upper16:sensors
 195 0126 1D4A     		ldr	r2, .L10	@ float
 196 0128 5A64     		str	r2, [r3, #68]	@ float
 100:../src/gps/gps.c **** 	sensors.gpsAltitude	   = GPS_INVALID_ALTITUDE;
 197              		.loc 1 100 0
 198 012a 40F20003 		movw	r3, #:lower16:sensors
 199 012e C0F20003 		movt	r3, #:upper16:sensors
 200 0132 1B4A     		ldr	r2, .L10+4	@ float
 201 0134 9A64     		str	r2, [r3, #72]	@ float
 101:../src/gps/gps.c **** 	sensors.gpsGroundSpeed = GPS_INVALID_SPEED;
 202              		.loc 1 101 0
 203 0136 40F20003 		movw	r3, #:lower16:sensors
 204 013a C0F20003 		movt	r3, #:upper16:sensors
 205 013e 184A     		ldr	r2, .L10+4	@ float
 206 0140 DA64     		str	r2, [r3, #76]	@ float
 102:../src/gps/gps.c **** 	sensors.gpsGroundTrack = GPS_INVALID_ANGLE;
 207              		.loc 1 102 0
 208 0142 40F20003 		movw	r3, #:lower16:sensors
 209 0146 C0F20003 		movt	r3, #:upper16:sensors
 210 014a 144A     		ldr	r2, .L10	@ float
 211 014c 1A65     		str	r2, [r3, #80]	@ float
 103:../src/gps/gps.c **** 	sensors.gpsNumSats     = GPS_INVALID_SATS;
 212              		.loc 1 103 0
 213 014e 40F20003 		movw	r3, #:lower16:sensors
 214 0152 C0F20003 		movt	r3, #:upper16:sensors
 215 0156 4FF00002 		mov	r2, #0
 216 015a 83F85420 		strb	r2, [r3, #84]
 104:../src/gps/gps.c **** 	sensors.gpsFix         = GPS_INVALID_FIX;
 217              		.loc 1 104 0
 218 015e 40F20003 		movw	r3, #:lower16:sensors
 219 0162 C0F20003 		movt	r3, #:upper16:sensors
 220 0166 4FF00002 		mov	r2, #0
 221 016a 83F85520 		strb	r2, [r3, #85]
 105:../src/gps/gps.c **** 	sensors.gpsDate        = GPS_INVALID_DATE;
 222              		.loc 1 105 0
 223 016e 40F20003 		movw	r3, #:lower16:sensors
 224 0172 C0F20003 		movt	r3, #:upper16:sensors
 225 0176 42F20F72 		movw	r2, #9999
 226 017a 9A65     		str	r2, [r3, #88]
 106:../src/gps/gps.c **** 	sensors.gpsTime        = GPS_INVALID_TIME;
 227              		.loc 1 106 0
 228 017c 40F20003 		movw	r3, #:lower16:sensors
 229 0180 C0F20003 		movt	r3, #:upper16:sensors
 230 0184 074A     		ldr	r2, .L10+8	@ float
 231 0186 DA65     		str	r2, [r3, #92]	@ float
 107:../src/gps/gps.c **** 	sensors.gpsHdop        = GPS_INVALID_HDOP;
 232              		.loc 1 107 0
 233 0188 40F20003 		movw	r3, #:lower16:sensors
 234 018c C0F20003 		movt	r3, #:upper16:sensors
 235 0190 034A     		ldr	r2, .L10+4	@ float
 236 0192 1A66     		str	r2, [r3, #96]	@ float
 108:../src/gps/gps.c **** 
 109:../src/gps/gps.c **** 	gpsClearBuffer();
 237              		.loc 1 109 0
 238 0194 FFF7FEFF 		bl	gpsClearBuffer
 110:../src/gps/gps.c **** }
 239              		.loc 1 110 0
 240 0198 03B0     		add	sp, sp, #12
 241 019a 00BD     		pop	{pc}
 242              	.L11:
 243              		.align	2
 244              	.L10:
 245 019c F6832E43 		.word	1127121910
 246 01a0 003C1C46 		.word	1176255488
 247 01a4 00000000 		.word	0
 248              		.cfi_endproc
 249              	.LFE111:
 251              	.Letext0:
 252              		.file 2 "c:\\program files\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/gcc/ar
 253              		.file 3 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src/pid.h"
 254              		.file 4 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src/aq32Plus_F3.h"
 255              		.file 5 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src\\gps/gpsMediaTe
 256              		.file 6 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src\\gps/gpsNMEA.h"
 257              		.file 7 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src\\gps/gpsUblox.h
 258              		.file 8 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\CMSIS\\I
DEFINED SYMBOLS
                            *ABS*:00000000 gps.c
                            *COM*:00000001 mtk19ProcessDataState
                            *COM*:00000001 nmeaProcessDataState
                            *COM*:00000001 ubloxProcessDataState
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccFex8EW.s:23     .rodata:00000000 $d
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccFex8EW.s:26     .rodata:00000000 ubx5Hz
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccFex8EW.s:42     .rodata:00000010 .LC0
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccFex8EW.s:45     .rodata:0000002c .LC1
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccFex8EW.s:48     .rodata:00000040 .LC2
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccFex8EW.s:51     .rodata:00000050 .LC3
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccFex8EW.s:54     .rodata:00000060 .LC4
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccFex8EW.s:57     .rodata:00000070 .LC5
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccFex8EW.s:61     .rodata:000000a4 .LC6
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccFex8EW.s:64     .text:00000000 $t
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccFex8EW.s:69     .text:00000000 initGPS
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccFex8EW.s:93     .text:0000001c $d
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccFex8EW.s:99     .text:0000002c $t
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccFex8EW.s:245    .text:0000019c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
eepromConfig
gpsPrint
gpsWrite
sensors
gpsClearBuffer

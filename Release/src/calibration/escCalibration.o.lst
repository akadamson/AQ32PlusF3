   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"escCalibration.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	mtk19ProcessDataState,1,1
  20              		.comm	nmeaProcessDataState,1,1
  21              		.comm	ubloxProcessDataState,1,1
  22              		.global	escCalibrating
  23              		.bss
  26              	escCalibrating:
  27 0000 00       		.space	1
  28              		.comm	temp,1,1
  29              		.section	.rodata
  30              		.align	2
  31              	.LC0:
  32 0000 0A455343 		.ascii	"\012ESC Calibration:\012\012\000"
  32      2043616C 
  32      69627261 
  32      74696F6E 
  32      3A0A0A00 
  33              		.align	2
  34              	.LC1:
  35 0014 21212121 		.ascii	"!!!! CAUTION - Remove all propellers and disconnect"
  35      20434155 
  35      54494F4E 
  35      202D2052 
  35      656D6F76 
  36 0047 20212121 		.ascii	" !!!!\012\000"
  36      210A00
  37 004e 0000     		.align	2
  38              	.LC2:
  39 0050 21212121 		.ascii	"!!!! flight battery before proceeding any further  "
  39      20666C69 
  39      67687420 
  39      62617474 
  39      65727920 
  40 0083 20212121 		.ascii	" !!!!\012\012\000"
  40      210A0A00 
  41 008b 00       		.align	2
  42              	.LC3:
  43 008c 54797065 		.ascii	"Type 'Y' to continue, anything other character exit"
  43      20275927 
  43      20746F20 
  43      636F6E74 
  43      696E7565 
  44 00bf 730A0A00 		.ascii	"s\012\012\000"
  45 00c3 00       		.align	2
  46              	.LC4:
  47 00c4 45534320 		.ascii	"ESC Calibration Canceled!!\012\012\000"
  47      43616C69 
  47      62726174 
  47      696F6E20 
  47      43616E63 
  48 00e1 000000   		.align	2
  49              	.LC5:
  50 00e4 456E7465 		.ascii	"Enter 'h' for Max Command....\012\000"
  50      72202768 
  50      2720666F 
  50      72204D61 
  50      7820436F 
  51 0103 00       		.align	2
  52              	.LC6:
  53 0104 456E7465 		.ascii	"Enter 'm' for Mid Command....\012\000"
  53      7220276D 
  53      2720666F 
  53      72204D69 
  53      6420436F 
  54 0123 00       		.align	2
  55              	.LC7:
  56 0124 456E7465 		.ascii	"Enter 'l' for Min Command....\012\000"
  56      7220276C 
  56      2720666F 
  56      72204D69 
  56      6E20436F 
  57 0143 00       		.align	2
  58              	.LC8:
  59 0144 456E7465 		.ascii	"Enter 'x' to exit....\012\012\000"
  59      72202778 
  59      2720746F 
  59      20657869 
  59      742E2E2E 
  60              		.align	2
  61              	.LC9:
  62 015c 4170706C 		.ascii	"Applying Max Command....\012\012\000"
  62      79696E67 
  62      204D6178 
  62      20436F6D 
  62      6D616E64 
  63 0177 00       		.align	2
  64              	.LC10:
  65 0178 4170706C 		.ascii	"Applying Mid Command....\012\012\000"
  65      79696E67 
  65      204D6964 
  65      20436F6D 
  65      6D616E64 
  66 0193 00       		.align	2
  67              	.LC11:
  68 0194 4170706C 		.ascii	"Applying Min Command....\012\012\000"
  68      79696E67 
  68      204D696E 
  68      20436F6D 
  68      6D616E64 
  69 01af 00       		.align	2
  70              	.LC12:
  71 01b0 4170706C 		.ascii	"Applying Min Command, Exiting Calibration....\012\012"
  71      79696E67 
  71      204D696E 
  71      20436F6D 
  71      6D616E64 
  72 01df 00       		.ascii	"\000"
  73              		.text
  74              		.align	2
  75              		.global	escCalibration
  76              		.thumb
  77              		.thumb_func
  79              	escCalibration:
  80              	.LFB111:
  81              		.file 1 "../src/calibration/escCalibration.c"
   1:../src/calibration/escCalibration.c **** /*
   2:../src/calibration/escCalibration.c ****   December 2012
   3:../src/calibration/escCalibration.c **** 
   4:../src/calibration/escCalibration.c ****   aq32Plus_F3 Rev -
   5:../src/calibration/escCalibration.c **** 
   6:../src/calibration/escCalibration.c ****   Copyright (c) 2012 John Ihlein.  All rights reserved.
   7:../src/calibration/escCalibration.c **** 
   8:../src/calibration/escCalibration.c ****   Open Source STM32 Based Multicopter Controller Software
   9:../src/calibration/escCalibration.c **** 
  10:../src/calibration/escCalibration.c ****   Includes code and/or ideas from:
  11:../src/calibration/escCalibration.c **** 
  12:../src/calibration/escCalibration.c ****   1)AeroQuad
  13:../src/calibration/escCalibration.c ****   2)BaseFlight
  14:../src/calibration/escCalibration.c ****   3)CH Robotics
  15:../src/calibration/escCalibration.c ****   4)MultiWii
  16:../src/calibration/escCalibration.c ****   5)S.O.H. Madgwick
  17:../src/calibration/escCalibration.c ****   6)UAVX
  18:../src/calibration/escCalibration.c ****   7)STM DiscoveryF3 demonstration software
  19:../src/calibration/escCalibration.c **** 
  20:../src/calibration/escCalibration.c ****   Designed to run on the DiscoveryF3 board
  21:../src/calibration/escCalibration.c **** 
  22:../src/calibration/escCalibration.c ****   This program is free software: you can redistribute it and/or modify
  23:../src/calibration/escCalibration.c ****   it under the terms of the GNU General Public License as published by
  24:../src/calibration/escCalibration.c ****   the Free Software Foundation, either version 3 of the License, or
  25:../src/calibration/escCalibration.c ****   (at your option) any later version.
  26:../src/calibration/escCalibration.c **** 
  27:../src/calibration/escCalibration.c ****   This program is distributed in the hope that it will be useful,
  28:../src/calibration/escCalibration.c ****   but WITHOUT ANY WARRANTY; without even the implied warranty of
  29:../src/calibration/escCalibration.c ****   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  30:../src/calibration/escCalibration.c ****   GNU General Public License for more details.
  31:../src/calibration/escCalibration.c **** 
  32:../src/calibration/escCalibration.c ****   You should have received a copy of the GNU General Public License
  33:../src/calibration/escCalibration.c ****   along with this program. If not, see <http://www.gnu.org/licenses/>.
  34:../src/calibration/escCalibration.c **** */
  35:../src/calibration/escCalibration.c **** 
  36:../src/calibration/escCalibration.c **** ///////////////////////////////////////////////////////////////////////////////
  37:../src/calibration/escCalibration.c **** 
  38:../src/calibration/escCalibration.c **** #include "board.h"
  39:../src/calibration/escCalibration.c **** 
  40:../src/calibration/escCalibration.c **** ///////////////////////////////////////////////////////////////////////////////
  41:../src/calibration/escCalibration.c **** 
  42:../src/calibration/escCalibration.c **** uint8_t escCalibrating = false;
  43:../src/calibration/escCalibration.c **** char    temp;
  44:../src/calibration/escCalibration.c **** 
  45:../src/calibration/escCalibration.c **** ///////////////////////////////////////////////////////////////////////////////
  46:../src/calibration/escCalibration.c **** // ESC Calibration
  47:../src/calibration/escCalibration.c **** ///////////////////////////////////////////////////////////////////////////////
  48:../src/calibration/escCalibration.c **** 
  49:../src/calibration/escCalibration.c **** void escCalibration(void)
  50:../src/calibration/escCalibration.c **** {
  82              		.loc 1 50 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86 0000 08B5     		push	{r3, lr}
  87              	.LCFI0:
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 14, -4
  90              		.cfi_offset 3, -8
  51:../src/calibration/escCalibration.c ****     escCalibrating = true;
  91              		.loc 1 51 0
  92 0002 40F20003 		movw	r3, #:lower16:escCalibrating
  93 0006 C0F20003 		movt	r3, #:upper16:escCalibrating
  94 000a 4FF00102 		mov	r2, #1
  95 000e 1A70     		strb	r2, [r3, #0]
  52:../src/calibration/escCalibration.c **** 
  53:../src/calibration/escCalibration.c ****     armed = false;
  96              		.loc 1 53 0
  97 0010 40F20003 		movw	r3, #:lower16:armed
  98 0014 C0F20003 		movt	r3, #:upper16:armed
  99 0018 4FF00002 		mov	r2, #0
 100 001c 1A70     		strb	r2, [r3, #0]
  54:../src/calibration/escCalibration.c **** 
  55:../src/calibration/escCalibration.c ****     uart1Print("\nESC Calibration:\n\n");
 101              		.loc 1 55 0
 102 001e 40F20000 		movw	r0, #:lower16:.LC0
 103 0022 C0F20000 		movt	r0, #:upper16:.LC0
 104 0026 FFF7FEFF 		bl	uart1Print
  56:../src/calibration/escCalibration.c ****     uart1Print("!!!! CAUTION - Remove all propellers and disconnect !!!!\n");
 105              		.loc 1 56 0
 106 002a 40F20000 		movw	r0, #:lower16:.LC1
 107 002e C0F20000 		movt	r0, #:upper16:.LC1
 108 0032 FFF7FEFF 		bl	uart1Print
  57:../src/calibration/escCalibration.c ****     uart1Print("!!!! flight battery before proceeding any further   !!!!\n\n");
 109              		.loc 1 57 0
 110 0036 40F20000 		movw	r0, #:lower16:.LC2
 111 003a C0F20000 		movt	r0, #:upper16:.LC2
 112 003e FFF7FEFF 		bl	uart1Print
  58:../src/calibration/escCalibration.c ****     uart1Print("Type 'Y' to continue, anything other character exits\n\n");
 113              		.loc 1 58 0
 114 0042 40F20000 		movw	r0, #:lower16:.LC3
 115 0046 C0F20000 		movt	r0, #:upper16:.LC3
 116 004a FFF7FEFF 		bl	uart1Print
  59:../src/calibration/escCalibration.c **** 
  60:../src/calibration/escCalibration.c ****     while (uart1Available() == false);
 117              		.loc 1 60 0
 118 004e 00BF     		nop
 119              	.L2:
 120              		.loc 1 60 0 is_stmt 0 discriminator 1
 121 0050 FFF7FEFF 		bl	uart1Available
 122 0054 0346     		mov	r3, r0
 123 0056 002B     		cmp	r3, #0
 124 0058 FAD0     		beq	.L2
  61:../src/calibration/escCalibration.c ****     temp = uart1Read();
 125              		.loc 1 61 0 is_stmt 1
 126 005a FFF7FEFF 		bl	uart1Read
 127 005e 0346     		mov	r3, r0
 128 0060 1A46     		mov	r2, r3
 129 0062 40F20003 		movw	r3, #:lower16:temp
 130 0066 C0F20003 		movt	r3, #:upper16:temp
 131 006a 1A70     		strb	r2, [r3, #0]
  62:../src/calibration/escCalibration.c ****     if (temp != 'Y')
 132              		.loc 1 62 0
 133 006c 40F20003 		movw	r3, #:lower16:temp
 134 0070 C0F20003 		movt	r3, #:upper16:temp
 135 0074 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 136 0076 592B     		cmp	r3, #89
 137 0078 0DD0     		beq	.L3
  63:../src/calibration/escCalibration.c ****     {
  64:../src/calibration/escCalibration.c ****     	uart1Print("ESC Calibration Canceled!!\n\n");
 138              		.loc 1 64 0
 139 007a 40F20000 		movw	r0, #:lower16:.LC4
 140 007e C0F20000 		movt	r0, #:upper16:.LC4
 141 0082 FFF7FEFF 		bl	uart1Print
  65:../src/calibration/escCalibration.c ****     	escCalibrating = false;
 142              		.loc 1 65 0
 143 0086 40F20003 		movw	r3, #:lower16:escCalibrating
 144 008a C0F20003 		movt	r3, #:upper16:escCalibrating
 145 008e 4FF00002 		mov	r2, #0
 146 0092 1A70     		strb	r2, [r3, #0]
  66:../src/calibration/escCalibration.c ****     	return;
 147              		.loc 1 66 0
 148 0094 93E0     		b	.L1
 149              	.L3:
  67:../src/calibration/escCalibration.c ****     }
  68:../src/calibration/escCalibration.c **** 
  69:../src/calibration/escCalibration.c ****     ///////////////////////////////////
  70:../src/calibration/escCalibration.c **** 
  71:../src/calibration/escCalibration.c ****     uart1Print("Enter 'h' for Max Command....\n");
 150              		.loc 1 71 0
 151 0096 40F20000 		movw	r0, #:lower16:.LC5
 152 009a C0F20000 		movt	r0, #:upper16:.LC5
 153 009e FFF7FEFF 		bl	uart1Print
  72:../src/calibration/escCalibration.c ****     uart1Print("Enter 'm' for Mid Command....\n");
 154              		.loc 1 72 0
 155 00a2 40F20000 		movw	r0, #:lower16:.LC6
 156 00a6 C0F20000 		movt	r0, #:upper16:.LC6
 157 00aa FFF7FEFF 		bl	uart1Print
  73:../src/calibration/escCalibration.c ****     uart1Print("Enter 'l' for Min Command....\n");
 158              		.loc 1 73 0
 159 00ae 40F20000 		movw	r0, #:lower16:.LC7
 160 00b2 C0F20000 		movt	r0, #:upper16:.LC7
 161 00b6 FFF7FEFF 		bl	uart1Print
  74:../src/calibration/escCalibration.c ****     uart1Print("Enter 'x' to exit....\n\n");
 162              		.loc 1 74 0
 163 00ba 40F20000 		movw	r0, #:lower16:.LC8
 164 00be C0F20000 		movt	r0, #:upper16:.LC8
 165 00c2 FFF7FEFF 		bl	uart1Print
  75:../src/calibration/escCalibration.c **** 
  76:../src/calibration/escCalibration.c ****     while(true)
  77:../src/calibration/escCalibration.c ****     {
  78:../src/calibration/escCalibration.c **** 		while (uart1Available() == false);
 166              		.loc 1 78 0
 167 00c6 00E0     		b	.L13
 168              	.L14:
  79:../src/calibration/escCalibration.c **** 
  80:../src/calibration/escCalibration.c **** 		temp = uart1Read();
  81:../src/calibration/escCalibration.c **** 
  82:../src/calibration/escCalibration.c **** 		switch (temp)
  83:../src/calibration/escCalibration.c **** 		{
  84:../src/calibration/escCalibration.c **** 			case 'h':
  85:../src/calibration/escCalibration.c **** 			    uart1Print("Applying Max Command....\n\n");
  86:../src/calibration/escCalibration.c **** 			    writeAllMotors(eepromConfig.maxThrottle);
  87:../src/calibration/escCalibration.c **** 			    break;
  88:../src/calibration/escCalibration.c **** 
  89:../src/calibration/escCalibration.c **** 			case 'm':
  90:../src/calibration/escCalibration.c **** 			    uart1Print("Applying Mid Command....\n\n");
  91:../src/calibration/escCalibration.c **** 			    writeAllMotors(eepromConfig.midCommand);
  92:../src/calibration/escCalibration.c **** 			    break;
  93:../src/calibration/escCalibration.c **** 
  94:../src/calibration/escCalibration.c **** 			case 'l':
  95:../src/calibration/escCalibration.c **** 			    uart1Print("Applying Min Command....\n\n");
  96:../src/calibration/escCalibration.c **** 			    writeAllMotors(MINCOMMAND);
  97:../src/calibration/escCalibration.c **** 			    break;
  98:../src/calibration/escCalibration.c **** 
  99:../src/calibration/escCalibration.c **** 			case 'x':
 100:../src/calibration/escCalibration.c **** 			    uart1Print("Applying Min Command, Exiting Calibration....\n\n");
 101:../src/calibration/escCalibration.c **** 			    writeAllMotors(MINCOMMAND);
 102:../src/calibration/escCalibration.c **** 			    escCalibrating = false;
 103:../src/calibration/escCalibration.c **** 			    return;
 104:../src/calibration/escCalibration.c **** 			    break;
 105:../src/calibration/escCalibration.c **** 		}
 106:../src/calibration/escCalibration.c **** 	}
 169              		.loc 1 106 0
 170 00c8 00BF     		nop
 171              	.L12:
 172              	.L13:
  78:../src/calibration/escCalibration.c **** 		while (uart1Available() == false);
 173              		.loc 1 78 0
 174 00ca 00BF     		nop
 175              	.L5:
  78:../src/calibration/escCalibration.c **** 		while (uart1Available() == false);
 176              		.loc 1 78 0 is_stmt 0 discriminator 1
 177 00cc FFF7FEFF 		bl	uart1Available
 178 00d0 0346     		mov	r3, r0
 179 00d2 002B     		cmp	r3, #0
 180 00d4 FAD0     		beq	.L5
  80:../src/calibration/escCalibration.c **** 		temp = uart1Read();
 181              		.loc 1 80 0 is_stmt 1
 182 00d6 FFF7FEFF 		bl	uart1Read
 183 00da 0346     		mov	r3, r0
 184 00dc 1A46     		mov	r2, r3
 185 00de 40F20003 		movw	r3, #:lower16:temp
 186 00e2 C0F20003 		movt	r3, #:upper16:temp
 187 00e6 1A70     		strb	r2, [r3, #0]
  82:../src/calibration/escCalibration.c **** 		switch (temp)
 188              		.loc 1 82 0
 189 00e8 40F20003 		movw	r3, #:lower16:temp
 190 00ec C0F20003 		movt	r3, #:upper16:temp
 191 00f0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 192 00f2 A3F16803 		sub	r3, r3, #104
 193 00f6 102B     		cmp	r3, #16
 194 00f8 E6D8     		bhi	.L14
 195 00fa 01A2     		adr	r2, .L11
 196 00fc 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 197              		.align	2
 198              	.L11:
 199 0100 45010000 		.word	.L7+1
 200 0104 C9000000 		.word	.L14+1
 201 0108 C9000000 		.word	.L14+1
 202 010c C9000000 		.word	.L14+1
 203 0110 85010000 		.word	.L8+1
 204 0114 65010000 		.word	.L9+1
 205 0118 C9000000 		.word	.L14+1
 206 011c C9000000 		.word	.L14+1
 207 0120 C9000000 		.word	.L14+1
 208 0124 C9000000 		.word	.L14+1
 209 0128 C9000000 		.word	.L14+1
 210 012c C9000000 		.word	.L14+1
 211 0130 C9000000 		.word	.L14+1
 212 0134 C9000000 		.word	.L14+1
 213 0138 C9000000 		.word	.L14+1
 214 013c C9000000 		.word	.L14+1
 215 0140 99010000 		.word	.L10+1
 216              	.L7:
  85:../src/calibration/escCalibration.c **** 			    uart1Print("Applying Max Command....\n\n");
 217              		.loc 1 85 0
 218 0144 40F20000 		movw	r0, #:lower16:.LC9
 219 0148 C0F20000 		movt	r0, #:upper16:.LC9
 220 014c FFF7FEFF 		bl	uart1Print
  86:../src/calibration/escCalibration.c **** 			    writeAllMotors(eepromConfig.maxThrottle);
 221              		.loc 1 86 0
 222 0150 40F20003 		movw	r3, #:lower16:eepromConfig
 223 0154 C0F20003 		movt	r3, #:upper16:eepromConfig
 224 0158 D3F89430 		ldr	r3, [r3, #148]	@ float
 225 015c 1846     		mov	r0, r3	@ float
 226 015e FFF7FEFF 		bl	writeAllMotors
  87:../src/calibration/escCalibration.c **** 			    break;
 227              		.loc 1 87 0
 228 0162 2BE0     		b	.L6
 229              	.L9:
  90:../src/calibration/escCalibration.c **** 			    uart1Print("Applying Mid Command....\n\n");
 230              		.loc 1 90 0
 231 0164 40F20000 		movw	r0, #:lower16:.LC10
 232 0168 C0F20000 		movt	r0, #:upper16:.LC10
 233 016c FFF7FEFF 		bl	uart1Print
  91:../src/calibration/escCalibration.c **** 			    writeAllMotors(eepromConfig.midCommand);
 234              		.loc 1 91 0
 235 0170 40F20003 		movw	r3, #:lower16:eepromConfig
 236 0174 C0F20003 		movt	r3, #:upper16:eepromConfig
 237 0178 D3F88430 		ldr	r3, [r3, #132]	@ float
 238 017c 1846     		mov	r0, r3	@ float
 239 017e FFF7FEFF 		bl	writeAllMotors
  92:../src/calibration/escCalibration.c **** 			    break;
 240              		.loc 1 92 0
 241 0182 1BE0     		b	.L6
 242              	.L8:
  95:../src/calibration/escCalibration.c **** 			    uart1Print("Applying Min Command....\n\n");
 243              		.loc 1 95 0
 244 0184 40F20000 		movw	r0, #:lower16:.LC11
 245 0188 C0F20000 		movt	r0, #:upper16:.LC11
 246 018c FFF7FEFF 		bl	uart1Print
  96:../src/calibration/escCalibration.c **** 			    writeAllMotors(MINCOMMAND);
 247              		.loc 1 96 0
 248 0190 0B48     		ldr	r0, .L15	@ float
 249 0192 FFF7FEFF 		bl	writeAllMotors
  97:../src/calibration/escCalibration.c **** 			    break;
 250              		.loc 1 97 0
 251 0196 11E0     		b	.L6
 252              	.L10:
 100:../src/calibration/escCalibration.c **** 			    uart1Print("Applying Min Command, Exiting Calibration....\n\n");
 253              		.loc 1 100 0
 254 0198 40F20000 		movw	r0, #:lower16:.LC12
 255 019c C0F20000 		movt	r0, #:upper16:.LC12
 256 01a0 FFF7FEFF 		bl	uart1Print
 101:../src/calibration/escCalibration.c **** 			    writeAllMotors(MINCOMMAND);
 257              		.loc 1 101 0
 258 01a4 0648     		ldr	r0, .L15	@ float
 259 01a6 FFF7FEFF 		bl	writeAllMotors
 102:../src/calibration/escCalibration.c **** 			    escCalibrating = false;
 260              		.loc 1 102 0
 261 01aa 40F20003 		movw	r3, #:lower16:escCalibrating
 262 01ae C0F20003 		movt	r3, #:upper16:escCalibrating
 263 01b2 4FF00002 		mov	r2, #0
 264 01b6 1A70     		strb	r2, [r3, #0]
 103:../src/calibration/escCalibration.c **** 			    return;
 265              		.loc 1 103 0
 266 01b8 00BF     		nop
 267 01ba 00E0     		b	.L1
 268              	.L6:
 269              		.loc 1 106 0
 270 01bc 84E7     		b	.L14
 271              	.L1:
 107:../src/calibration/escCalibration.c **** }
 272              		.loc 1 107 0
 273 01be 08BD     		pop	{r3, pc}
 274              	.L16:
 275              		.align	2
 276              	.L15:
 277 01c0 0000FA44 		.word	1157234688
 278              		.cfi_endproc
 279              	.LFE111:
 281              	.Letext0:
 282              		.file 2 "c:\\program files\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/gcc/ar
 283              		.file 3 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src/pid.h"
 284              		.file 4 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src/aq32Plus_F3.h"
 285              		.file 5 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src\\gps/gpsMediaTe
 286              		.file 6 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src\\gps/gpsNMEA.h"
 287              		.file 7 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src\\gps/gpsUblox.h
 288              		.file 8 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\CMSIS\\I
 289              		.file 9 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src/flightCommand.h
DEFINED SYMBOLS
                            *ABS*:00000000 escCalibration.c
                            *COM*:00000001 mtk19ProcessDataState
                            *COM*:00000001 nmeaProcessDataState
                            *COM*:00000001 ubloxProcessDataState
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:26     .bss:00000000 escCalibrating
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:27     .bss:00000000 $d
                            *COM*:00000001 temp
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:30     .rodata:00000000 $d
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:31     .rodata:00000000 .LC0
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:34     .rodata:00000014 .LC1
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:38     .rodata:00000050 .LC2
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:42     .rodata:0000008c .LC3
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:46     .rodata:000000c4 .LC4
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:49     .rodata:000000e4 .LC5
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:52     .rodata:00000104 .LC6
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:55     .rodata:00000124 .LC7
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:58     .rodata:00000144 .LC8
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:61     .rodata:0000015c .LC9
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:64     .rodata:00000178 .LC10
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:67     .rodata:00000194 .LC11
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:70     .rodata:000001b0 .LC12
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:74     .text:00000000 $t
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:79     .text:00000000 escCalibration
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:199    .text:00000100 $d
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:218    .text:00000144 $t
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccULUM2n.s:277    .text:000001c0 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
armed
uart1Print
uart1Available
uart1Read
eepromConfig
writeAllMotors

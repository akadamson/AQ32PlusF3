   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"osdWidgets.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	mtk19ProcessDataState,1,1
  20              		.comm	nmeaProcessDataState,1,1
  21              		.comm	ubloxProcessDataState,1,1
  22              		.global	lastHoldState
  23              		.data
  26              	lastHoldState:
  27 0000 06       		.byte	6
  28              		.global	lastAltitude
  29 0001 00       		.align	1
  32              	lastAltitude:
  33 0002 3930     		.short	12345
  34              		.global	lastHoldAltitude
  35              		.align	1
  38              	lastHoldAltitude:
  39 0004 3930     		.short	12345
  40              		.section	.rodata
  41              		.align	2
  42              	.LC0:
  43 0000 09256325 		.ascii	"\011%c%1d.%1dm\000"
  43      31642E25 
  43      31646D00 
  44              		.align	2
  45              	.LC1:
  46 000c 09253464 		.ascii	"\011%4dm\000"
  46      6D00
  47 0012 0000     		.align	2
  48              	.LC2:
  49 0014 09253464 		.ascii	"\011%4df\000"
  49      6600
  50 001a 0000     		.align	2
  51              	.LC3:
  52 001c 0A256325 		.ascii	"\012%c%1d.%1dm\000"
  52      31642E25 
  52      31646D00 
  53              		.align	2
  54              	.LC4:
  55 0028 0A253464 		.ascii	"\012%4dm\000"
  55      6D00
  56 002e 0000     		.align	2
  57              	.LC5:
  58 0030 0A253464 		.ascii	"\012%4df\000"
  58      6600
  59 0036 0000     		.align	2
  60              	.LC6:
  61 0038 0A70616E 		.ascii	"\012panic\000"
  61      696300
  62              		.text
  63              		.align	2
  64              		.global	displayAltitude
  65              		.thumb
  66              		.thumb_func
  68              	displayAltitude:
  69              	.LFB111:
  70              		.file 1 "../src/max7456/osdWidgets.c"
   1:../src/max7456/osdWidgets.c **** /*
   2:../src/max7456/osdWidgets.c ****   October 2012
   3:../src/max7456/osdWidgets.c **** 
   4:../src/max7456/osdWidgets.c ****   aq32Plus Rev -
   5:../src/max7456/osdWidgets.c **** 
   6:../src/max7456/osdWidgets.c ****   Copyright (c) 2012 John Ihlein.  All rights reserved.
   7:../src/max7456/osdWidgets.c **** 
   8:../src/max7456/osdWidgets.c ****   Open Source STM32 Based Multicopter Controller Software
   9:../src/max7456/osdWidgets.c **** 
  10:../src/max7456/osdWidgets.c ****   Includes code and/or ideas from:
  11:../src/max7456/osdWidgets.c **** 
  12:../src/max7456/osdWidgets.c ****   1)AeroQuad
  13:../src/max7456/osdWidgets.c ****   2)BaseFlight
  14:../src/max7456/osdWidgets.c ****   3)CH Robotics
  15:../src/max7456/osdWidgets.c ****   4)MultiWii
  16:../src/max7456/osdWidgets.c ****   5)S.O.H. Madgwick
  17:../src/max7456/osdWidgets.c ****   6)UAVX
  18:../src/max7456/osdWidgets.c **** 
  19:../src/max7456/osdWidgets.c ****   Designed to run on the AQ32 Flight Control Board
  20:../src/max7456/osdWidgets.c **** 
  21:../src/max7456/osdWidgets.c ****   This program is free software: you can redistribute it and/or modify
  22:../src/max7456/osdWidgets.c ****   it under the terms of the GNU General Public License as published by
  23:../src/max7456/osdWidgets.c ****   the Free Software Foundation, either version 3 of the License, or
  24:../src/max7456/osdWidgets.c ****   (at your option) any later version.
  25:../src/max7456/osdWidgets.c **** 
  26:../src/max7456/osdWidgets.c ****   This program is distributed in the hope that it will be useful,
  27:../src/max7456/osdWidgets.c ****   but WITHOUT ANY WARRANTY; without even the implied warranty of
  28:../src/max7456/osdWidgets.c ****   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  29:../src/max7456/osdWidgets.c ****   GNU General Public License for more details.
  30:../src/max7456/osdWidgets.c **** 
  31:../src/max7456/osdWidgets.c ****   You should have received a copy of the GNU General Public License
  32:../src/max7456/osdWidgets.c ****   along with this program. If not, see <http://www.gnu.org/licenses/>.
  33:../src/max7456/osdWidgets.c **** */
  34:../src/max7456/osdWidgets.c **** 
  35:../src/max7456/osdWidgets.c **** ///////////////////////////////////////////////////////////////////////////////
  36:../src/max7456/osdWidgets.c **** 
  37:../src/max7456/osdWidgets.c **** #include "board.h"
  38:../src/max7456/osdWidgets.c **** 
  39:../src/max7456/osdWidgets.c **** ///////////////////////////////////////////////////////////////////////////////
  40:../src/max7456/osdWidgets.c **** // AltitudeHold Display
  41:../src/max7456/osdWidgets.c **** ///////////////////////////////////////////////////////////////////////////////
  42:../src/max7456/osdWidgets.c **** 
  43:../src/max7456/osdWidgets.c **** #define ALTITUDE_ROW 1
  44:../src/max7456/osdWidgets.c **** #define ALTITUDE_COL 1
  45:../src/max7456/osdWidgets.c **** 
  46:../src/max7456/osdWidgets.c **** uint8_t lastHoldState    = 6;
  47:../src/max7456/osdWidgets.c **** int16_t lastAltitude     = 12345;     // bogus value to force update
  48:../src/max7456/osdWidgets.c **** int16_t lastHoldAltitude = 12345;     // bogus value to force update
  49:../src/max7456/osdWidgets.c **** 
  50:../src/max7456/osdWidgets.c **** void displayAltitude(float pressureAltitude, float altitudeReference, uint8_t altHoldState)
  51:../src/max7456/osdWidgets.c **** {
  71              		.loc 1 51 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 32
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75 0000 10B5     		push	{r4, lr}
  76              	.LCFI0:
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 14, -4
  79              		.cfi_offset 4, -8
  80 0002 8AB0     		sub	sp, sp, #40
  81              	.LCFI1:
  82              		.cfi_def_cfa_offset 48
  83 0004 0590     		str	r0, [sp, #20]	@ float
  84 0006 0491     		str	r1, [sp, #16]	@ float
  85 0008 1346     		mov	r3, r2
  86 000a 8DF80F30 		strb	r3, [sp, #15]
  52:../src/max7456/osdWidgets.c ****     bool    isWriteNeeded = false;
  87              		.loc 1 52 0
  88 000e 4FF00003 		mov	r3, #0
  89 0012 8DF82730 		strb	r3, [sp, #39]
  53:../src/max7456/osdWidgets.c ****     char    buf[7];
  54:../src/max7456/osdWidgets.c ****     int16_t currentAltitude;
  55:../src/max7456/osdWidgets.c ****     int16_t currentHoldAltitude;
  56:../src/max7456/osdWidgets.c **** 
  57:../src/max7456/osdWidgets.c ****     if (eepromConfig.metricUnits)
  90              		.loc 1 57 0
  91 0016 40F20003 		movw	r3, #:lower16:eepromConfig
  92 001a C0F20003 		movt	r3, #:upper16:eepromConfig
  93 001e 93F84633 		ldrb	r3, [r3, #838]	@ zero_extendqisi2
  94 0022 002B     		cmp	r3, #0
  95 0024 18D0     		beq	.L2
  58:../src/max7456/osdWidgets.c ****     {
  59:../src/max7456/osdWidgets.c **** 		currentAltitude     = (int16_t)(pressureAltitude  * 10.0f);
  96              		.loc 1 59 0
  97 0026 9DED057A 		flds	s14, [sp, #20]
  98 002a F2EE047A 		fconsts	s15, #36
  99 002e 67EE277A 		fmuls	s15, s14, s15
 100 0032 FDEEE77A 		ftosizs	s15, s15
 101 0036 17EE903A 		fmrs	r3, s15	@ int
 102 003a ADF82430 		strh	r3, [sp, #36]	@ movhi
  60:../src/max7456/osdWidgets.c **** 		currentHoldAltitude = (int16_t)(altitudeReference * 10.0f);
 103              		.loc 1 60 0
 104 003e 9DED047A 		flds	s14, [sp, #16]
 105 0042 F2EE047A 		fconsts	s15, #36
 106 0046 67EE277A 		fmuls	s15, s14, s15
 107 004a FDEEE77A 		ftosizs	s15, s15
 108 004e 17EE903A 		fmrs	r3, s15	@ int
 109 0052 ADF82230 		strh	r3, [sp, #34]	@ movhi
 110 0056 17E0     		b	.L3
 111              	.L2:
  61:../src/max7456/osdWidgets.c **** 	}
  62:../src/max7456/osdWidgets.c **** 	else
  63:../src/max7456/osdWidgets.c **** 	{
  64:../src/max7456/osdWidgets.c **** 		currentAltitude     = (int16_t)(pressureAltitude  * 3.281f);
 112              		.loc 1 64 0
 113 0058 9DED057A 		flds	s14, [sp, #20]
 114 005c DFEDB97A 		flds	s15, .L29
 115 0060 67EE277A 		fmuls	s15, s14, s15
 116 0064 FDEEE77A 		ftosizs	s15, s15
 117 0068 17EE903A 		fmrs	r3, s15	@ int
 118 006c ADF82430 		strh	r3, [sp, #36]	@ movhi
  65:../src/max7456/osdWidgets.c ****         currentHoldAltitude = (int16_t)(altitudeReference * 3.281f);
 119              		.loc 1 65 0
 120 0070 9DED047A 		flds	s14, [sp, #16]
 121 0074 DFEDB37A 		flds	s15, .L29
 122 0078 67EE277A 		fmuls	s15, s14, s15
 123 007c FDEEE77A 		ftosizs	s15, s15
 124 0080 17EE903A 		fmrs	r3, s15	@ int
 125 0084 ADF82230 		strh	r3, [sp, #34]	@ movhi
 126              	.L3:
  66:../src/max7456/osdWidgets.c **** 	}
  67:../src/max7456/osdWidgets.c **** 
  68:../src/max7456/osdWidgets.c ****     if ( lastAltitude != currentAltitude )
 127              		.loc 1 68 0
 128 0088 40F20003 		movw	r3, #:lower16:lastAltitude
 129 008c C0F20003 		movt	r3, #:upper16:lastAltitude
 130 0090 1B88     		ldrh	r3, [r3, #0]
 131 0092 BDF92420 		ldrsh	r2, [sp, #36]
 132 0096 1BB2     		sxth	r3, r3
 133 0098 9A42     		cmp	r2, r3
 134 009a 00F08E80 		beq	.L4
  69:../src/max7456/osdWidgets.c ****     {
  70:../src/max7456/osdWidgets.c ****         if (eepromConfig.metricUnits)
 135              		.loc 1 70 0
 136 009e 40F20003 		movw	r3, #:lower16:eepromConfig
 137 00a2 C0F20003 		movt	r3, #:upper16:eepromConfig
 138 00a6 93F84633 		ldrb	r3, [r3, #838]	@ zero_extendqisi2
 139 00aa 002B     		cmp	r3, #0
 140 00ac 65D0     		beq	.L5
  71:../src/max7456/osdWidgets.c ****         {
  72:../src/max7456/osdWidgets.c **** 		    if (abs(currentAltitude) < 100)
 141              		.loc 1 72 0
 142 00ae BDF92430 		ldrsh	r3, [sp, #36]
 143 00b2 13F1630F 		cmn	r3, #99
 144 00b6 46DB     		blt	.L6
 145              		.loc 1 72 0 is_stmt 0 discriminator 1
 146 00b8 BDF92430 		ldrsh	r3, [sp, #36]
 147 00bc 632B     		cmp	r3, #99
 148 00be 42DC     		bgt	.L6
  73:../src/max7456/osdWidgets.c **** 		    {
  74:../src/max7456/osdWidgets.c ****                 snprintf(buf,7,"\011%c%1d.%1dm",currentAltitude < 0 ? '-' : ' ', abs(currentAltitud
 149              		.loc 1 74 0 is_stmt 1
 150 00c0 BDF92430 		ldrsh	r3, [sp, #36]
 151 00c4 002B     		cmp	r3, #0
 152 00c6 02DA     		bge	.L7
 153              		.loc 1 74 0 is_stmt 0 discriminator 1
 154 00c8 4FF02D04 		mov	r4, #45
 155 00cc 01E0     		b	.L8
 156              	.L7:
 157              		.loc 1 74 0 discriminator 2
 158 00ce 4FF02004 		mov	r4, #32
 159              	.L8:
 160              		.loc 1 74 0 discriminator 3
 161 00d2 BDF92420 		ldrsh	r2, [sp, #36]
 162 00d6 46F26763 		movw	r3, #26215
 163 00da C6F26663 		movt	r3, 26214
 164 00de 83FB0213 		smull	r1, r3, r3, r2
 165 00e2 4FEAA301 		asr	r1, r3, #2
 166 00e6 4FEAE273 		asr	r3, r2, #31
 167 00ea CB1A     		subs	r3, r1, r3
 168 00ec 9BB2     		uxth	r3, r3
 169 00ee 1BB2     		sxth	r3, r3
 170 00f0 83EAE370 		eor	r0, r3, r3, asr #31
 171 00f4 A0EBE370 		sub	r0, r0, r3, asr #31
 172 00f8 BDF92420 		ldrsh	r2, [sp, #36]
 173 00fc 46F26763 		movw	r3, #26215
 174 0100 C6F26663 		movt	r3, 26214
 175 0104 83FB0213 		smull	r1, r3, r3, r2
 176 0108 4FEAA301 		asr	r1, r3, #2
 177 010c 4FEAE273 		asr	r3, r2, #31
 178 0110 C91A     		subs	r1, r1, r3
 179 0112 0B46     		mov	r3, r1
 180 0114 4FEA8303 		lsl	r3, r3, #2
 181 0118 5B18     		adds	r3, r3, r1
 182 011a 4FEA4303 		lsl	r3, r3, #1
 183 011e D31A     		subs	r3, r2, r3
 184 0120 9BB2     		uxth	r3, r3
 185 0122 1BB2     		sxth	r3, r3
 186 0124 002B     		cmp	r3, #0
 187 0126 B8BF     		it	lt
 188 0128 5B42     		rsblt	r3, r3, #0
 189 012a 0090     		str	r0, [sp, #0]
 190 012c 0193     		str	r3, [sp, #4]
 191 012e 06AB     		add	r3, sp, #24
 192 0130 1846     		mov	r0, r3
 193 0132 4FF00701 		mov	r1, #7
 194 0136 40F20002 		movw	r2, #:lower16:.LC0
 195 013a C0F20002 		movt	r2, #:upper16:.LC0
 196 013e 2346     		mov	r3, r4
 197 0140 FFF7FEFF 		bl	snprintf
 198 0144 25E0     		b	.L10
 199              	.L6:
  75:../src/max7456/osdWidgets.c ****             }
  76:../src/max7456/osdWidgets.c ****             else
  77:../src/max7456/osdWidgets.c ****             {
  78:../src/max7456/osdWidgets.c ****                 snprintf(buf,7,"\011%4dm",currentAltitude / 10);
 200              		.loc 1 78 0 is_stmt 1
 201 0146 BDF92420 		ldrsh	r2, [sp, #36]
 202 014a 46F26763 		movw	r3, #26215
 203 014e C6F26663 		movt	r3, 26214
 204 0152 83FB0213 		smull	r1, r3, r3, r2
 205 0156 4FEAA301 		asr	r1, r3, #2
 206 015a 4FEAE273 		asr	r3, r2, #31
 207 015e CB1A     		subs	r3, r1, r3
 208 0160 9BB2     		uxth	r3, r3
 209 0162 1BB2     		sxth	r3, r3
 210 0164 06AA     		add	r2, sp, #24
 211 0166 1046     		mov	r0, r2
 212 0168 4FF00701 		mov	r1, #7
 213 016c 40F20002 		movw	r2, #:lower16:.LC1
 214 0170 C0F20002 		movt	r2, #:upper16:.LC1
 215 0174 FFF7FEFF 		bl	snprintf
 216 0178 0BE0     		b	.L10
 217              	.L5:
  79:../src/max7456/osdWidgets.c ****             }
  80:../src/max7456/osdWidgets.c ****         }
  81:../src/max7456/osdWidgets.c ****         else
  82:../src/max7456/osdWidgets.c ****         {
  83:../src/max7456/osdWidgets.c **** 		    snprintf(buf,7,"\011%4df",currentAltitude);
 218              		.loc 1 83 0
 219 017a BDF92430 		ldrsh	r3, [sp, #36]
 220 017e 06AA     		add	r2, sp, #24
 221 0180 1046     		mov	r0, r2
 222 0182 4FF00701 		mov	r1, #7
 223 0186 40F20002 		movw	r2, #:lower16:.LC2
 224 018a C0F20002 		movt	r2, #:upper16:.LC2
 225 018e FFF7FEFF 		bl	snprintf
 226              	.L10:
  84:../src/max7456/osdWidgets.c **** 	    }
  85:../src/max7456/osdWidgets.c **** 
  86:../src/max7456/osdWidgets.c ****         writeMax7456Chars(buf, 6, 0, ALTITUDE_ROW, ALTITUDE_COL);
 227              		.loc 1 86 0
 228 0192 4FF00103 		mov	r3, #1
 229 0196 0093     		str	r3, [sp, #0]
 230 0198 06AB     		add	r3, sp, #24
 231 019a 1846     		mov	r0, r3
 232 019c 4FF00601 		mov	r1, #6
 233 01a0 4FF00002 		mov	r2, #0
 234 01a4 4FF00103 		mov	r3, #1
 235 01a8 FFF7FEFF 		bl	writeMax7456Chars
  87:../src/max7456/osdWidgets.c **** 
  88:../src/max7456/osdWidgets.c ****         lastAltitude = currentAltitude;
 236              		.loc 1 88 0
 237 01ac 40F20003 		movw	r3, #:lower16:lastAltitude
 238 01b0 C0F20003 		movt	r3, #:upper16:lastAltitude
 239 01b4 BDF82420 		ldrh	r2, [sp, #36]	@ movhi
 240 01b8 1A80     		strh	r2, [r3, #0]	@ movhi
 241              	.L4:
  89:../src/max7456/osdWidgets.c ****     }
  90:../src/max7456/osdWidgets.c **** 
  91:../src/max7456/osdWidgets.c ****     // AltitudeHold handling:
  92:../src/max7456/osdWidgets.c ****     // - show hold altitude when it is active
  93:../src/max7456/osdWidgets.c ****     // - show "panic" if 'paniced' out
  94:../src/max7456/osdWidgets.c **** 
  95:../src/max7456/osdWidgets.c ****     switch (altHoldState)
 242              		.loc 1 95 0
 243 01ba 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 244 01be 012B     		cmp	r3, #1
 245 01c0 20D0     		beq	.L13
 246 01c2 022B     		cmp	r3, #2
 247 01c4 00F0C080 		beq	.L14
 248 01c8 002B     		cmp	r3, #0
 249 01ca 40F0DF80 		bne	.L11
 250              	.L12:
  96:../src/max7456/osdWidgets.c ****     {
  97:../src/max7456/osdWidgets.c ****         case DISENGAGED:
  98:../src/max7456/osdWidgets.c ****             if (lastHoldState != DISENGAGED)
 251              		.loc 1 98 0
 252 01ce 40F20003 		movw	r3, #:lower16:lastHoldState
 253 01d2 C0F20003 		movt	r3, #:upper16:lastHoldState
 254 01d6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 255 01d8 002B     		cmp	r3, #0
 256 01da 00F0D280 		beq	.L26
  99:../src/max7456/osdWidgets.c ****             {
 100:../src/max7456/osdWidgets.c ****                 lastHoldState = DISENGAGED;
 257              		.loc 1 100 0
 258 01de 40F20003 		movw	r3, #:lower16:lastHoldState
 259 01e2 C0F20003 		movt	r3, #:upper16:lastHoldState
 260 01e6 4FF00002 		mov	r2, #0
 261 01ea 1A70     		strb	r2, [r3, #0]
 101:../src/max7456/osdWidgets.c ****                 memset(buf,0,6);
 262              		.loc 1 101 0
 263 01ec 4FF00002 		mov	r2, #0
 264 01f0 06AB     		add	r3, sp, #24
 265 01f2 1A60     		str	r2, [r3, #0]
 266 01f4 4FF00002 		mov	r2, #0
 267 01f8 9A80     		strh	r2, [r3, #4]	@ movhi
 102:../src/max7456/osdWidgets.c ****                 isWriteNeeded = true;
 268              		.loc 1 102 0
 269 01fa 4FF00103 		mov	r3, #1
 270 01fe 8DF82730 		strb	r3, [sp, #39]
 103:../src/max7456/osdWidgets.c ****             }
 104:../src/max7456/osdWidgets.c ****             break;
 271              		.loc 1 104 0
 272 0202 BEE0     		b	.L26
 273              	.L13:
 105:../src/max7456/osdWidgets.c **** 
 106:../src/max7456/osdWidgets.c ****         case ENGAGED:
 107:../src/max7456/osdWidgets.c ****             if ((lastHoldState != ENGAGED) || (lastHoldAltitude != currentHoldAltitude))
 274              		.loc 1 107 0
 275 0204 40F20003 		movw	r3, #:lower16:lastHoldState
 276 0208 C0F20003 		movt	r3, #:upper16:lastHoldState
 277 020c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 278 020e 012B     		cmp	r3, #1
 279 0210 0AD1     		bne	.L16
 280              		.loc 1 107 0 is_stmt 0 discriminator 1
 281 0212 40F20003 		movw	r3, #:lower16:lastHoldAltitude
 282 0216 C0F20003 		movt	r3, #:upper16:lastHoldAltitude
 283 021a 1B88     		ldrh	r3, [r3, #0]
 284 021c BDF92220 		ldrsh	r2, [sp, #34]
 285 0220 1BB2     		sxth	r3, r3
 286 0222 9A42     		cmp	r2, r3
 287 0224 00F0AF80 		beq	.L27
 288              	.L16:
 108:../src/max7456/osdWidgets.c ****             {
 109:../src/max7456/osdWidgets.c ****                 lastHoldState = ENGAGED;
 289              		.loc 1 109 0 is_stmt 1
 290 0228 40F20003 		movw	r3, #:lower16:lastHoldState
 291 022c C0F20003 		movt	r3, #:upper16:lastHoldState
 292 0230 4FF00102 		mov	r2, #1
 293 0234 1A70     		strb	r2, [r3, #0]
 110:../src/max7456/osdWidgets.c ****                 lastHoldAltitude = currentHoldAltitude;
 294              		.loc 1 110 0
 295 0236 40F20003 		movw	r3, #:lower16:lastHoldAltitude
 296 023a C0F20003 		movt	r3, #:upper16:lastHoldAltitude
 297 023e BDF82220 		ldrh	r2, [sp, #34]	@ movhi
 298 0242 1A80     		strh	r2, [r3, #0]	@ movhi
 111:../src/max7456/osdWidgets.c **** 
 112:../src/max7456/osdWidgets.c ****                 if (eepromConfig.metricUnits)
 299              		.loc 1 112 0
 300 0244 40F20003 		movw	r3, #:lower16:eepromConfig
 301 0248 C0F20003 		movt	r3, #:upper16:eepromConfig
 302 024c 93F84633 		ldrb	r3, [r3, #838]	@ zero_extendqisi2
 303 0250 002B     		cmp	r3, #0
 304 0252 65D0     		beq	.L18
 113:../src/max7456/osdWidgets.c **** 			    {
 114:../src/max7456/osdWidgets.c **** 				    if (abs(currentHoldAltitude)<100)
 305              		.loc 1 114 0
 306 0254 BDF92230 		ldrsh	r3, [sp, #34]
 307 0258 13F1630F 		cmn	r3, #99
 308 025c 46DB     		blt	.L19
 309              		.loc 1 114 0 is_stmt 0 discriminator 1
 310 025e BDF92230 		ldrsh	r3, [sp, #34]
 311 0262 632B     		cmp	r3, #99
 312 0264 42DC     		bgt	.L19
 115:../src/max7456/osdWidgets.c **** 				    {
 116:../src/max7456/osdWidgets.c **** 					    snprintf(buf,7,"\012%c%1d.%1dm", currentHoldAltitude < 0 ? '-' : ' ',abs(currentHoldAltitu
 313              		.loc 1 116 0 is_stmt 1
 314 0266 BDF92230 		ldrsh	r3, [sp, #34]
 315 026a 002B     		cmp	r3, #0
 316 026c 02DA     		bge	.L20
 317              		.loc 1 116 0 is_stmt 0 discriminator 1
 318 026e 4FF02D04 		mov	r4, #45
 319 0272 01E0     		b	.L21
 320              	.L20:
 321              		.loc 1 116 0 discriminator 2
 322 0274 4FF02004 		mov	r4, #32
 323              	.L21:
 324              		.loc 1 116 0 discriminator 3
 325 0278 BDF92220 		ldrsh	r2, [sp, #34]
 326 027c 46F26763 		movw	r3, #26215
 327 0280 C6F26663 		movt	r3, 26214
 328 0284 83FB0213 		smull	r1, r3, r3, r2
 329 0288 4FEAA301 		asr	r1, r3, #2
 330 028c 4FEAE273 		asr	r3, r2, #31
 331 0290 CB1A     		subs	r3, r1, r3
 332 0292 9BB2     		uxth	r3, r3
 333 0294 1BB2     		sxth	r3, r3
 334 0296 83EAE370 		eor	r0, r3, r3, asr #31
 335 029a A0EBE370 		sub	r0, r0, r3, asr #31
 336 029e BDF92220 		ldrsh	r2, [sp, #34]
 337 02a2 46F26763 		movw	r3, #26215
 338 02a6 C6F26663 		movt	r3, 26214
 339 02aa 83FB0213 		smull	r1, r3, r3, r2
 340 02ae 4FEAA301 		asr	r1, r3, #2
 341 02b2 4FEAE273 		asr	r3, r2, #31
 342 02b6 C91A     		subs	r1, r1, r3
 343 02b8 0B46     		mov	r3, r1
 344 02ba 4FEA8303 		lsl	r3, r3, #2
 345 02be 5B18     		adds	r3, r3, r1
 346 02c0 4FEA4303 		lsl	r3, r3, #1
 347 02c4 D31A     		subs	r3, r2, r3
 348 02c6 9BB2     		uxth	r3, r3
 349 02c8 1BB2     		sxth	r3, r3
 350 02ca 002B     		cmp	r3, #0
 351 02cc B8BF     		it	lt
 352 02ce 5B42     		rsblt	r3, r3, #0
 353 02d0 0090     		str	r0, [sp, #0]
 354 02d2 0193     		str	r3, [sp, #4]
 355 02d4 06AB     		add	r3, sp, #24
 356 02d6 1846     		mov	r0, r3
 357 02d8 4FF00701 		mov	r1, #7
 358 02dc 40F20002 		movw	r2, #:lower16:.LC3
 359 02e0 C0F20002 		movt	r2, #:upper16:.LC3
 360 02e4 2346     		mov	r3, r4
 361 02e6 FFF7FEFF 		bl	snprintf
 362 02ea 25E0     		b	.L23
 363              	.L19:
 117:../src/max7456/osdWidgets.c **** 					}
 118:../src/max7456/osdWidgets.c **** 					else
 119:../src/max7456/osdWidgets.c **** 					{
 120:../src/max7456/osdWidgets.c **** 					    snprintf(buf,7,"\012%4dm",currentHoldAltitude/10);
 364              		.loc 1 120 0 is_stmt 1
 365 02ec BDF92220 		ldrsh	r2, [sp, #34]
 366 02f0 46F26763 		movw	r3, #26215
 367 02f4 C6F26663 		movt	r3, 26214
 368 02f8 83FB0213 		smull	r1, r3, r3, r2
 369 02fc 4FEAA301 		asr	r1, r3, #2
 370 0300 4FEAE273 		asr	r3, r2, #31
 371 0304 CB1A     		subs	r3, r1, r3
 372 0306 9BB2     		uxth	r3, r3
 373 0308 1BB2     		sxth	r3, r3
 374 030a 06AA     		add	r2, sp, #24
 375 030c 1046     		mov	r0, r2
 376 030e 4FF00701 		mov	r1, #7
 377 0312 40F20002 		movw	r2, #:lower16:.LC4
 378 0316 C0F20002 		movt	r2, #:upper16:.LC4
 379 031a FFF7FEFF 		bl	snprintf
 380 031e 0BE0     		b	.L23
 381              	.L18:
 121:../src/max7456/osdWidgets.c **** 					}
 122:../src/max7456/osdWidgets.c **** 				}
 123:../src/max7456/osdWidgets.c **** 				else
 124:../src/max7456/osdWidgets.c **** 				{
 125:../src/max7456/osdWidgets.c **** 					snprintf(buf,7,"\12%4df",currentHoldAltitude);
 382              		.loc 1 125 0
 383 0320 BDF92230 		ldrsh	r3, [sp, #34]
 384 0324 06AA     		add	r2, sp, #24
 385 0326 1046     		mov	r0, r2
 386 0328 4FF00701 		mov	r1, #7
 387 032c 40F20002 		movw	r2, #:lower16:.LC5
 388 0330 C0F20002 		movt	r2, #:upper16:.LC5
 389 0334 FFF7FEFF 		bl	snprintf
 390              	.L23:
 126:../src/max7456/osdWidgets.c **** 				}
 127:../src/max7456/osdWidgets.c **** 
 128:../src/max7456/osdWidgets.c **** 				isWriteNeeded = true;
 391              		.loc 1 128 0
 392 0338 4FF00103 		mov	r3, #1
 393 033c 8DF82730 		strb	r3, [sp, #39]
 129:../src/max7456/osdWidgets.c ****             }
 130:../src/max7456/osdWidgets.c ****             break;
 394              		.loc 1 130 0
 395 0340 21E0     		b	.L27
 396              	.L30:
 397 0342 00BF     		.align	2
 398              	.L29:
 399 0344 E7FB5140 		.word	1079114727
 400              	.L14:
 131:../src/max7456/osdWidgets.c **** 
 132:../src/max7456/osdWidgets.c ****         case PANIC:
 133:../src/max7456/osdWidgets.c ****             if (lastHoldState != PANIC)
 401              		.loc 1 133 0
 402 0348 40F20003 		movw	r3, #:lower16:lastHoldState
 403 034c C0F20003 		movt	r3, #:upper16:lastHoldState
 404 0350 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 405 0352 022B     		cmp	r3, #2
 406 0354 19D0     		beq	.L28
 134:../src/max7456/osdWidgets.c ****             {
 135:../src/max7456/osdWidgets.c ****                 lastHoldState = PANIC;
 407              		.loc 1 135 0
 408 0356 40F20003 		movw	r3, #:lower16:lastHoldState
 409 035a C0F20003 		movt	r3, #:upper16:lastHoldState
 410 035e 4FF00202 		mov	r2, #2
 411 0362 1A70     		strb	r2, [r3, #0]
 136:../src/max7456/osdWidgets.c ****                 snprintf(buf,7,"\12panic");
 412              		.loc 1 136 0
 413 0364 06AB     		add	r3, sp, #24
 414 0366 1846     		mov	r0, r3
 415 0368 4FF00701 		mov	r1, #7
 416 036c 40F20002 		movw	r2, #:lower16:.LC6
 417 0370 C0F20002 		movt	r2, #:upper16:.LC6
 418 0374 FFF7FEFF 		bl	snprintf
 137:../src/max7456/osdWidgets.c ****                 isWriteNeeded = true;
 419              		.loc 1 137 0
 420 0378 4FF00103 		mov	r3, #1
 421 037c 8DF82730 		strb	r3, [sp, #39]
 138:../src/max7456/osdWidgets.c ****             }
 139:../src/max7456/osdWidgets.c ****             break;
 422              		.loc 1 139 0
 423 0380 03E0     		b	.L28
 424              	.L26:
 104:../src/max7456/osdWidgets.c ****             break;
 425              		.loc 1 104 0
 426 0382 00BF     		nop
 427 0384 02E0     		b	.L11
 428              	.L27:
 130:../src/max7456/osdWidgets.c ****             break;
 429              		.loc 1 130 0
 430 0386 00BF     		nop
 431 0388 00E0     		b	.L11
 432              	.L28:
 433              		.loc 1 139 0
 434 038a 00BF     		nop
 435              	.L11:
 140:../src/max7456/osdWidgets.c ****     }
 141:../src/max7456/osdWidgets.c **** 
 142:../src/max7456/osdWidgets.c ****     if (isWriteNeeded)
 436              		.loc 1 142 0
 437 038c 9DF82730 		ldrb	r3, [sp, #39]	@ zero_extendqisi2
 438 0390 002B     		cmp	r3, #0
 439 0392 0CD0     		beq	.L1
 143:../src/max7456/osdWidgets.c ****         writeMax7456Chars(buf, 6, 0, ALTITUDE_ROW, ALTITUDE_COL+6);
 440              		.loc 1 143 0
 441 0394 4FF00703 		mov	r3, #7
 442 0398 0093     		str	r3, [sp, #0]
 443 039a 06AB     		add	r3, sp, #24
 444 039c 1846     		mov	r0, r3
 445 039e 4FF00601 		mov	r1, #6
 446 03a2 4FF00002 		mov	r2, #0
 447 03a6 4FF00103 		mov	r3, #1
 448 03aa FFF7FEFF 		bl	writeMax7456Chars
 449              	.L1:
 144:../src/max7456/osdWidgets.c **** }
 450              		.loc 1 144 0
 451 03ae 0AB0     		add	sp, sp, #40
 452 03b0 10BD     		pop	{r4, pc}
 453              		.cfi_endproc
 454              	.LFE111:
 456              		.section	.rodata
 457 003f 00       		.align	2
 460              	ahColumns:
 461 0040 08       		.byte	8
 462 0041 0A       		.byte	10
 463 0042 0C       		.byte	12
 464 0043 11       		.byte	17
 465 0044 13       		.byte	19
 466 0045 15       		.byte	21
 467              		.comm	reticleRow,1,1
 468              		.comm	ahTopPixel,1,1
 469              		.comm	ahBottomPixel,1,1
 470              		.comm	ahCenter,1,1
 471              		.global	ahOldLine
 472              		.bss
 473              		.align	2
 476              	ahOldLine:
 477 0000 00000000 		.space	6
 477      0000
 478              		.global	lastAHflightMode
 479              		.data
 482              	lastAHflightMode:
 483 0006 19       		.byte	25
 484              		.global	__aeabi_i2d
 485              		.global	__aeabi_f2d
 486              		.global	__aeabi_dsub
 487              		.global	__aeabi_dmul
 488              		.global	__aeabi_dadd
 489              		.global	__aeabi_d2f
 490              		.text
 491 03b2 00BF     		.align	2
 492              		.global	displayArtificialHorizon
 493              		.thumb
 494              		.thumb_func
 496              	displayArtificialHorizon:
 497              	.LFB112:
 145:../src/max7456/osdWidgets.c **** 
 146:../src/max7456/osdWidgets.c **** ///////////////////////////////////////////////////////////////////////////////
 147:../src/max7456/osdWidgets.c **** // Artificial Horizon Display
 148:../src/max7456/osdWidgets.c **** ///////////////////////////////////////////////////////////////////////////////
 149:../src/max7456/osdWidgets.c **** 
 150:../src/max7456/osdWidgets.c **** // 012345678901234567890123456789
 151:../src/max7456/osdWidgets.c **** //
 152:../src/max7456/osdWidgets.c **** //         - - - RR - - -
 153:../src/max7456/osdWidgets.c **** 
 154:../src/max7456/osdWidgets.c **** #define LINE_ROW_0 0x80            // character address of a character with a horizontal line in ro
 155:../src/max7456/osdWidgets.c **** #define AH_MAX_PITCH_ANGLE (PI/8)  // bounds of scale used for displaying pitch.
 156:../src/max7456/osdWidgets.c ****                                    // when pitch is >= |this number|, the pitch lines will be at to
 157:../src/max7456/osdWidgets.c **** #define RETICLE_COL 14             // reticle will be in this col, and col to the right
 158:../src/max7456/osdWidgets.c **** 
 159:../src/max7456/osdWidgets.c **** // columns where the roll line is printed
 160:../src/max7456/osdWidgets.c **** static const uint8_t ahColumns[6] = {8,10,12,17,19,21};
 161:../src/max7456/osdWidgets.c **** 
 162:../src/max7456/osdWidgets.c **** uint8_t  reticleRow;
 163:../src/max7456/osdWidgets.c **** uint8_t  ahTopPixel;
 164:../src/max7456/osdWidgets.c **** uint8_t  ahBottomPixel;
 165:../src/max7456/osdWidgets.c **** uint8_t  ahCenter;
 166:../src/max7456/osdWidgets.c **** 
 167:../src/max7456/osdWidgets.c **** uint8_t ahOldLine[6]   = {0,0,0,0,0,0};
 168:../src/max7456/osdWidgets.c **** uint8_t lastAHflightMode = 25;
 169:../src/max7456/osdWidgets.c **** 
 170:../src/max7456/osdWidgets.c **** void displayArtificialHorizon(float roll, float pitch, uint8_t flightMode)
 171:../src/max7456/osdWidgets.c **** {
 498              		.loc 1 171 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 24
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502 03b4 F0B5     		push	{r4, r5, r6, r7, lr}
 503              	.LCFI2:
 504              		.cfi_def_cfa_offset 20
 505              		.cfi_offset 14, -4
 506              		.cfi_offset 7, -8
 507              		.cfi_offset 6, -12
 508              		.cfi_offset 5, -16
 509              		.cfi_offset 4, -20
 510 03b6 89B0     		sub	sp, sp, #36
 511              	.LCFI3:
 512              		.cfi_def_cfa_offset 56
 513 03b8 0590     		str	r0, [sp, #20]	@ float
 514 03ba 0491     		str	r1, [sp, #16]	@ float
 515 03bc 1346     		mov	r3, r2
 516 03be 8DF80F30 		strb	r3, [sp, #15]
 172:../src/max7456/osdWidgets.c **** 	char    reticle[2];
 173:../src/max7456/osdWidgets.c **** 	char    rollLine;
 174:../src/max7456/osdWidgets.c ****     uint8_t i;
 175:../src/max7456/osdWidgets.c ****     uint8_t row;
 176:../src/max7456/osdWidgets.c **** 
 177:../src/max7456/osdWidgets.c ****     for (i = 0; i < 6; i++)
 517              		.loc 1 177 0
 518 03c2 4FF00003 		mov	r3, #0
 519 03c6 8DF81F30 		strb	r3, [sp, #31]
 520 03ca 06E1     		b	.L32
 521              	.L34:
 178:../src/max7456/osdWidgets.c ****     {
 179:../src/max7456/osdWidgets.c ****         row = constrain(ahCenter +
 522              		.loc 1 179 0
 523 03cc 40F20003 		movw	r3, #:lower16:ahCenter
 524 03d0 C0F20003 		movt	r3, #:upper16:ahCenter
 525 03d4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 526 03d6 1846     		mov	r0, r3
 527 03d8 FFF7FEFF 		bl	__aeabi_i2d
 528 03dc 0446     		mov	r4, r0
 529 03de 0D46     		mov	r5, r1
 180:../src/max7456/osdWidgets.c **** 			           (14.5 - (float)ahColumns[i]) * 12 * 1.4 * roll +
 530              		.loc 1 180 0
 531 03e0 9DF81F20 		ldrb	r2, [sp, #31]	@ zero_extendqisi2
 532 03e4 40F20003 		movw	r3, #:lower16:ahColumns
 533 03e8 C0F20003 		movt	r3, #:upper16:ahColumns
 534 03ec 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 535 03ee 06EE903A 		fmsr	s13, r3	@ int
 536 03f2 F8EE667A 		fuitos	s15, s13
 537 03f6 17EE900A 		fmrs	r0, s15
 538 03fa FFF7FEFF 		bl	__aeabi_f2d
 539 03fe 0246     		mov	r2, r0
 540 0400 0B46     		mov	r3, r1
 541 0402 94A1     		adr	r1, .L36+4
 542 0404 D1E90001 		ldrd	r0, [r1]
 543 0408 FFF7FEFF 		bl	__aeabi_dsub
 544 040c 0246     		mov	r2, r0
 545 040e 0B46     		mov	r3, r1
 546 0410 1046     		mov	r0, r2
 547 0412 1946     		mov	r1, r3
 548 0414 91A3     		adr	r3, .L36+12
 549 0416 D3E90023 		ldrd	r2, [r3]
 550 041a FFF7FEFF 		bl	__aeabi_dmul
 551 041e 0246     		mov	r2, r0
 552 0420 0B46     		mov	r3, r1
 553 0422 1046     		mov	r0, r2
 554 0424 1946     		mov	r1, r3
 555 0426 8FA3     		adr	r3, .L36+20
 556 0428 D3E90023 		ldrd	r2, [r3]
 557 042c FFF7FEFF 		bl	__aeabi_dmul
 558 0430 0246     		mov	r2, r0
 559 0432 0B46     		mov	r3, r1
 560 0434 1646     		mov	r6, r2
 561 0436 1F46     		mov	r7, r3
 562 0438 0598     		ldr	r0, [sp, #20]	@ float
 563 043a FFF7FEFF 		bl	__aeabi_f2d
 564 043e 0246     		mov	r2, r0
 565 0440 0B46     		mov	r3, r1
 566 0442 3046     		mov	r0, r6
 567 0444 3946     		mov	r1, r7
 568 0446 FFF7FEFF 		bl	__aeabi_dmul
 569 044a 0246     		mov	r2, r0
 570 044c 0B46     		mov	r3, r1
 179:../src/max7456/osdWidgets.c ****         row = constrain(ahCenter +
 571              		.loc 1 179 0
 572 044e 2046     		mov	r0, r4
 573 0450 2946     		mov	r1, r5
 574 0452 FFF7FEFF 		bl	__aeabi_dadd
 575 0456 0246     		mov	r2, r0
 576 0458 0B46     		mov	r3, r1
 577 045a 1446     		mov	r4, r2
 578 045c 1D46     		mov	r5, r3
 181:../src/max7456/osdWidgets.c **** 			           (pitch/AH_MAX_PITCH_ANGLE*(ahCenter - ahTopPixel)),
 579              		.loc 1 181 0
 580 045e 9DED047A 		flds	s14, [sp, #16]
 581 0462 DFED7B7A 		flds	s15, .L36
 582 0466 C7EE277A 		fdivs	s15, s14, s15
 583 046a 40F20003 		movw	r3, #:lower16:ahCenter
 584 046e C0F20003 		movt	r3, #:upper16:ahCenter
 585 0472 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 586 0474 1A46     		mov	r2, r3
 587 0476 40F20003 		movw	r3, #:lower16:ahTopPixel
 588 047a C0F20003 		movt	r3, #:upper16:ahTopPixel
 589 047e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 590 0480 D31A     		subs	r3, r2, r3
 591 0482 06EE903A 		fmsr	s13, r3	@ int
 592 0486 B8EEE67A 		fsitos	s14, s13
 593 048a 67EE877A 		fmuls	s15, s15, s14
 180:../src/max7456/osdWidgets.c **** 			           (14.5 - (float)ahColumns[i]) * 12 * 1.4 * roll +
 594              		.loc 1 180 0
 595 048e 17EE900A 		fmrs	r0, s15
 596 0492 FFF7FEFF 		bl	__aeabi_f2d
 597 0496 0246     		mov	r2, r0
 598 0498 0B46     		mov	r3, r1
 599 049a 2046     		mov	r0, r4
 600 049c 2946     		mov	r1, r5
 601 049e FFF7FEFF 		bl	__aeabi_dadd
 602 04a2 0246     		mov	r2, r0
 603 04a4 0B46     		mov	r3, r1
 179:../src/max7456/osdWidgets.c ****         row = constrain(ahCenter +
 604              		.loc 1 179 0
 605 04a6 1046     		mov	r0, r2
 606 04a8 1946     		mov	r1, r3
 607 04aa FFF7FEFF 		bl	__aeabi_d2f
 608 04ae 0246     		mov	r2, r0	@ float
 609 04b0 40F20003 		movw	r3, #:lower16:ahTopPixel
 610 04b4 C0F20003 		movt	r3, #:upper16:ahTopPixel
 611 04b8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 612 04ba 07EE903A 		fmsr	s15, r3	@ int
 613 04be B8EE677A 		fuitos	s14, s15
 614 04c2 40F20003 		movw	r3, #:lower16:ahBottomPixel
 615 04c6 C0F20003 		movt	r3, #:upper16:ahBottomPixel
 616 04ca 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 617 04cc 06EE903A 		fmsr	s13, r3	@ int
 618 04d0 F8EE667A 		fuitos	s15, s13
 619 04d4 1046     		mov	r0, r2	@ float
 620 04d6 17EE101A 		fmrs	r1, s14
 621 04da 17EE902A 		fmrs	r2, s15
 622 04de FFF7FEFF 		bl	constrain
 623 04e2 07EE900A 		fmsr	s15, r0
 624 04e6 FCEEE77A 		ftouizs	s15, s15
 625 04ea 17EE903A 		fmrs	r3, s15	@ int
 626 04ee 8DF81E30 		strb	r3, [sp, #30]
 182:../src/max7456/osdWidgets.c **** 			            ahTopPixel, ahBottomPixel);
 183:../src/max7456/osdWidgets.c **** 
 184:../src/max7456/osdWidgets.c ****         if ((row/18) != ahOldLine[i])
 627              		.loc 1 184 0
 628 04f2 9DF81E20 		ldrb	r2, [sp, #30]	@ zero_extendqisi2
 629 04f6 48F63963 		movw	r3, #36409
 630 04fa C3F6E303 		movt	r3, 14563
 631 04fe A3FB0203 		umull	r0, r3, r3, r2
 632 0502 4FEA9303 		lsr	r3, r3, #2
 633 0506 DAB2     		uxtb	r2, r3
 634 0508 9DF81F10 		ldrb	r1, [sp, #31]	@ zero_extendqisi2
 635 050c 40F20003 		movw	r3, #:lower16:ahOldLine
 636 0510 C0F20003 		movt	r3, #:upper16:ahOldLine
 637 0514 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 638 0516 9A42     		cmp	r2, r3
 639 0518 29D0     		beq	.L33
 185:../src/max7456/osdWidgets.c ****         {
 186:../src/max7456/osdWidgets.c ****             writeMax7456Chars(NULL, 1, 0, ahOldLine[i], ahColumns[i]);
 640              		.loc 1 186 0
 641 051a 9DF81F20 		ldrb	r2, [sp, #31]	@ zero_extendqisi2
 642 051e 40F20003 		movw	r3, #:lower16:ahOldLine
 643 0522 C0F20003 		movt	r3, #:upper16:ahOldLine
 644 0526 9C5C     		ldrb	r4, [r3, r2]	@ zero_extendqisi2
 645 0528 9DF81F20 		ldrb	r2, [sp, #31]	@ zero_extendqisi2
 646 052c 40F20003 		movw	r3, #:lower16:ahColumns
 647 0530 C0F20003 		movt	r3, #:upper16:ahColumns
 648 0534 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 649 0536 0093     		str	r3, [sp, #0]
 650 0538 4FF00000 		mov	r0, #0
 651 053c 4FF00101 		mov	r1, #1
 652 0540 4FF00002 		mov	r2, #0
 653 0544 2346     		mov	r3, r4
 654 0546 FFF7FEFF 		bl	writeMax7456Chars
 187:../src/max7456/osdWidgets.c ****             ahOldLine[i] = row/18;
 655              		.loc 1 187 0
 656 054a 9DF81F20 		ldrb	r2, [sp, #31]	@ zero_extendqisi2
 657 054e 9DF81E10 		ldrb	r1, [sp, #30]	@ zero_extendqisi2
 658 0552 48F63963 		movw	r3, #36409
 659 0556 C3F6E303 		movt	r3, 14563
 660 055a A3FB0103 		umull	r0, r3, r3, r1
 661 055e 4FEA9303 		lsr	r3, r3, #2
 662 0562 D9B2     		uxtb	r1, r3
 663 0564 40F20003 		movw	r3, #:lower16:ahOldLine
 664 0568 C0F20003 		movt	r3, #:upper16:ahOldLine
 665 056c 9954     		strb	r1, [r3, r2]
 666              	.L33:
 188:../src/max7456/osdWidgets.c ****         }
 189:../src/max7456/osdWidgets.c **** 
 190:../src/max7456/osdWidgets.c ****         rollLine = LINE_ROW_0 + (row % 18);
 667              		.loc 1 190 0
 668 056e 9DF81E20 		ldrb	r2, [sp, #30]	@ zero_extendqisi2
 669 0572 48F63963 		movw	r3, #36409
 670 0576 C3F6E303 		movt	r3, 14563
 671 057a A3FB0213 		umull	r1, r3, r3, r2
 672 057e 4FEA9301 		lsr	r1, r3, #2
 673 0582 0B46     		mov	r3, r1
 674 0584 4FEAC303 		lsl	r3, r3, #3
 675 0588 5B18     		adds	r3, r3, r1
 676 058a 4FEA4303 		lsl	r3, r3, #1
 677 058e D31A     		subs	r3, r2, r3
 678 0590 DBB2     		uxtb	r3, r3
 679 0592 A3F18003 		sub	r3, r3, #128
 680 0596 DBB2     		uxtb	r3, r3
 681 0598 8DF81B30 		strb	r3, [sp, #27]
 191:../src/max7456/osdWidgets.c ****         writeMax7456Chars(&rollLine, 1, 0, ahOldLine[i], ahColumns[i]);
 682              		.loc 1 191 0
 683 059c 9DF81F20 		ldrb	r2, [sp, #31]	@ zero_extendqisi2
 684 05a0 40F20003 		movw	r3, #:lower16:ahOldLine
 685 05a4 C0F20003 		movt	r3, #:upper16:ahOldLine
 686 05a8 9C5C     		ldrb	r4, [r3, r2]	@ zero_extendqisi2
 687 05aa 9DF81F20 		ldrb	r2, [sp, #31]	@ zero_extendqisi2
 688 05ae 40F20003 		movw	r3, #:lower16:ahColumns
 689 05b2 C0F20003 		movt	r3, #:upper16:ahColumns
 690 05b6 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 691 05b8 0093     		str	r3, [sp, #0]
 692 05ba 0DF11B03 		add	r3, sp, #27
 693 05be 1846     		mov	r0, r3
 694 05c0 4FF00101 		mov	r1, #1
 695 05c4 4FF00002 		mov	r2, #0
 696 05c8 2346     		mov	r3, r4
 697 05ca FFF7FEFF 		bl	writeMax7456Chars
 177:../src/max7456/osdWidgets.c ****     for (i = 0; i < 6; i++)
 698              		.loc 1 177 0
 699 05ce 9DF81F30 		ldrb	r3, [sp, #31]
 700 05d2 03F10103 		add	r3, r3, #1
 701 05d6 8DF81F30 		strb	r3, [sp, #31]
 702              	.L32:
 177:../src/max7456/osdWidgets.c ****     for (i = 0; i < 6; i++)
 703              		.loc 1 177 0 is_stmt 0 discriminator 1
 704 05da 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 705 05de 052B     		cmp	r3, #5
 706 05e0 7FF6F4AE 		bls	.L34
 192:../src/max7456/osdWidgets.c ****     }
 193:../src/max7456/osdWidgets.c **** 
 194:../src/max7456/osdWidgets.c ****     // Reticle on the center of the screen
 195:../src/max7456/osdWidgets.c ****     // 0 - rate mode (no letter)
 196:../src/max7456/osdWidgets.c ****     // 1 - Attitude 'S'
 197:../src/max7456/osdWidgets.c ****     // 2 - GPS position hold 'P'
 198:../src/max7456/osdWidgets.c ****     // 3 - GPS navigation 'N'
 199:../src/max7456/osdWidgets.c **** 
 200:../src/max7456/osdWidgets.c ****     if (lastAHflightMode != flightMode)
 707              		.loc 1 200 0 is_stmt 1
 708 05e4 40F20003 		movw	r3, #:lower16:lastAHflightMode
 709 05e8 C0F20003 		movt	r3, #:upper16:lastAHflightMode
 710 05ec 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 711 05ee 9DF80F20 		ldrb	r2, [sp, #15]	@ zero_extendqisi2
 712 05f2 9A42     		cmp	r2, r3
 713 05f4 27D0     		beq	.L31
 201:../src/max7456/osdWidgets.c ****     {
 202:../src/max7456/osdWidgets.c ****         reticle[0] = flightMode * 2 + 1;
 714              		.loc 1 202 0
 715 05f6 9DF80F30 		ldrb	r3, [sp, #15]
 716 05fa 4FEA4303 		lsl	r3, r3, #1
 717 05fe DBB2     		uxtb	r3, r3
 718 0600 03F10103 		add	r3, r3, #1
 719 0604 DBB2     		uxtb	r3, r3
 720 0606 8DF81C30 		strb	r3, [sp, #28]
 203:../src/max7456/osdWidgets.c ****         reticle[1] = reticle[0] + 1;
 721              		.loc 1 203 0
 722 060a 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 723 060e 03F10103 		add	r3, r3, #1
 724 0612 DBB2     		uxtb	r3, r3
 725 0614 8DF81D30 		strb	r3, [sp, #29]
 204:../src/max7456/osdWidgets.c **** 
 205:../src/max7456/osdWidgets.c ****         //write 2 chars to row (middle), column 14
 206:../src/max7456/osdWidgets.c ****         writeMax7456Chars(reticle, 2, 0, reticleRow, RETICLE_COL);
 726              		.loc 1 206 0
 727 0618 40F20003 		movw	r3, #:lower16:reticleRow
 728 061c C0F20003 		movt	r3, #:upper16:reticleRow
 729 0620 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 730 0622 4FF00E02 		mov	r2, #14
 731 0626 0092     		str	r2, [sp, #0]
 732 0628 07AA     		add	r2, sp, #28
 733 062a 1046     		mov	r0, r2
 734 062c 4FF00201 		mov	r1, #2
 735 0630 4FF00002 		mov	r2, #0
 736 0634 FFF7FEFF 		bl	writeMax7456Chars
 207:../src/max7456/osdWidgets.c **** 
 208:../src/max7456/osdWidgets.c ****         lastAHflightMode = flightMode;
 737              		.loc 1 208 0
 738 0638 40F20003 		movw	r3, #:lower16:lastAHflightMode
 739 063c C0F20003 		movt	r3, #:upper16:lastAHflightMode
 740 0640 9DF80F20 		ldrb	r2, [sp, #15]
 741 0644 1A70     		strb	r2, [r3, #0]
 742              	.L31:
 209:../src/max7456/osdWidgets.c ****     }
 210:../src/max7456/osdWidgets.c **** }
 743              		.loc 1 210 0
 744 0646 09B0     		add	sp, sp, #36
 745 0648 F0BD     		pop	{r4, r5, r6, r7, pc}
 746              	.L37:
 747 064a 00BFAFF3 		.align	3
 747      0080
 748              	.L36:
 749 0650 DB0FC93E 		.word	1053364187
 750 0654 00000000 		.word	0
 751 0658 00002D40 		.word	1076690944
 752 065c 00000000 		.word	0
 753 0660 00002840 		.word	1076363264
 754 0664 66666666 		.word	1717986918
 755 0668 6666F63F 		.word	1073112678
 756              		.cfi_endproc
 757              	.LFE112:
 759              		.section	.rodata
 760 0046 0000     		.align	2
 763              	ROLL_COLUMNS:
 764 0048 0A       		.byte	10
 765 0049 0C       		.byte	12
 766 004a 11       		.byte	17
 767 004b 13       		.byte	19
 768              		.comm	aiTopPixel,1,1
 769              		.comm	aiBottomPixel,1,1
 770              		.comm	aiCenter,1,1
 771              		.global	aiOldline
 772              		.bss
 773 0006 0000     		.align	2
 776              	aiOldline:
 777 0008 00000000 		.space	5
 777      00
 778              		.global	lastATTflightMode
 779 000d 000000   		.data
 782              	lastATTflightMode:
 783 0007 09       		.byte	9
 784              		.text
 785              		.align	2
 786              		.global	displayAttitude
 787              		.thumb
 788              		.thumb_func
 790              	displayAttitude:
 791              	.LFB113:
 211:../src/max7456/osdWidgets.c **** 
 212:../src/max7456/osdWidgets.c **** //////////////////////////////////////////////////////////////////////////////
 213:../src/max7456/osdWidgets.c **** // Attitude Display
 214:../src/max7456/osdWidgets.c **** //////////////////////////////////////////////////////////////////////////////
 215:../src/max7456/osdWidgets.c **** 
 216:../src/max7456/osdWidgets.c **** #define AI_MAX_PITCH_ANGLE (PI/4)  // Bounds of scale used for displaying pitch.
 217:../src/max7456/osdWidgets.c ****                                    // when pitch is >= |this number|, the pitch lines will be at to
 218:../src/max7456/osdWidgets.c **** #define PITCH_L_COL 7
 219:../src/max7456/osdWidgets.c **** #define PITCH_R_COL 22
 220:../src/max7456/osdWidgets.c **** 
 221:../src/max7456/osdWidgets.c **** // columns where the roll line is printed
 222:../src/max7456/osdWidgets.c **** static const uint8_t ROLL_COLUMNS[4] = {10,12,17,19};
 223:../src/max7456/osdWidgets.c **** 
 224:../src/max7456/osdWidgets.c **** uint8_t aiTopPixel;
 225:../src/max7456/osdWidgets.c **** uint8_t aiBottomPixel;
 226:../src/max7456/osdWidgets.c **** uint8_t aiCenter;
 227:../src/max7456/osdWidgets.c **** 
 228:../src/max7456/osdWidgets.c **** uint8_t aiOldline[5] = {0,0,0,0,0};
 229:../src/max7456/osdWidgets.c **** uint8_t lastATTflightMode = 9;
 230:../src/max7456/osdWidgets.c **** 
 231:../src/max7456/osdWidgets.c **** void displayAttitude(float roll, float pitch, uint8_t flightMode)
 232:../src/max7456/osdWidgets.c **** {
 792              		.loc 1 232 0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 40
 795              		@ frame_needed = 0, uses_anonymous_args = 0
 796 066c 10B5     		push	{r4, lr}
 797              	.LCFI4:
 798              		.cfi_def_cfa_offset 8
 799              		.cfi_offset 14, -4
 800              		.cfi_offset 4, -8
 801 066e 8CB0     		sub	sp, sp, #48
 802              	.LCFI5:
 803              		.cfi_def_cfa_offset 56
 804 0670 0590     		str	r0, [sp, #20]	@ float
 805 0672 0491     		str	r1, [sp, #16]	@ float
 806 0674 1346     		mov	r3, r2
 807 0676 8DF80F30 		strb	r3, [sp, #15]
 233:../src/max7456/osdWidgets.c **** 	char     pitchLine;
 234:../src/max7456/osdWidgets.c **** 	char     reticle[2];
 235:../src/max7456/osdWidgets.c **** 	char     rollLine;
 236:../src/max7456/osdWidgets.c **** 	float    gradient;
 237:../src/max7456/osdWidgets.c **** 	uint8_t  aiRows[5] = {0,0,0,0,0};  //Holds the row, in pixels, of AI elements: pitch then roll fro
 808              		.loc 1 237 0
 809 067a 4FF00003 		mov	r3, #0
 810 067e 8DF81830 		strb	r3, [sp, #24]
 811 0682 4FF00003 		mov	r3, #0
 812 0686 8DF81930 		strb	r3, [sp, #25]
 813 068a 4FF00003 		mov	r3, #0
 814 068e 8DF81A30 		strb	r3, [sp, #26]
 815 0692 4FF00003 		mov	r3, #0
 816 0696 8DF81B30 		strb	r3, [sp, #27]
 817 069a 4FF00003 		mov	r3, #0
 818 069e 8DF81C30 		strb	r3, [sp, #28]
 238:../src/max7456/osdWidgets.c ****     uint8_t  i;
 239:../src/max7456/osdWidgets.c ****     uint16_t distFar;
 240:../src/max7456/osdWidgets.c ****     uint16_t distNear;
 241:../src/max7456/osdWidgets.c **** 
 242:../src/max7456/osdWidgets.c ****     //Calculate row of new pitch lines
 243:../src/max7456/osdWidgets.c ****     aiRows[0] = constrain((int)aiCenter +
 819              		.loc 1 243 0
 820 06a2 40F20003 		movw	r3, #:lower16:aiCenter
 821 06a6 C0F20003 		movt	r3, #:upper16:aiCenter
 822 06aa 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 823 06ac 1A46     		mov	r2, r3
 244:../src/max7456/osdWidgets.c ****     		              (int)((pitch / AI_MAX_PITCH_ANGLE) * (aiCenter - aiTopPixel)),
 824              		.loc 1 244 0
 825 06ae 9DED047A 		flds	s14, [sp, #16]
 826 06b2 DFEDD27A 		flds	s15, .L44
 827 06b6 C7EE277A 		fdivs	s15, s14, s15
 828 06ba 40F20003 		movw	r3, #:lower16:aiCenter
 829 06be C0F20003 		movt	r3, #:upper16:aiCenter
 830 06c2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 831 06c4 1946     		mov	r1, r3
 832 06c6 40F20003 		movw	r3, #:lower16:aiTopPixel
 833 06ca C0F20003 		movt	r3, #:upper16:aiTopPixel
 834 06ce 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 835 06d0 CB1A     		subs	r3, r1, r3
 836 06d2 06EE103A 		fmsr	s12, r3	@ int
 837 06d6 B8EEC67A 		fsitos	s14, s12
 838 06da 67EE877A 		fmuls	s15, s15, s14
 839 06de FDEEE77A 		ftosizs	s15, s15
 840 06e2 17EE903A 		fmrs	r3, s15	@ int
 243:../src/max7456/osdWidgets.c ****     aiRows[0] = constrain((int)aiCenter +
 841              		.loc 1 243 0
 842 06e6 D318     		adds	r3, r2, r3
 843 06e8 07EE903A 		fmsr	s15, r3	@ int
 844 06ec F8EEE76A 		fsitos	s13, s15
 845 06f0 40F20003 		movw	r3, #:lower16:aiTopPixel
 846 06f4 C0F20003 		movt	r3, #:upper16:aiTopPixel
 847 06f8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 848 06fa 06EE103A 		fmsr	s12, r3	@ int
 849 06fe B8EE467A 		fuitos	s14, s12
 850 0702 40F20003 		movw	r3, #:lower16:aiBottomPixel
 851 0706 C0F20003 		movt	r3, #:upper16:aiBottomPixel
 852 070a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 853 070c 06EE103A 		fmsr	s12, r3	@ int
 854 0710 F8EE467A 		fuitos	s15, s12
 855 0714 16EE900A 		fmrs	r0, s13
 856 0718 17EE101A 		fmrs	r1, s14
 857 071c 17EE902A 		fmrs	r2, s15
 858 0720 FFF7FEFF 		bl	constrain
 859 0724 07EE900A 		fmsr	s15, r0
 860 0728 FCEEE77A 		ftouizs	s15, s15
 861 072c 17EE903A 		fmrs	r3, s15	@ int
 862 0730 DBB2     		uxtb	r3, r3
 863 0732 8DF81830 		strb	r3, [sp, #24]
 245:../src/max7456/osdWidgets.c ****     		               aiTopPixel, aiBottomPixel);
 246:../src/max7456/osdWidgets.c **** 
 247:../src/max7456/osdWidgets.c ****     pitchLine = LINE_ROW_0 + (aiRows[0] % 18);
 864              		.loc 1 247 0
 865 0736 9DF81820 		ldrb	r2, [sp, #24]	@ zero_extendqisi2
 866 073a 48F63963 		movw	r3, #36409
 867 073e C3F6E303 		movt	r3, 14563
 868 0742 A3FB0203 		umull	r0, r3, r3, r2
 869 0746 4FEA9301 		lsr	r1, r3, #2
 870 074a 0B46     		mov	r3, r1
 871 074c 4FEAC303 		lsl	r3, r3, #3
 872 0750 5B18     		adds	r3, r3, r1
 873 0752 4FEA4303 		lsl	r3, r3, #1
 874 0756 D31A     		subs	r3, r2, r3
 875 0758 DBB2     		uxtb	r3, r3
 876 075a A3F18003 		sub	r3, r3, #128
 877 075e DBB2     		uxtb	r3, r3
 878 0760 8DF82330 		strb	r3, [sp, #35]
 248:../src/max7456/osdWidgets.c **** 
 249:../src/max7456/osdWidgets.c ****     if (aiOldline[0] != aiRows[0] / 18)
 879              		.loc 1 249 0
 880 0764 40F20003 		movw	r3, #:lower16:aiOldline
 881 0768 C0F20003 		movt	r3, #:upper16:aiOldline
 882 076c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 883 076e 9DF81810 		ldrb	r1, [sp, #24]	@ zero_extendqisi2
 884 0772 48F63963 		movw	r3, #36409
 885 0776 C3F6E303 		movt	r3, 14563
 886 077a A3FB0103 		umull	r0, r3, r3, r1
 887 077e 4FEA9303 		lsr	r3, r3, #2
 888 0782 DBB2     		uxtb	r3, r3
 889 0784 9A42     		cmp	r2, r3
 890 0786 2FD0     		beq	.L39
 250:../src/max7456/osdWidgets.c ****     {
 251:../src/max7456/osdWidgets.c ****         //Remove old pitch lines if not overwritten by new ones
 252:../src/max7456/osdWidgets.c ****         writeMax7456Chars(NULL, 1, 0, aiOldline[0], PITCH_L_COL);
 891              		.loc 1 252 0
 892 0788 40F20003 		movw	r3, #:lower16:aiOldline
 893 078c C0F20003 		movt	r3, #:upper16:aiOldline
 894 0790 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 895 0792 4FF00702 		mov	r2, #7
 896 0796 0092     		str	r2, [sp, #0]
 897 0798 4FF00000 		mov	r0, #0
 898 079c 4FF00101 		mov	r1, #1
 899 07a0 4FF00002 		mov	r2, #0
 900 07a4 FFF7FEFF 		bl	writeMax7456Chars
 253:../src/max7456/osdWidgets.c ****         writeMax7456Chars(NULL, 1, 0, aiOldline[0], PITCH_R_COL);
 901              		.loc 1 253 0
 902 07a8 40F20003 		movw	r3, #:lower16:aiOldline
 903 07ac C0F20003 		movt	r3, #:upper16:aiOldline
 904 07b0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 905 07b2 4FF01602 		mov	r2, #22
 906 07b6 0092     		str	r2, [sp, #0]
 907 07b8 4FF00000 		mov	r0, #0
 908 07bc 4FF00101 		mov	r1, #1
 909 07c0 4FF00002 		mov	r2, #0
 910 07c4 FFF7FEFF 		bl	writeMax7456Chars
 254:../src/max7456/osdWidgets.c ****         aiOldline[0] = aiRows[0] / 18;
 911              		.loc 1 254 0
 912 07c8 9DF81820 		ldrb	r2, [sp, #24]	@ zero_extendqisi2
 913 07cc 48F63963 		movw	r3, #36409
 914 07d0 C3F6E303 		movt	r3, 14563
 915 07d4 A3FB0213 		umull	r1, r3, r3, r2
 916 07d8 4FEA9303 		lsr	r3, r3, #2
 917 07dc DAB2     		uxtb	r2, r3
 918 07de 40F20003 		movw	r3, #:lower16:aiOldline
 919 07e2 C0F20003 		movt	r3, #:upper16:aiOldline
 920 07e6 1A70     		strb	r2, [r3, #0]
 921              	.L39:
 255:../src/max7456/osdWidgets.c ****     }
 256:../src/max7456/osdWidgets.c **** 
 257:../src/max7456/osdWidgets.c ****     //Write new pitch lines
 258:../src/max7456/osdWidgets.c ****     writeMax7456Chars(&pitchLine, 1, 0, aiOldline[0], PITCH_L_COL);
 922              		.loc 1 258 0
 923 07e8 40F20003 		movw	r3, #:lower16:aiOldline
 924 07ec C0F20003 		movt	r3, #:upper16:aiOldline
 925 07f0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 926 07f2 4FF00702 		mov	r2, #7
 927 07f6 0092     		str	r2, [sp, #0]
 928 07f8 0DF12302 		add	r2, sp, #35
 929 07fc 1046     		mov	r0, r2
 930 07fe 4FF00101 		mov	r1, #1
 931 0802 4FF00002 		mov	r2, #0
 932 0806 FFF7FEFF 		bl	writeMax7456Chars
 259:../src/max7456/osdWidgets.c ****     writeMax7456Chars(&pitchLine, 1, 0, aiOldline[0], PITCH_R_COL);
 933              		.loc 1 259 0
 934 080a 40F20003 		movw	r3, #:lower16:aiOldline
 935 080e C0F20003 		movt	r3, #:upper16:aiOldline
 936 0812 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 937 0814 4FF01602 		mov	r2, #22
 938 0818 0092     		str	r2, [sp, #0]
 939 081a 0DF12302 		add	r2, sp, #35
 940 081e 1046     		mov	r0, r2
 941 0820 4FF00101 		mov	r1, #1
 942 0824 4FF00002 		mov	r2, #0
 943 0828 FFF7FEFF 		bl	writeMax7456Chars
 260:../src/max7456/osdWidgets.c **** 
 261:../src/max7456/osdWidgets.c ****     //Calculate row (in pixels) of new roll lines
 262:../src/max7456/osdWidgets.c ****     distFar  = (ROLL_COLUMNS[3] - (RETICLE_COL + 1))*12 + 6; //horizontal pixels between centre of 
 944              		.loc 1 262 0
 945 082c 40F20003 		movw	r3, #:lower16:ROLL_COLUMNS
 946 0830 C0F20003 		movt	r3, #:upper16:ROLL_COLUMNS
 947 0834 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 948 0836 1A46     		mov	r2, r3	@ movhi
 949 0838 4FEA4202 		lsl	r2, r2, #1
 950 083c D318     		adds	r3, r2, r3
 951 083e 4FEA8303 		lsl	r3, r3, #2
 952 0842 9BB2     		uxth	r3, r3
 953 0844 A3F1AE03 		sub	r3, r3, #174
 954 0848 ADF82C30 		strh	r3, [sp, #44]	@ movhi
 263:../src/max7456/osdWidgets.c ****     distNear = (ROLL_COLUMNS[2] - (RETICLE_COL + 1))*12 + 6;
 955              		.loc 1 263 0
 956 084c 40F20003 		movw	r3, #:lower16:ROLL_COLUMNS
 957 0850 C0F20003 		movt	r3, #:upper16:ROLL_COLUMNS
 958 0854 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 959 0856 1A46     		mov	r2, r3	@ movhi
 960 0858 4FEA4202 		lsl	r2, r2, #1
 961 085c D318     		adds	r3, r2, r3
 962 085e 4FEA8303 		lsl	r3, r3, #2
 963 0862 9BB2     		uxth	r3, r3
 964 0864 A3F1AE03 		sub	r3, r3, #174
 965 0868 ADF82A30 		strh	r3, [sp, #42]	@ movhi
 264:../src/max7456/osdWidgets.c ****     gradient = 1.4f * roll; // was "tan(roll)", yes rude but damn fast !!
 966              		.loc 1 264 0
 967 086c 9DED057A 		flds	s14, [sp, #20]
 968 0870 DFED637A 		flds	s15, .L44+4
 969 0874 67EE277A 		fmuls	s15, s14, s15
 970 0878 CDED097A 		fsts	s15, [sp, #36]
 265:../src/max7456/osdWidgets.c **** 
 266:../src/max7456/osdWidgets.c ****     aiRows[1] = constrain( 2 * aiCenter - aiRows[4], aiTopPixel, aiBottomPixel);
 971              		.loc 1 266 0
 972 087c 40F20003 		movw	r3, #:lower16:aiCenter
 973 0880 C0F20003 		movt	r3, #:upper16:aiCenter
 974 0884 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 975 0886 4FEA4302 		lsl	r2, r3, #1
 976 088a 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 977 088e D31A     		subs	r3, r2, r3
 978 0890 06EE103A 		fmsr	s12, r3	@ int
 979 0894 F8EEC66A 		fsitos	s13, s12
 980 0898 40F20003 		movw	r3, #:lower16:aiTopPixel
 981 089c C0F20003 		movt	r3, #:upper16:aiTopPixel
 982 08a0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 983 08a2 07EE903A 		fmsr	s15, r3	@ int
 984 08a6 B8EE677A 		fuitos	s14, s15
 985 08aa 40F20003 		movw	r3, #:lower16:aiBottomPixel
 986 08ae C0F20003 		movt	r3, #:upper16:aiBottomPixel
 987 08b2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 988 08b4 06EE103A 		fmsr	s12, r3	@ int
 989 08b8 F8EE467A 		fuitos	s15, s12
 990 08bc 16EE900A 		fmrs	r0, s13
 991 08c0 17EE101A 		fmrs	r1, s14
 992 08c4 17EE902A 		fmrs	r2, s15
 993 08c8 FFF7FEFF 		bl	constrain
 994 08cc 07EE900A 		fmsr	s15, r0
 995 08d0 FCEEE77A 		ftouizs	s15, s15
 996 08d4 17EE903A 		fmrs	r3, s15	@ int
 997 08d8 DBB2     		uxtb	r3, r3
 998 08da 8DF81930 		strb	r3, [sp, #25]
 267:../src/max7456/osdWidgets.c ****     aiRows[2] = constrain( 2 * aiCenter - aiRows[3], aiTopPixel, aiBottomPixel);
 999              		.loc 1 267 0
 1000 08de 40F20003 		movw	r3, #:lower16:aiCenter
 1001 08e2 C0F20003 		movt	r3, #:upper16:aiCenter
 1002 08e6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1003 08e8 4FEA4302 		lsl	r2, r3, #1
 1004 08ec 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2
 1005 08f0 D31A     		subs	r3, r2, r3
 1006 08f2 07EE903A 		fmsr	s15, r3	@ int
 1007 08f6 F8EEE76A 		fsitos	s13, s15
 1008 08fa 40F20003 		movw	r3, #:lower16:aiTopPixel
 1009 08fe C0F20003 		movt	r3, #:upper16:aiTopPixel
 1010 0902 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1011 0904 06EE103A 		fmsr	s12, r3	@ int
 1012 0908 B8EE467A 		fuitos	s14, s12
 1013 090c 40F20003 		movw	r3, #:lower16:aiBottomPixel
 1014 0910 C0F20003 		movt	r3, #:upper16:aiBottomPixel
 1015 0914 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1016 0916 06EE103A 		fmsr	s12, r3	@ int
 1017 091a F8EE467A 		fuitos	s15, s12
 1018 091e 16EE900A 		fmrs	r0, s13
 1019 0922 17EE101A 		fmrs	r1, s14
 1020 0926 17EE902A 		fmrs	r2, s15
 1021 092a FFF7FEFF 		bl	constrain
 1022 092e 07EE900A 		fmsr	s15, r0
 1023 0932 FCEEE77A 		ftouizs	s15, s15
 1024 0936 17EE903A 		fmrs	r3, s15	@ int
 1025 093a DBB2     		uxtb	r3, r3
 1026 093c 8DF81A30 		strb	r3, [sp, #26]
 268:../src/max7456/osdWidgets.c ****     aiRows[3] = constrain(aiCenter - (int)(((float)distNear) * gradient), aiTopPixel, aiBottomPixel
 1027              		.loc 1 268 0
 1028 0940 40F20003 		movw	r3, #:lower16:aiCenter
 1029 0944 C0F20003 		movt	r3, #:upper16:aiCenter
 1030 0948 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1031 094a BDF82A20 		ldrh	r2, [sp, #42]
 1032 094e 06EE902A 		fmsr	s13, r2	@ int
 1033 0952 B8EE667A 		fuitos	s14, s13
 1034 0956 DDED097A 		flds	s15, [sp, #36]
 1035 095a 67EE277A 		fmuls	s15, s14, s15
 1036 095e FDEEE77A 		ftosizs	s15, s15
 1037 0962 17EE902A 		fmrs	r2, s15	@ int
 1038 0966 9B1A     		subs	r3, r3, r2
 1039 0968 07EE903A 		fmsr	s15, r3	@ int
 1040 096c F8EEE76A 		fsitos	s13, s15
 1041 0970 40F20003 		movw	r3, #:lower16:aiTopPixel
 1042 0974 C0F20003 		movt	r3, #:upper16:aiTopPixel
 1043 0978 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1044 097a 06EE103A 		fmsr	s12, r3	@ int
 1045 097e B8EE467A 		fuitos	s14, s12
 1046 0982 40F20003 		movw	r3, #:lower16:aiBottomPixel
 1047 0986 C0F20003 		movt	r3, #:upper16:aiBottomPixel
 1048 098a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1049 098c 06EE103A 		fmsr	s12, r3	@ int
 1050 0990 F8EE467A 		fuitos	s15, s12
 1051 0994 16EE900A 		fmrs	r0, s13
 1052 0998 17EE101A 		fmrs	r1, s14
 1053 099c 17EE902A 		fmrs	r2, s15
 1054 09a0 FFF7FEFF 		bl	constrain
 1055 09a4 07EE900A 		fmsr	s15, r0
 1056 09a8 FCEEE77A 		ftouizs	s15, s15
 1057 09ac 17EE903A 		fmrs	r3, s15	@ int
 1058 09b0 DBB2     		uxtb	r3, r3
 1059 09b2 8DF81B30 		strb	r3, [sp, #27]
 269:../src/max7456/osdWidgets.c ****     aiRows[4] = constrain(aiCenter - (int)(((float)distFar)  * gradient), aiTopPixel, aiBottomPixel
 1060              		.loc 1 269 0
 1061 09b6 40F20003 		movw	r3, #:lower16:aiCenter
 1062 09ba C0F20003 		movt	r3, #:upper16:aiCenter
 1063 09be 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1064 09c0 BDF82C20 		ldrh	r2, [sp, #44]
 1065 09c4 06EE902A 		fmsr	s13, r2	@ int
 1066 09c8 B8EE667A 		fuitos	s14, s13
 1067 09cc DDED097A 		flds	s15, [sp, #36]
 1068 09d0 67EE277A 		fmuls	s15, s14, s15
 1069 09d4 FDEEE77A 		ftosizs	s15, s15
 1070 09d8 17EE902A 		fmrs	r2, s15	@ int
 1071 09dc 9B1A     		subs	r3, r3, r2
 1072 09de 07EE903A 		fmsr	s15, r3	@ int
 1073 09e2 F8EEE76A 		fsitos	s13, s15
 1074 09e6 40F20003 		movw	r3, #:lower16:aiTopPixel
 1075 09ea C0F20003 		movt	r3, #:upper16:aiTopPixel
 1076 09ee 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1077 09f0 06EE103A 		fmsr	s12, r3	@ int
 1078 09f4 B8EE467A 		fuitos	s14, s12
 1079 09f8 04E0     		b	.L45
 1080              	.L46:
 1081 09fa 00BF     		.align	2
 1082              	.L44:
 1083 09fc DB0F493F 		.word	1061752795
 1084 0a00 3333B33F 		.word	1068708659
 1085              	.L45:
 1086 0a04 40F20003 		movw	r3, #:lower16:aiBottomPixel
 1087 0a08 C0F20003 		movt	r3, #:upper16:aiBottomPixel
 1088 0a0c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1089 0a0e 06EE103A 		fmsr	s12, r3	@ int
 1090 0a12 F8EE467A 		fuitos	s15, s12
 1091 0a16 16EE900A 		fmrs	r0, s13
 1092 0a1a 17EE101A 		fmrs	r1, s14
 1093 0a1e 17EE902A 		fmrs	r2, s15
 1094 0a22 FFF7FEFF 		bl	constrain
 1095 0a26 07EE900A 		fmsr	s15, r0
 1096 0a2a FCEEE77A 		ftouizs	s15, s15
 1097 0a2e 17EE903A 		fmrs	r3, s15	@ int
 1098 0a32 DBB2     		uxtb	r3, r3
 1099 0a34 8DF81C30 		strb	r3, [sp, #28]
 270:../src/max7456/osdWidgets.c **** 
 271:../src/max7456/osdWidgets.c ****     //writing new roll lines to screen
 272:../src/max7456/osdWidgets.c ****     for (i = 1; i < 5; i++ )
 1100              		.loc 1 272 0
 1101 0a38 4FF00103 		mov	r3, #1
 1102 0a3c 8DF82F30 		strb	r3, [sp, #47]
 1103 0a40 83E0     		b	.L40
 1104              	.L42:
 273:../src/max7456/osdWidgets.c ****     {
 274:../src/max7456/osdWidgets.c ****         // clear previous roll lines if not going to overwrite
 275:../src/max7456/osdWidgets.c ****         if (aiOldline[i] != aiRows[i] / 18)
 1105              		.loc 1 275 0
 1106 0a42 9DF82F20 		ldrb	r2, [sp, #47]	@ zero_extendqisi2
 1107 0a46 40F20003 		movw	r3, #:lower16:aiOldline
 1108 0a4a C0F20003 		movt	r3, #:upper16:aiOldline
 1109 0a4e 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 1110 0a50 9DF82F30 		ldrb	r3, [sp, #47]	@ zero_extendqisi2
 1111 0a54 0CA8     		add	r0, sp, #48
 1112 0a56 C318     		adds	r3, r0, r3
 1113 0a58 13F8181C 		ldrb	r1, [r3, #-24]	@ zero_extendqisi2
 1114 0a5c 48F63963 		movw	r3, #36409
 1115 0a60 C3F6E303 		movt	r3, 14563
 1116 0a64 A3FB0103 		umull	r0, r3, r3, r1
 1117 0a68 4FEA9303 		lsr	r3, r3, #2
 1118 0a6c DBB2     		uxtb	r3, r3
 1119 0a6e 9A42     		cmp	r2, r3
 1120 0a70 2FD0     		beq	.L41
 276:../src/max7456/osdWidgets.c ****         {
 277:../src/max7456/osdWidgets.c ****             writeMax7456Chars(NULL, 1, 0, aiOldline[i], ROLL_COLUMNS[i-1]);
 1121              		.loc 1 277 0
 1122 0a72 9DF82F20 		ldrb	r2, [sp, #47]	@ zero_extendqisi2
 1123 0a76 40F20003 		movw	r3, #:lower16:aiOldline
 1124 0a7a C0F20003 		movt	r3, #:upper16:aiOldline
 1125 0a7e 9C5C     		ldrb	r4, [r3, r2]	@ zero_extendqisi2
 1126 0a80 9DF82F30 		ldrb	r3, [sp, #47]	@ zero_extendqisi2
 1127 0a84 03F1FF32 		add	r2, r3, #-1
 1128 0a88 40F20003 		movw	r3, #:lower16:ROLL_COLUMNS
 1129 0a8c C0F20003 		movt	r3, #:upper16:ROLL_COLUMNS
 1130 0a90 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1131 0a92 0093     		str	r3, [sp, #0]
 1132 0a94 4FF00000 		mov	r0, #0
 1133 0a98 4FF00101 		mov	r1, #1
 1134 0a9c 4FF00002 		mov	r2, #0
 1135 0aa0 2346     		mov	r3, r4
 1136 0aa2 FFF7FEFF 		bl	writeMax7456Chars
 278:../src/max7456/osdWidgets.c ****             aiOldline[i] = aiRows[i]/18;
 1137              		.loc 1 278 0
 1138 0aa6 9DF82F20 		ldrb	r2, [sp, #47]	@ zero_extendqisi2
 1139 0aaa 9DF82F30 		ldrb	r3, [sp, #47]	@ zero_extendqisi2
 1140 0aae 0CA9     		add	r1, sp, #48
 1141 0ab0 CB18     		adds	r3, r1, r3
 1142 0ab2 13F8181C 		ldrb	r1, [r3, #-24]	@ zero_extendqisi2
 1143 0ab6 48F63963 		movw	r3, #36409
 1144 0aba C3F6E303 		movt	r3, 14563
 1145 0abe A3FB0103 		umull	r0, r3, r3, r1
 1146 0ac2 4FEA9303 		lsr	r3, r3, #2
 1147 0ac6 D9B2     		uxtb	r1, r3
 1148 0ac8 40F20003 		movw	r3, #:lower16:aiOldline
 1149 0acc C0F20003 		movt	r3, #:upper16:aiOldline
 1150 0ad0 9954     		strb	r1, [r3, r2]
 1151              	.L41:
 279:../src/max7456/osdWidgets.c ****         }
 280:../src/max7456/osdWidgets.c **** 
 281:../src/max7456/osdWidgets.c ****         //converting rows (in pixels) to character addresses used for the 'lines'
 282:../src/max7456/osdWidgets.c ****         rollLine = LINE_ROW_0 + (aiRows[i] % 18);
 1152              		.loc 1 282 0
 1153 0ad2 9DF82F30 		ldrb	r3, [sp, #47]	@ zero_extendqisi2
 1154 0ad6 0CA9     		add	r1, sp, #48
 1155 0ad8 CB18     		adds	r3, r1, r3
 1156 0ada 13F8182C 		ldrb	r2, [r3, #-24]	@ zero_extendqisi2
 1157 0ade 48F63963 		movw	r3, #36409
 1158 0ae2 C3F6E303 		movt	r3, 14563
 1159 0ae6 A3FB0203 		umull	r0, r3, r3, r2
 1160 0aea 4FEA9301 		lsr	r1, r3, #2
 1161 0aee 0B46     		mov	r3, r1
 1162 0af0 4FEAC303 		lsl	r3, r3, #3
 1163 0af4 5B18     		adds	r3, r3, r1
 1164 0af6 4FEA4303 		lsl	r3, r3, #1
 1165 0afa D31A     		subs	r3, r2, r3
 1166 0afc DBB2     		uxtb	r3, r3
 1167 0afe A3F18003 		sub	r3, r3, #128
 1168 0b02 DBB2     		uxtb	r3, r3
 1169 0b04 8DF81F30 		strb	r3, [sp, #31]
 283:../src/max7456/osdWidgets.c ****         writeMax7456Chars(&rollLine, 1, 0, aiOldline[i], ROLL_COLUMNS[i-1]);
 1170              		.loc 1 283 0
 1171 0b08 9DF82F20 		ldrb	r2, [sp, #47]	@ zero_extendqisi2
 1172 0b0c 40F20003 		movw	r3, #:lower16:aiOldline
 1173 0b10 C0F20003 		movt	r3, #:upper16:aiOldline
 1174 0b14 9C5C     		ldrb	r4, [r3, r2]	@ zero_extendqisi2
 1175 0b16 9DF82F30 		ldrb	r3, [sp, #47]	@ zero_extendqisi2
 1176 0b1a 03F1FF32 		add	r2, r3, #-1
 1177 0b1e 40F20003 		movw	r3, #:lower16:ROLL_COLUMNS
 1178 0b22 C0F20003 		movt	r3, #:upper16:ROLL_COLUMNS
 1179 0b26 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1180 0b28 0093     		str	r3, [sp, #0]
 1181 0b2a 0DF11F03 		add	r3, sp, #31
 1182 0b2e 1846     		mov	r0, r3
 1183 0b30 4FF00101 		mov	r1, #1
 1184 0b34 4FF00002 		mov	r2, #0
 1185 0b38 2346     		mov	r3, r4
 1186 0b3a FFF7FEFF 		bl	writeMax7456Chars
 272:../src/max7456/osdWidgets.c ****     for (i = 1; i < 5; i++ )
 1187              		.loc 1 272 0
 1188 0b3e 9DF82F30 		ldrb	r3, [sp, #47]
 1189 0b42 03F10103 		add	r3, r3, #1
 1190 0b46 8DF82F30 		strb	r3, [sp, #47]
 1191              	.L40:
 272:../src/max7456/osdWidgets.c ****     for (i = 1; i < 5; i++ )
 1192              		.loc 1 272 0 is_stmt 0 discriminator 1
 1193 0b4a 9DF82F30 		ldrb	r3, [sp, #47]	@ zero_extendqisi2
 1194 0b4e 042B     		cmp	r3, #4
 1195 0b50 7FF677AF 		bls	.L42
 284:../src/max7456/osdWidgets.c ****     }
 285:../src/max7456/osdWidgets.c **** 
 286:../src/max7456/osdWidgets.c ****     // Reticle on the center of the screen
 287:../src/max7456/osdWidgets.c ****     // 0 - rate mode (no letter)
 288:../src/max7456/osdWidgets.c ****     // 1 - Attitude 'S'
 289:../src/max7456/osdWidgets.c ****     // 2 - GPS position hold 'P'
 290:../src/max7456/osdWidgets.c ****     // 3 - GPS navigation 'N'
 291:../src/max7456/osdWidgets.c **** 
 292:../src/max7456/osdWidgets.c ****     if (lastATTflightMode != flightMode)
 1196              		.loc 1 292 0 is_stmt 1
 1197 0b54 40F20003 		movw	r3, #:lower16:lastATTflightMode
 1198 0b58 C0F20003 		movt	r3, #:upper16:lastATTflightMode
 1199 0b5c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1200 0b5e 9DF80F20 		ldrb	r2, [sp, #15]	@ zero_extendqisi2
 1201 0b62 9A42     		cmp	r2, r3
 1202 0b64 27D0     		beq	.L38
 293:../src/max7456/osdWidgets.c ****     {
 294:../src/max7456/osdWidgets.c ****         reticle[0] = flightMode * 2 + 1;
 1203              		.loc 1 294 0
 1204 0b66 9DF80F30 		ldrb	r3, [sp, #15]
 1205 0b6a 4FEA4303 		lsl	r3, r3, #1
 1206 0b6e DBB2     		uxtb	r3, r3
 1207 0b70 03F10103 		add	r3, r3, #1
 1208 0b74 DBB2     		uxtb	r3, r3
 1209 0b76 8DF82030 		strb	r3, [sp, #32]
 295:../src/max7456/osdWidgets.c ****         reticle[1] = reticle[0] + 1;
 1210              		.loc 1 295 0
 1211 0b7a 9DF82030 		ldrb	r3, [sp, #32]	@ zero_extendqisi2
 1212 0b7e 03F10103 		add	r3, r3, #1
 1213 0b82 DBB2     		uxtb	r3, r3
 1214 0b84 8DF82130 		strb	r3, [sp, #33]
 296:../src/max7456/osdWidgets.c ****         writeMax7456Chars(reticle, 2, 0, reticleRow, RETICLE_COL); //write 2 chars to row (middle),
 1215              		.loc 1 296 0
 1216 0b88 40F20003 		movw	r3, #:lower16:reticleRow
 1217 0b8c C0F20003 		movt	r3, #:upper16:reticleRow
 1218 0b90 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1219 0b92 4FF00E02 		mov	r2, #14
 1220 0b96 0092     		str	r2, [sp, #0]
 1221 0b98 08AA     		add	r2, sp, #32
 1222 0b9a 1046     		mov	r0, r2
 1223 0b9c 4FF00201 		mov	r1, #2
 1224 0ba0 4FF00002 		mov	r2, #0
 1225 0ba4 FFF7FEFF 		bl	writeMax7456Chars
 297:../src/max7456/osdWidgets.c ****         lastATTflightMode = flightMode;
 1226              		.loc 1 297 0
 1227 0ba8 40F20003 		movw	r3, #:lower16:lastATTflightMode
 1228 0bac C0F20003 		movt	r3, #:upper16:lastATTflightMode
 1229 0bb0 9DF80F20 		ldrb	r2, [sp, #15]
 1230 0bb4 1A70     		strb	r2, [r3, #0]
 1231              	.L38:
 298:../src/max7456/osdWidgets.c ****     }
 299:../src/max7456/osdWidgets.c **** }
 1232              		.loc 1 299 0
 1233 0bb6 0CB0     		add	sp, sp, #48
 1234 0bb8 10BD     		pop	{r4, pc}
 1235              		.cfi_endproc
 1236              	.LFE113:
 1238              		.global	lastOSDheading
 1239              		.data
 1240              		.align	1
 1243              	lastOSDheading:
 1244 0008 6901     		.short	361
 1245              		.section	.rodata
 1246              		.align	2
 1247              	.LC7:
 1248 004c 16253364 		.ascii	"\026%3d\027\000"
 1248      1700
 1249 0052 0000     		.text
 1250 0bba 00BF     		.align	2
 1251              		.global	displayHeading
 1252              		.thumb
 1253              		.thumb_func
 1255              	displayHeading:
 1256              	.LFB114:
 300:../src/max7456/osdWidgets.c **** 
 301:../src/max7456/osdWidgets.c **** ///////////////////////////////////////////////////////////////////////////////
 302:../src/max7456/osdWidgets.c **** // Heading Display
 303:../src/max7456/osdWidgets.c **** ///////////////////////////////////////////////////////////////////////////////
 304:../src/max7456/osdWidgets.c **** 
 305:../src/max7456/osdWidgets.c **** #define COMPASS_ROW 1
 306:../src/max7456/osdWidgets.c **** #define COMPASS_COL 13
 307:../src/max7456/osdWidgets.c **** 
 308:../src/max7456/osdWidgets.c **** int16_t lastOSDheading = 361; // bogus value to force update
 309:../src/max7456/osdWidgets.c **** 
 310:../src/max7456/osdWidgets.c **** void displayHeading(float currentHeading)
 311:../src/max7456/osdWidgets.c **** {
 1257              		.loc 1 311 0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 16
 1260              		@ frame_needed = 0, uses_anonymous_args = 0
 1261 0bbc 00B5     		push	{lr}
 1262              	.LCFI6:
 1263              		.cfi_def_cfa_offset 4
 1264              		.cfi_offset 14, -4
 1265 0bbe 87B0     		sub	sp, sp, #28
 1266              	.LCFI7:
 1267              		.cfi_def_cfa_offset 32
 1268 0bc0 0390     		str	r0, [sp, #12]	@ float
 312:../src/max7456/osdWidgets.c **** 	char buf[6];
 313:../src/max7456/osdWidgets.c ****     int16_t currentHeadingDeg;
 314:../src/max7456/osdWidgets.c **** 
 315:../src/max7456/osdWidgets.c ****     currentHeadingDeg = (int16_t)((currentHeading * 180.0f / PI) + 360.0f) % 360;
 1269              		.loc 1 315 0
 1270 0bc2 9DED037A 		flds	s14, [sp, #12]
 1271 0bc6 DFED287A 		flds	s15, .L49
 1272 0bca 67EE277A 		fmuls	s15, s14, s15
 1273 0bce 9FED277A 		flds	s14, .L49+4
 1274 0bd2 C7EE877A 		fdivs	s15, s15, s14
 1275 0bd6 9FED267A 		flds	s14, .L49+8
 1276 0bda 77EE877A 		fadds	s15, s15, s14
 1277 0bde FDEEE77A 		ftosizs	s15, s15
 1278 0be2 17EE903A 		fmrs	r3, s15	@ int
 1279 0be6 9BB2     		uxth	r3, r3
 1280 0be8 1BB2     		sxth	r3, r3
 1281 0bea 46F2B702 		movw	r2, #24759
 1282 0bee CBF20B62 		movt	r2, 46603
 1283 0bf2 82FB0312 		smull	r1, r2, r2, r3
 1284 0bf6 D218     		adds	r2, r2, r3
 1285 0bf8 4FEA2221 		asr	r1, r2, #8
 1286 0bfc 4FEAE372 		asr	r2, r3, #31
 1287 0c00 8A1A     		subs	r2, r1, r2
 1288 0c02 4FF4B471 		mov	r1, #360
 1289 0c06 01FB02F2 		mul	r2, r1, r2
 1290 0c0a 9B1A     		subs	r3, r3, r2
 1291 0c0c ADF81630 		strh	r3, [sp, #22]	@ movhi
 316:../src/max7456/osdWidgets.c **** 
 317:../src/max7456/osdWidgets.c ****     if (currentHeadingDeg != lastOSDheading)
 1292              		.loc 1 317 0
 1293 0c10 40F20003 		movw	r3, #:lower16:lastOSDheading
 1294 0c14 C0F20003 		movt	r3, #:upper16:lastOSDheading
 1295 0c18 1B88     		ldrh	r3, [r3, #0]
 1296 0c1a BDF91620 		ldrsh	r2, [sp, #22]
 1297 0c1e 1BB2     		sxth	r3, r3
 1298 0c20 9A42     		cmp	r2, r3
 1299 0c22 1FD0     		beq	.L47
 318:../src/max7456/osdWidgets.c ****     {
 319:../src/max7456/osdWidgets.c ****     	snprintf(buf ,6, "\026%3d\027", currentHeadingDeg); // \026 is compass \027 is degree symbol
 1300              		.loc 1 319 0
 1301 0c24 BDF91630 		ldrsh	r3, [sp, #22]
 1302 0c28 04AA     		add	r2, sp, #16
 1303 0c2a 1046     		mov	r0, r2
 1304 0c2c 4FF00601 		mov	r1, #6
 1305 0c30 40F20002 		movw	r2, #:lower16:.LC7
 1306 0c34 C0F20002 		movt	r2, #:upper16:.LC7
 1307 0c38 FFF7FEFF 		bl	snprintf
 320:../src/max7456/osdWidgets.c **** 
 321:../src/max7456/osdWidgets.c ****     	writeMax7456Chars(buf, 5, 0, COMPASS_ROW, COMPASS_COL);
 1308              		.loc 1 321 0
 1309 0c3c 4FF00D03 		mov	r3, #13
 1310 0c40 0093     		str	r3, [sp, #0]
 1311 0c42 04AB     		add	r3, sp, #16
 1312 0c44 1846     		mov	r0, r3
 1313 0c46 4FF00501 		mov	r1, #5
 1314 0c4a 4FF00002 		mov	r2, #0
 1315 0c4e 4FF00103 		mov	r3, #1
 1316 0c52 FFF7FEFF 		bl	writeMax7456Chars
 322:../src/max7456/osdWidgets.c **** 
 323:../src/max7456/osdWidgets.c ****         lastOSDheading = currentHeadingDeg;
 1317              		.loc 1 323 0
 1318 0c56 40F20003 		movw	r3, #:lower16:lastOSDheading
 1319 0c5a C0F20003 		movt	r3, #:upper16:lastOSDheading
 1320 0c5e BDF81620 		ldrh	r2, [sp, #22]	@ movhi
 1321 0c62 1A80     		strh	r2, [r3, #0]	@ movhi
 1322              	.L47:
 324:../src/max7456/osdWidgets.c ****     }
 325:../src/max7456/osdWidgets.c **** }
 1323              		.loc 1 325 0
 1324 0c64 07B0     		add	sp, sp, #28
 1325 0c66 00BD     		pop	{pc}
 1326              	.L50:
 1327              		.align	2
 1328              	.L49:
 1329 0c68 00003443 		.word	1127481344
 1330 0c6c DB0F4940 		.word	1078530011
 1331 0c70 0000B443 		.word	1135869952
 1332              		.cfi_endproc
 1333              	.LFE114:
 1335              	.Letext0:
 1336              		.file 2 "c:\\program files\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/gcc/ar
 1337              		.file 3 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src/pid.h"
 1338              		.file 4 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src/aq32Plus_F3.h"
 1339              		.file 5 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src\\gps/gpsMediaTe
 1340              		.file 6 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src\\gps/gpsNMEA.h"
 1341              		.file 7 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\src\\gps/gpsUblox.h
 1342              		.file 8 "D:\\Documents and Settings\\e722209\\Desktop\\workspace\\aq32Plus_F3\\Libraries\\CMSIS\\I
DEFINED SYMBOLS
                            *ABS*:00000000 osdWidgets.c
                            *COM*:00000001 mtk19ProcessDataState
                            *COM*:00000001 nmeaProcessDataState
                            *COM*:00000001 ubloxProcessDataState
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:26     .data:00000000 lastHoldState
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:32     .data:00000002 lastAltitude
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:29     .data:00000001 $d
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:38     .data:00000004 lastHoldAltitude
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:41     .rodata:00000000 $d
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:42     .rodata:00000000 .LC0
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:45     .rodata:0000000c .LC1
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:48     .rodata:00000014 .LC2
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:51     .rodata:0000001c .LC3
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:54     .rodata:00000028 .LC4
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:57     .rodata:00000030 .LC5
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:60     .rodata:00000038 .LC6
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:63     .text:00000000 $t
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:68     .text:00000000 displayAltitude
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:399    .text:00000344 $d
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:402    .text:00000348 $t
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:460    .rodata:00000040 ahColumns
                            *COM*:00000001 reticleRow
                            *COM*:00000001 ahTopPixel
                            *COM*:00000001 ahBottomPixel
                            *COM*:00000001 ahCenter
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:476    .bss:00000000 ahOldLine
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:473    .bss:00000000 $d
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:482    .data:00000006 lastAHflightMode
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:496    .text:000003b4 displayArtificialHorizon
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:749    .text:00000650 $d
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:763    .rodata:00000048 ROLL_COLUMNS
                            *COM*:00000001 aiTopPixel
                            *COM*:00000001 aiBottomPixel
                            *COM*:00000001 aiCenter
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:776    .bss:00000008 aiOldline
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:782    .data:00000007 lastATTflightMode
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:785    .text:0000066c $t
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:790    .text:0000066c displayAttitude
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:1083   .text:000009fc $d
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:1086   .text:00000a04 $t
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:1243   .data:00000008 lastOSDheading
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:1247   .rodata:0000004c .LC7
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:1255   .text:00000bbc displayHeading
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:1329   .text:00000c68 $d
                     .debug_frame:00000010 $d
D:\DOCUME~1\e722209\LOCALS~1\Temp\ccb5DAIb.s:1343   .text:00000c74 $t

UNDEFINED SYMBOLS
eepromConfig
snprintf
writeMax7456Chars
__aeabi_i2d
__aeabi_f2d
__aeabi_dsub
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
constrain
